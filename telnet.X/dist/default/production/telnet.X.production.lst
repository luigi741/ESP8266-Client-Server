

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Sun Jul 16 23:31:05 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	mediumconst,global,reloc=2,class=MEDIUMCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1,group=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1,group=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1,group=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1,group=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1,group=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1,group=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	text16,global,reloc=2,class=CODE,delta=1,group=1
    25                           	psect	text17,global,reloc=2,class=CODE,delta=1
    26                           	psect	text18,global,reloc=2,class=CODE,delta=1
    27                           	psect	text19,global,reloc=2,class=CODE,delta=1,group=1
    28                           	psect	text20,global,reloc=2,class=CODE,delta=1
    29                           	psect	text21,global,reloc=2,class=CODE,delta=1
    30                           	psect	text22,global,reloc=2,class=CODE,delta=1
    31                           	psect	text23,global,reloc=2,class=CODE,delta=1
    32                           	psect	text24,global,reloc=2,class=CODE,delta=1
    33                           	psect	text25,global,reloc=2,class=CODE,delta=1
    34                           	psect	text26,global,reloc=2,class=CODE,delta=1
    35                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    36                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    37  0000                     
    38                           ; Version 1.42
    39                           ; Generated 13/04/2017 GMT
    40                           ; 
    41                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    42                           ; All rights reserved.
    43                           ; 
    44                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    45                           ; 
    46                           ; Redistribution and use in source and binary forms, with or without modification, are
    47                           ; permitted provided that the following conditions are met:
    48                           ; 
    49                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    50                           ;        conditions and the following disclaimer.
    51                           ; 
    52                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    53                           ;        of conditions and the following disclaimer in the documentation and/or other
    54                           ;        materials provided with the distribution.
    55                           ; 
    56                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    57                           ;        software without specific prior written permission.
    58                           ; 
    59                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    60                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    61                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    62                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    63                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    64                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    65                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    66                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    67                           ; 
    68                           ; 
    69                           ; Code-generator required, PIC18F4550 Definitions
    70                           ; 
    71                           ; SFR Addresses
    72  0000                     _SPBRG	set	4015
    73  0000                     _BAUDCONbits	set	4024
    74  0000                     _RCSTA	set	4011
    75  0000                     _TXSTAbits	set	4012
    76  0000                     _TRISCbits	set	3988
    77  0000                     _TXSTA	set	4012
    78  0000                     _PIE1bits	set	3997
    79  0000                     _TRISE	set	3990
    80  0000                     _TRISD	set	3989
    81  0000                     _TRISC	set	3988
    82  0000                     _TRISB	set	3987
    83  0000                     _TRISA	set	3986
    84  0000                     _PORTCbits	set	3970
    85  0000                     _TMR1L	set	4046
    86  0000                     _TMR1H	set	4047
    87  0000                     _PORTEbits	set	3972
    88  0000                     _PORTAbits	set	3968
    89  0000                     _RCREG	set	4014
    90  0000                     _PIR1bits	set	3998
    91  0000                     _RCSTAbits	set	4011
    92  0000                     _PORTDbits	set	3971
    93  0000                     _TMR1ON	set	32360
    94                           
    95                           	psect	mediumconst
    96  007EE4                     __pmediumconst:
    97                           	opt stack 0
    98  007EE4  00                 	db	0
    99  007EE5                     STR_6:
   100  007EE5  43                 	db	67	;'C'
   101  007EE6  6F                 	db	111	;'o'
   102  007EE7  75                 	db	117	;'u'
   103  007EE8  6E                 	db	110	;'n'
   104  007EE9  74                 	db	116	;'t'
   105  007EEA  69                 	db	105	;'i'
   106  007EEB  6E                 	db	110	;'n'
   107  007EEC  67                 	db	103	;'g'
   108  007EED  20                 	db	32
   109  007EEE  44                 	db	68	;'D'
   110  007EEF  6F                 	db	111	;'o'
   111  007EF0  77                 	db	119	;'w'
   112  007EF1  6E                 	db	110	;'n'
   113  007EF2  2E                 	db	46
   114  007EF3  2E                 	db	46
   115  007EF4  2E                 	db	46
   116  007EF5  20                 	db	32
   117  007EF6  00                 	db	0
   118  007EF7                     STR_14:
   119  007EF7  20                 	db	32
   120  007EF8  20                 	db	32
   121  007EF9  20                 	db	32
   122  007EFA  20                 	db	32
   123  007EFB  20                 	db	32
   124  007EFC  4D                 	db	77	;'M'
   125  007EFD  6F                 	db	111	;'o'
   126  007EFE  74                 	db	116	;'t'
   127  007EFF  69                 	db	105	;'i'
   128  007F00  6F                 	db	111	;'o'
   129  007F01  6E                 	db	110	;'n'
   130  007F02  20                 	db	32
   131  007F03  20                 	db	32
   132  007F04  20                 	db	32
   133  007F05  20                 	db	32
   134  007F06  20                 	db	32
   135  007F07  00                 	db	0
   136  007F08                     STR_10:
   137  007F08  20                 	db	32
   138  007F09  20                 	db	32
   139  007F0A  20                 	db	32
   140  007F0B  46                 	db	70	;'F'
   141  007F0C  69                 	db	105	;'i'
   142  007F0D  6E                 	db	110	;'n'
   143  007F0E  69                 	db	105	;'i'
   144  007F0F  73                 	db	115	;'s'
   145  007F10  68                 	db	104	;'h'
   146  007F11  65                 	db	101	;'e'
   147  007F12  64                 	db	100	;'d'
   148  007F13  21                 	db	33
   149  007F14  20                 	db	32
   150  007F15  20                 	db	32
   151  007F16  20                 	db	32
   152  007F17  20                 	db	32
   153  007F18  00                 	db	0
   154  007F19                     STR_5:
   155  007F19  20                 	db	32
   156  007F1A  20                 	db	32
   157  007F1B  20                 	db	32
   158  007F1C  20                 	db	32
   159  007F1D  69                 	db	105	;'i'
   160  007F1E  6E                 	db	110	;'n'
   161  007F1F  70                 	db	112	;'p'
   162  007F20  75                 	db	117	;'u'
   163  007F21  74                 	db	116	;'t'
   164  007F22  2E                 	db	46
   165  007F23  2E                 	db	46
   166  007F24  2E                 	db	46
   167  007F25  20                 	db	32
   168  007F26  20                 	db	32
   169  007F27  20                 	db	32
   170  007F28  20                 	db	32
   171  007F29  00                 	db	0
   172  007F2A                     STR_9:
   173  007F2A  20                 	db	32
   174  007F2B  20                 	db	32
   175  007F2C  20                 	db	32
   176  007F2D  43                 	db	67	;'C'
   177  007F2E  6F                 	db	111	;'o'
   178  007F2F  75                 	db	117	;'u'
   179  007F30  6E                 	db	110	;'n'
   180  007F31  74                 	db	116	;'t'
   181  007F32  64                 	db	100	;'d'
   182  007F33  6F                 	db	111	;'o'
   183  007F34  77                 	db	119	;'w'
   184  007F35  6E                 	db	110	;'n'
   185  007F36  20                 	db	32
   186  007F37  20                 	db	32
   187  007F38  20                 	db	32
   188  007F39  20                 	db	32
   189  007F3A  00                 	db	0
   190  007F3B                     STR_12:
   191  007F3B  20                 	db	32
   192  007F3C  20                 	db	32
   193  007F3D  20                 	db	32
   194  007F3E  20                 	db	32
   195  007F3F  53                 	db	83	;'S'
   196  007F40  65                 	db	101	;'e'
   197  007F41  63                 	db	99	;'c'
   198  007F42  75                 	db	117	;'u'
   199  007F43  72                 	db	114	;'r'
   200  007F44  69                 	db	105	;'i'
   201  007F45  74                 	db	116	;'t'
   202  007F46  79                 	db	121	;'y'
   203  007F47  20                 	db	32
   204  007F48  20                 	db	32
   205  007F49  20                 	db	32
   206  007F4A  20                 	db	32
   207  007F4B  00                 	db	0
   208  007F4C                     STR_15:
   209  007F4C  20                 	db	32
   210  007F4D  20                 	db	32
   211  007F4E  20                 	db	32
   212  007F4F  20                 	db	32
   213  007F50  44                 	db	68	;'D'
   214  007F51  65                 	db	101	;'e'
   215  007F52  74                 	db	116	;'t'
   216  007F53  65                 	db	101	;'e'
   217  007F54  63                 	db	99	;'c'
   218  007F55  74                 	db	116	;'t'
   219  007F56  65                 	db	101	;'e'
   220  007F57  64                 	db	100	;'d'
   221  007F58  21                 	db	33
   222  007F59  20                 	db	32
   223  007F5A  20                 	db	32
   224  007F5B  20                 	db	32
   225  007F5C  00                 	db	0
   226  007F5D                     STR_13:
   227  007F5D  20                 	db	32
   228  007F5E  20                 	db	32
   229  007F5F  20                 	db	32
   230  007F60  20                 	db	32
   231  007F61  41                 	db	65	;'A'
   232  007F62  63                 	db	99	;'c'
   233  007F63  74                 	db	116	;'t'
   234  007F64  69                 	db	105	;'i'
   235  007F65  76                 	db	118	;'v'
   236  007F66  61                 	db	97	;'a'
   237  007F67  74                 	db	116	;'t'
   238  007F68  65                 	db	101	;'e'
   239  007F69  64                 	db	100	;'d'
   240  007F6A  20                 	db	32
   241  007F6B  20                 	db	32
   242  007F6C  20                 	db	32
   243  007F6D  00                 	db	0
   244  007F6E                     STR_4:
   245  007F6E  20                 	db	32
   246  007F6F  20                 	db	32
   247  007F70  20                 	db	32
   248  007F71  57                 	db	87	;'W'
   249  007F72  61                 	db	97	;'a'
   250  007F73  69                 	db	105	;'i'
   251  007F74  74                 	db	116	;'t'
   252  007F75  69                 	db	105	;'i'
   253  007F76  6E                 	db	110	;'n'
   254  007F77  67                 	db	103	;'g'
   255  007F78  20                 	db	32
   256  007F79  6F                 	db	111	;'o'
   257  007F7A  6E                 	db	110	;'n'
   258  007F7B  20                 	db	32
   259  007F7C  20                 	db	32
   260  007F7D  20                 	db	32
   261  007F7E  00                 	db	0
   262  007F7F                     STR_16:
   263  007F7F  54                 	db	84	;'T'
   264  007F80  68                 	db	104	;'h'
   265  007F81  65                 	db	101	;'e'
   266  007F82  20                 	db	32
   267  007F83  42                 	db	66	;'B'
   268  007F84  69                 	db	105	;'i'
   269  007F85  72                 	db	114	;'r'
   270  007F86  64                 	db	100	;'d'
   271  007F87  73                 	db	115	;'s'
   272  007F88  21                 	db	33
   273  007F89  20                 	db	32
   274  007F8A  32                 	db	50	;'2'
   275  007F8B  30                 	db	48	;'0'
   276  007F8C  31                 	db	49	;'1'
   277  007F8D  37                 	db	55	;'7'
   278  007F8E  20                 	db	32
   279  007F8F  00                 	db	0
   280  007F90                     STR_3:
   281  007F90  49                 	db	73	;'I'
   282  007F91  6E                 	db	110	;'n'
   283  007F92  63                 	db	99	;'c'
   284  007F93  68                 	db	104	;'h'
   285  007F94  65                 	db	101	;'e'
   286  007F95  73                 	db	115	;'s'
   287  007F96  3A                 	db	58	;':'
   288  007F97  20                 	db	32
   289  007F98  20                 	db	32
   290  007F99  20                 	db	32
   291  007F9A  20                 	db	32
   292  007F9B  20                 	db	32
   293  007F9C  20                 	db	32
   294  007F9D  00                 	db	0
   295  007F9E                     STR_2:
   296  007F9E  43                 	db	67	;'C'
   297  007F9F  65                 	db	101	;'e'
   298  007FA0  6E                 	db	110	;'n'
   299  007FA1  74                 	db	116	;'t'
   300  007FA2  69                 	db	105	;'i'
   301  007FA3  6D                 	db	109	;'m'
   302  007FA4  65                 	db	101	;'e'
   303  007FA5  74                 	db	116	;'t'
   304  007FA6  65                 	db	101	;'e'
   305  007FA7  72                 	db	114	;'r'
   306  007FA8  73                 	db	115	;'s'
   307  007FA9  3A                 	db	58	;':'
   308  007FAA  20                 	db	32
   309  007FAB  00                 	db	0
   310  007FAC                     STR_8:
   311  007FAC  20                 	db	32
   312  007FAD  73                 	db	115	;'s'
   313  007FAE  65                 	db	101	;'e'
   314  007FAF  63                 	db	99	;'c'
   315  007FB0  73                 	db	115	;'s'
   316  007FB1  20                 	db	32
   317  007FB2  6C                 	db	108	;'l'
   318  007FB3  65                 	db	101	;'e'
   319  007FB4  66                 	db	102	;'f'
   320  007FB5  74                 	db	116	;'t'
   321  007FB6  2E                 	db	46
   322  007FB7  2E                 	db	46
   323  007FB8  2E                 	db	46
   324  007FB9  00                 	db	0
   325  007FBA                     STR_23:
   326  007FBA  55                 	db	85	;'U'
   327  007FBB  4E                 	db	78	;'N'
   328  007FBC  45                 	db	69	;'E'
   329  007FBD  58                 	db	88	;'X'
   330  007FBE  50                 	db	80	;'P'
   331  007FBF  45                 	db	69	;'E'
   332  007FC0  43                 	db	67	;'C'
   333  007FC1  54                 	db	84	;'T'
   334  007FC2  45                 	db	69	;'E'
   335  007FC3  44                 	db	68	;'D'
   336  007FC4  3A                 	db	58	;':'
   337  007FC5  20                 	db	32
   338  007FC6  00                 	db	0
   339  007FC7                     STR_11:
   340  007FC7  20                 	db	32
   341  007FC8  44                 	db	68	;'D'
   342  007FC9  6F                 	db	111	;'o'
   343  007FCA  6E                 	db	110	;'n'
   344  007FCB  27                 	db	39
   345  007FCC  74                 	db	116	;'t'
   346  007FCD  20                 	db	32
   347  007FCE  4D                 	db	77	;'M'
   348  007FCF  6F                 	db	111	;'o'
   349  007FD0  76                 	db	118	;'v'
   350  007FD1  65                 	db	101	;'e'
   351  007FD2  2E                 	db	46
   352  007FD3  00                 	db	0
   353  007FD4                     STR_1:
   354  007FD4  4C                 	db	76	;'L'
   355  007FD5  65                 	db	101	;'e'
   356  007FD6  64                 	db	100	;'d'
   357  007FD7  20                 	db	32
   358  007FD8  69                 	db	105	;'i'
   359  007FD9  73                 	db	115	;'s'
   360  007FDA  3A                 	db	58	;':'
   361  007FDB  20                 	db	32
   362  007FDC  00                 	db	0
   363  007FDD                     STR_20:
   364  007FDD  50                 	db	80	;'P'
   365  007FDE  75                 	db	117	;'u'
   366  007FDF  72                 	db	114	;'r'
   367  007FE0  70                 	db	112	;'p'
   368  007FE1  6C                 	db	108	;'l'
   369  007FE2  65                 	db	101	;'e'
   370  007FE3  00                 	db	0
   371  007FE4                     STR_22:
   372  007FE4  57                 	db	87	;'W'
   373  007FE5  68                 	db	104	;'h'
   374  007FE6  69                 	db	105	;'i'
   375  007FE7  74                 	db	116	;'t'
   376  007FE8  65                 	db	101	;'e'
   377  007FE9  00                 	db	0
   378  007FEA                     STR_18:
   379  007FEA  47                 	db	71	;'G'
   380  007FEB  72                 	db	114	;'r'
   381  007FEC  65                 	db	101	;'e'
   382  007FED  65                 	db	101	;'e'
   383  007FEE  6E                 	db	110	;'n'
   384  007FEF  00                 	db	0
   385  007FF0                     STR_19:
   386  007FF0  42                 	db	66	;'B'
   387  007FF1  6C                 	db	108	;'l'
   388  007FF2  75                 	db	117	;'u'
   389  007FF3  65                 	db	101	;'e'
   390  007FF4  00                 	db	0
   391  007FF5                     STR_21:
   392  007FF5  54                 	db	84	;'T'
   393  007FF6  65                 	db	101	;'e'
   394  007FF7  61                 	db	97	;'a'
   395  007FF8  6C                 	db	108	;'l'
   396  007FF9  00                 	db	0
   397  007FFA                     STR_17:
   398  007FFA  52                 	db	82	;'R'
   399  007FFB  65                 	db	101	;'e'
   400  007FFC  64                 	db	100	;'d'
   401  007FFD  00                 	db	0
   402  0000                     
   403                           ; #config settings
   404  007FFE  00                 	db	0	; dummy byte at the end
   405  0000                     
   406                           	psect	cinit
   407  006FEA                     __pcinit:
   408                           	opt stack 0
   409  006FEA                     start_initialization:
   410                           	opt stack 0
   411  006FEA                     __initialization:
   412                           	opt stack 0
   413  006FEA                     end_of_initialization:
   414                           	opt stack 0
   415  006FEA                     __end_of__initialization:
   416                           	opt stack 0
   417  006FEA  0E00               	movlw	low (__Lmediumconst shr (0+16))
   418  006FEC  6EF8               	movwf	tblptru,c
   419  006FEE  0100               	movlb	0
   420  006FF0  EF43  F03E         	goto	_main	;jump to C main() function
   421                           tblptru	equ	0xFF8
   422                           
   423                           	psect	cstackCOMRAM
   424  000001                     __pcstackCOMRAM:
   425                           	opt stack 0
   426  000001                     ?___wmul:
   427                           	opt stack 0
   428  000001                     ?___awdiv:
   429                           	opt stack 0
   430  000001                     ?___lwdiv:
   431                           	opt stack 0
   432  000001                     ?___lwmod:
   433                           	opt stack 0
   434  000001                     ?___ftpack:
   435                           	opt stack 0
   436  000001                     ?___fttol:
   437                           	opt stack 0
   438  000001                     Lcd_Port@a:
   439                           	opt stack 0
   440  000001                     var_delay_us@us:
   441                           	opt stack 0
   442  000001                     ___wmul@multiplier:
   443                           	opt stack 0
   444  000001                     ___awdiv@dividend:
   445                           	opt stack 0
   446  000001                     ___lwdiv@dividend:
   447                           	opt stack 0
   448  000001                     ___lwmod@dividend:
   449                           	opt stack 0
   450  000001                     ___ftpack@arg:
   451                           	opt stack 0
   452  000001                     ___fttol@f1:
   453                           	opt stack 0
   454                           
   455                           ; 3 bytes @ 0x0
   456  000001                     	ds	1
   457  000002                     ??_Lcd_Cmd:
   458  000002                     Lcd_Write_Char@temp:
   459                           	opt stack 0
   460                           
   461                           ; 1 bytes @ 0x1
   462  000002                     	ds	1
   463  000003                     ??_var_delay_us:
   464  000003                     Lcd_Cmd@a:
   465                           	opt stack 0
   466  000003                     Lcd_Write_Char@y:
   467                           	opt stack 0
   468  000003                     ___wmul@multiplicand:
   469                           	opt stack 0
   470  000003                     ___awdiv@divisor:
   471                           	opt stack 0
   472  000003                     ___lwdiv@divisor:
   473                           	opt stack 0
   474  000003                     ___lwmod@divisor:
   475                           	opt stack 0
   476                           
   477                           ; 2 bytes @ 0x2
   478  000003                     	ds	1
   479  000004                     ??_Lcd_Init:
   480  000004                     Lcd_Set_Cursor@b:
   481                           	opt stack 0
   482  000004                     Lcd_Write_Char@a:
   483                           	opt stack 0
   484  000004                     ___ftpack@exp:
   485                           	opt stack 0
   486  000004                     var_delay_us@i:
   487                           	opt stack 0
   488                           
   489                           ; 2 bytes @ 0x3
   490  000004                     	ds	1
   491  000005                     ??___fttol:
   492  000005                     Lcd_Set_Cursor@a:
   493                           	opt stack 0
   494  000005                     ___awdiv@counter:
   495                           	opt stack 0
   496  000005                     ___ftpack@sign:
   497                           	opt stack 0
   498  000005                     ___lwmod@counter:
   499                           	opt stack 0
   500  000005                     Lcd_Write_String@a:
   501                           	opt stack 0
   502  000005                     ___wmul@product:
   503                           	opt stack 0
   504  000005                     ___lwdiv@quotient:
   505                           	opt stack 0
   506                           
   507                           ; 2 bytes @ 0x4
   508  000005                     	ds	1
   509  000006                     ??___ftpack:
   510  000006                     Lcd_Set_Cursor@z:
   511                           	opt stack 0
   512  000006                     ___awdiv@sign:
   513                           	opt stack 0
   514                           
   515                           ; 1 bytes @ 0x5
   516  000006                     	ds	1
   517  000007                     ??_Lcd_Write_String:
   518  000007                     Lcd_Set_Cursor@y:
   519                           	opt stack 0
   520  000007                     ___lwdiv@counter:
   521                           	opt stack 0
   522  000007                     buzz_seconds@seconds:
   523                           	opt stack 0
   524  000007                     ___awdiv@quotient:
   525                           	opt stack 0
   526                           
   527                           ; 2 bytes @ 0x6
   528  000007                     	ds	1
   529  000008                     Lcd_Set_Cursor@temp:
   530                           	opt stack 0
   531  000008                     utoa@buf:
   532                           	opt stack 0
   533                           
   534                           ; 2 bytes @ 0x7
   535  000008                     	ds	1
   536  000009                     ??_buzz_seconds:
   537  000009                     ?___ftmul:
   538                           	opt stack 0
   539  000009                     ?___altoft:
   540                           	opt stack 0
   541  000009                     Lcd_Write_String@i:
   542                           	opt stack 0
   543  000009                     ___ftmul@f1:
   544                           	opt stack 0
   545  000009                     ___altoft@c:
   546                           	opt stack 0
   547                           
   548                           ; 4 bytes @ 0x8
   549  000009                     	ds	1
   550  00000A                     ___fttol@sign1:
   551                           	opt stack 0
   552  00000A                     buzz_seconds@time:
   553                           	opt stack 0
   554  00000A                     utoa@val:
   555                           	opt stack 0
   556                           
   557                           ; 2 bytes @ 0x9
   558  00000A                     	ds	1
   559  00000B                     Set_LED@red:
   560                           	opt stack 0
   561  00000B                     ___fttol@lval:
   562                           	opt stack 0
   563                           
   564                           ; 4 bytes @ 0xA
   565  00000B                     	ds	1
   566  00000C                     buzz_seconds@i:
   567                           	opt stack 0
   568  00000C                     utoa@base:
   569                           	opt stack 0
   570  00000C                     ___ftmul@f2:
   571                           	opt stack 0
   572                           
   573                           ; 3 bytes @ 0xB
   574  00000C                     	ds	1
   575  00000D                     ??___altoft:
   576  00000D                     Set_LED@green:
   577                           	opt stack 0
   578                           
   579                           ; 2 bytes @ 0xC
   580  00000D                     	ds	1
   581  00000E                     utoa@v:
   582                           	opt stack 0
   583                           
   584                           ; 2 bytes @ 0xD
   585  00000E                     	ds	1
   586  00000F                     ??___ftmul:
   587  00000F                     ___fttol@exp1:
   588                           	opt stack 0
   589  00000F                     Set_LED@blue:
   590                           	opt stack 0
   591                           
   592                           ; 2 bytes @ 0xE
   593  00000F                     	ds	1
   594  000010                     utoa@c:
   595                           	opt stack 0
   596                           
   597                           ; 1 bytes @ 0xF
   598  000010                     	ds	1
   599  000011                     ___altoft@exp:
   600                           	opt stack 0
   601  000011                     Set_LED@count:
   602                           	opt stack 0
   603  000011                     itoa@buf:
   604                           	opt stack 0
   605                           
   606                           ; 2 bytes @ 0x10
   607  000011                     	ds	1
   608  000012                     ___altoft@sign:
   609                           	opt stack 0
   610  000012                     ___ftmul@exp:
   611                           	opt stack 0
   612                           
   613                           ; 1 bytes @ 0x11
   614  000012                     	ds	1
   615  000013                     ?___ftdiv:
   616                           	opt stack 0
   617  000013                     Set_LED@color_name:
   618                           	opt stack 0
   619  000013                     itoa@val:
   620                           	opt stack 0
   621  000013                     ___ftdiv@f1:
   622                           	opt stack 0
   623  000013                     ___ftmul@f3_as_product:
   624                           	opt stack 0
   625                           
   626                           ; 3 bytes @ 0x12
   627  000013                     	ds	2
   628  000015                     ??_Set_LED:
   629  000015                     itoa@base:
   630                           	opt stack 0
   631                           
   632                           ; 2 bytes @ 0x14
   633  000015                     	ds	1
   634  000016                     ___ftmul@cntr:
   635                           	opt stack 0
   636  000016                     Set_LED@i:
   637                           	opt stack 0
   638  000016                     ___ftdiv@f2:
   639                           	opt stack 0
   640                           
   641                           ; 3 bytes @ 0x15
   642  000016                     	ds	1
   643  000017                     ___ftmul@sign:
   644                           	opt stack 0
   645  000017                     itoa@cp:
   646                           	opt stack 0
   647                           
   648                           ; 2 bytes @ 0x16
   649  000017                     	ds	2
   650  000019                     ??___ftdiv:
   651  000019                     countdown_timer@seconds:
   652                           	opt stack 0
   653                           
   654                           ; 2 bytes @ 0x18
   655  000019                     	ds	2
   656  00001B                     ??_countdown_timer:
   657                           
   658                           ; 1 bytes @ 0x1A
   659  00001B                     	ds	1
   660  00001C                     ___ftdiv@cntr:
   661                           	opt stack 0
   662                           
   663                           ; 1 bytes @ 0x1B
   664  00001C                     	ds	1
   665  00001D                     ___ftdiv@f3:
   666                           	opt stack 0
   667  00001D                     countdown_timer@sec_str:
   668                           	opt stack 0
   669                           
   670                           ; 4 bytes @ 0x1C
   671  00001D                     	ds	3
   672  000020                     ___ftdiv@exp:
   673                           	opt stack 0
   674                           
   675                           ; 1 bytes @ 0x1F
   676  000020                     	ds	1
   677  000021                     ___ftdiv@sign:
   678                           	opt stack 0
   679  000021                     countdown_timer@i:
   680                           	opt stack 0
   681                           
   682                           ; 2 bytes @ 0x20
   683  000021                     	ds	1
   684  000022                     read_and_print_distance@count:
   685                           	opt stack 0
   686                           
   687                           ; 2 bytes @ 0x21
   688  000022                     	ds	2
   689  000024                     ??_read_and_print_distance:
   690                           
   691                           ; 1 bytes @ 0x23
   692  000024                     	ds	4
   693  000028                     read_and_print_distance@cent_str:
   694                           	opt stack 0
   695                           
   696                           ; 4 bytes @ 0x27
   697  000028                     	ds	4
   698  00002C                     read_and_print_distance@inch_str:
   699                           	opt stack 0
   700                           
   701                           ; 4 bytes @ 0x2B
   702  00002C                     	ds	4
   703  000030                     read_and_print_distance@distance:
   704                           	opt stack 0
   705                           
   706                           ; 4 bytes @ 0x2F
   707  000030                     	ds	4
   708  000034                     read_and_print_distance@inches:
   709                           	opt stack 0
   710                           
   711                           ; 3 bytes @ 0x33
   712  000034                     	ds	3
   713  000037                     read_and_print_distance@i:
   714                           	opt stack 0
   715                           
   716                           ; 2 bytes @ 0x36
   717  000037                     	ds	2
   718  000039                     read_and_print_distance@centimeters:
   719                           	opt stack 0
   720                           
   721                           ; 3 bytes @ 0x38
   722  000039                     	ds	3
   723  00003C                     ??_main:
   724                           
   725                           ; 1 bytes @ 0x3B
   726  00003C                     	ds	2
   727  00003E                     main@ours:
   728                           	opt stack 0
   729                           
   730                           ; 1 bytes @ 0x3D
   731  00003E                     	ds	1
   732  00003F                     main@led_time:
   733                           	opt stack 0
   734                           
   735                           ; 2 bytes @ 0x3E
   736  00003F                     	ds	2
   737                           tblptru	equ	0xFF8
   738                           
   739 ;;
   740 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   741 ;;
   742 ;; *************** function _main *****************
   743 ;; Defined at:
   744 ;;		line 172 in file "newmain.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;  led_time        2   62[COMRAM] int 
   749 ;;  ours            1   61[COMRAM] unsigned char 
   750 ;; Return value:  Size  Location     Type
   751 ;;                  1    wreg      void 
   752 ;; Registers used:
   753 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
   754 ;; Tracked objects:
   755 ;;		On entry : 0/0
   756 ;;		On exit  : 0/0
   757 ;;		Unchanged: 0/0
   758 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   759 ;;      Params:         0       0       0       0       0       0       0       0       0
   760 ;;      Locals:         3       0       0       0       0       0       0       0       0
   761 ;;      Temps:          2       0       0       0       0       0       0       0       0
   762 ;;      Totals:         5       0       0       0       0       0       0       0       0
   763 ;;Total ram usage:        5 bytes
   764 ;; Hardware stack levels required when called:    4
   765 ;; This function calls:
   766 ;;		_Lcd_Clear
   767 ;;		_Lcd_Init
   768 ;;		_Lcd_Set_Cursor
   769 ;;		_Lcd_Write_Char
   770 ;;		_Lcd_Write_String
   771 ;;		_Set_LED
   772 ;;		_countdown_timer
   773 ;;		_motion_sensor
   774 ;;		_read_and_print_distance
   775 ;;		_read_char
   776 ;;		_standby_message
   777 ;; This function is called by:
   778 ;;		Startup code after reset
   779 ;; This function uses a non-reentrant model
   780 ;;
   781                           
   782                           	psect	text0
   783  007C86                     __ptext0:
   784                           	opt stack 0
   785  007C86                     _main:
   786                           	opt stack 27
   787                           
   788                           ;newmain.c: 174: TRISA = 0b00000000;
   789                           
   790                           ;incstack = 0
   791  007C86  0E00               	movlw	0
   792  007C88  6E92               	movwf	3986,c	;volatile
   793                           
   794                           ;newmain.c: 175: TRISB = 0b11111100;
   795  007C8A  0EFC               	movlw	252
   796  007C8C  6E93               	movwf	3987,c	;volatile
   797                           
   798                           ;newmain.c: 176: TRISC = 0b00000001;
   799  007C8E  0E01               	movlw	1
   800  007C90  6E94               	movwf	3988,c	;volatile
   801                           
   802                           ;newmain.c: 177: TRISD = 0b00000010;
   803  007C92  0E02               	movlw	2
   804  007C94  6E95               	movwf	3989,c	;volatile
   805                           
   806                           ;newmain.c: 178: TRISE = 0b00000000;
   807  007C96  0E00               	movlw	0
   808  007C98  6E96               	movwf	3990,c	;volatile
   809                           
   810                           ;newmain.c: 181: PIE1bits.TXIE = 0;
   811  007C9A  989D               	bcf	3997,4,c	;volatile
   812                           
   813                           ;newmain.c: 182: PIE1bits.RCIE = 0;
   814  007C9C  9A9D               	bcf	3997,5,c	;volatile
   815                           
   816                           ;newmain.c: 184: int led_time = 12000;
   817  007C9E  0E2E               	movlw	46
   818  007CA0  6E40               	movwf	main@led_time+1,c
   819  007CA2  0EE0               	movlw	224
   820  007CA4  6E3F               	movwf	main@led_time,c
   821                           
   822                           ;newmain.c: 185: char ours;
   823                           ;newmain.c: 188: TXSTA = 0;
   824  007CA6  0E00               	movlw	0
   825  007CA8  6EAC               	movwf	4012,c	;volatile
   826                           
   827                           ;newmain.c: 189: TRISCbits.TRISC6 = 0;
   828  007CAA  9C94               	bcf	3988,6,c	;volatile
   829                           
   830                           ;newmain.c: 190: TRISCbits.TRISC7 = 1;
   831  007CAC  8E94               	bsf	3988,7,c	;volatile
   832                           
   833                           ;newmain.c: 191: TXSTAbits.SYNC = 0;
   834  007CAE  98AC               	bcf	4012,4,c	;volatile
   835                           
   836                           ;newmain.c: 192: TXSTAbits.TX9 = 0;
   837  007CB0  9CAC               	bcf	4012,6,c	;volatile
   838                           
   839                           ;newmain.c: 195: RCSTA = 0;
   840  007CB2  0E00               	movlw	0
   841  007CB4  6EAB               	movwf	4011,c	;volatile
   842                           
   843                           ;newmain.c: 196: RCSTAbits.CREN = 1;
   844  007CB6  88AB               	bsf	4011,4,c	;volatile
   845                           
   846                           ;newmain.c: 201: BAUDCONbits.BRG16 = 0;
   847  007CB8  96B8               	bcf	4024,3,c	;volatile
   848                           
   849                           ;newmain.c: 202: TXSTA = 0;
   850  007CBA  0E00               	movlw	0
   851  007CBC  6EAC               	movwf	4012,c	;volatile
   852                           
   853                           ;newmain.c: 203: TXSTAbits.BRGH = 0;
   854  007CBE  94AC               	bcf	4012,2,c	;volatile
   855                           
   856                           ;newmain.c: 204: SPBRG = 32;
   857  007CC0  0E20               	movlw	32
   858  007CC2  6EAF               	movwf	4015,c	;volatile
   859                           
   860                           ;newmain.c: 206: RCSTAbits.RX9 = 0;
   861  007CC4  9CAB               	bcf	4011,6,c	;volatile
   862                           
   863                           ;newmain.c: 207: RCSTAbits.SPEN = 1;
   864  007CC6  8EAB               	bsf	4011,7,c	;volatile
   865                           
   866                           ;newmain.c: 209: Lcd_Init();
   867  007CC8  EC51  F039         	call	_Lcd_Init	;wreg free
   868                           
   869                           ;newmain.c: 210: Lcd_Clear();
   870  007CCC  ECFA  F037         	call	_Lcd_Clear	;wreg free
   871                           
   872                           ;newmain.c: 211: Lcd_Set_Cursor(1, 1);
   873  007CD0  0E01               	movlw	1
   874  007CD2  6E04               	movwf	Lcd_Set_Cursor@b,c
   875  007CD4  0E01               	movlw	1
   876  007CD6  ECCE  F038         	call	_Lcd_Set_Cursor
   877                           
   878                           ;newmain.c: 212: Lcd_Write_String("The Birds! 2017 ");
   879  007CDA  0E7F               	movlw	low STR_16
   880  007CDC  6E05               	movwf	Lcd_Write_String@a,c
   881  007CDE  0E7F               	movlw	high STR_16
   882  007CE0  6E06               	movwf	Lcd_Write_String@a+1,c
   883  007CE2  EC8A  F039         	call	_Lcd_Write_String	;wreg free
   884                           
   885                           ;newmain.c: 213: _delay((unsigned long)((1000)*(20000000/4000.0)));
   886  007CE6  0E1A               	movlw	26
   887  007CE8  6E3D               	movwf	(??_main+1)& (0+255),c
   888  007CEA  0E5E               	movlw	94
   889  007CEC  6E3C               	movwf	??_main& (0+255),c
   890  007CEE  0E6E               	movlw	110
   891  007CF0                     u1337:
   892  007CF0  2EE8               	decfsz	wreg,f,c
   893  007CF2  D7FE               	bra	u1337
   894  007CF4  2E3C               	decfsz	??_main& (0+255),f,c
   895  007CF6  D7FC               	bra	u1337
   896  007CF8  2E3D               	decfsz	(??_main+1)& (0+255),f,c
   897  007CFA  D7FA               	bra	u1337
   898  007CFC  D000               	nop2	
   899  007CFE                     l2038:
   900                           
   901                           ;newmain.c: 216: standby_message();
   902  007CFE  EC59  F038         	call	_standby_message	;wreg free
   903                           
   904                           ;newmain.c: 217: ours = read_char();
   905  007D02  EC01  F038         	call	_read_char	;wreg free
   906  007D06  6E3E               	movwf	main@ours,c
   907                           
   908                           ;newmain.c: 218: switch (ours) {
   909  007D08  D0CA               	goto	l2078
   910  007D0A                     l2042:
   911  007D0A  0E00               	movlw	0
   912  007D0C  6E1A               	movwf	countdown_timer@seconds+1,c
   913  007D0E  0E0A               	movlw	10
   914  007D10  6E19               	movwf	countdown_timer@seconds,c
   915  007D12  EC32  F03B         	call	_countdown_timer	;wreg free
   916  007D16  D7F3               	goto	l2038
   917  007D18                     l2044:
   918  007D18  0E00               	movlw	0
   919  007D1A  6E1A               	movwf	countdown_timer@seconds+1,c
   920  007D1C  0E14               	movlw	20
   921  007D1E  6E19               	movwf	countdown_timer@seconds,c
   922  007D20  EC32  F03B         	call	_countdown_timer	;wreg free
   923  007D24  D7EC               	goto	l2038
   924  007D26                     l2046:
   925  007D26  0E00               	movlw	0
   926  007D28  6E1A               	movwf	countdown_timer@seconds+1,c
   927  007D2A  0E1E               	movlw	30
   928  007D2C  6E19               	movwf	countdown_timer@seconds,c
   929  007D2E  EC32  F03B         	call	_countdown_timer	;wreg free
   930  007D32  D7E5               	goto	l2038
   931  007D34                     l2048:
   932  007D34  0E01               	movlw	1
   933  007D36  6E0C               	movwf	Set_LED@red+1,c
   934  007D38  0E00               	movlw	0
   935  007D3A  6E0B               	movwf	Set_LED@red,c
   936  007D3C  0E00               	movlw	0
   937  007D3E  6E0E               	movwf	Set_LED@green+1,c
   938  007D40  0E00               	movlw	0
   939  007D42  6E0D               	movwf	Set_LED@green,c
   940  007D44  0E00               	movlw	0
   941  007D46  6E10               	movwf	Set_LED@blue+1,c
   942  007D48  0E00               	movlw	0
   943  007D4A  6E0F               	movwf	Set_LED@blue,c
   944  007D4C  C03F  F011         	movff	main@led_time,Set_LED@count
   945  007D50  C040  F012         	movff	main@led_time+1,Set_LED@count+1
   946  007D54  0EFA               	movlw	low STR_17
   947  007D56  6E13               	movwf	Set_LED@color_name,c
   948  007D58  0E7F               	movlw	high STR_17
   949  007D5A  6E14               	movwf	Set_LED@color_name+1,c
   950  007D5C  ECA1  F03B         	call	_Set_LED	;wreg free
   951  007D60  D7CE               	goto	l2038
   952  007D62                     l2050:
   953  007D62  0E00               	movlw	0
   954  007D64  6E0C               	movwf	Set_LED@red+1,c
   955  007D66  0E00               	movlw	0
   956  007D68  6E0B               	movwf	Set_LED@red,c
   957  007D6A  0E01               	movlw	1
   958  007D6C  6E0E               	movwf	Set_LED@green+1,c
   959  007D6E  0E00               	movlw	0
   960  007D70  6E0D               	movwf	Set_LED@green,c
   961  007D72  0E00               	movlw	0
   962  007D74  6E10               	movwf	Set_LED@blue+1,c
   963  007D76  0E00               	movlw	0
   964  007D78  6E0F               	movwf	Set_LED@blue,c
   965  007D7A  C03F  F011         	movff	main@led_time,Set_LED@count
   966  007D7E  C040  F012         	movff	main@led_time+1,Set_LED@count+1
   967  007D82  0EEA               	movlw	low STR_18
   968  007D84  6E13               	movwf	Set_LED@color_name,c
   969  007D86  0E7F               	movlw	high STR_18
   970  007D88  6E14               	movwf	Set_LED@color_name+1,c
   971  007D8A  ECA1  F03B         	call	_Set_LED	;wreg free
   972  007D8E  D7B7               	goto	l2038
   973  007D90                     l2052:
   974  007D90  0E00               	movlw	0
   975  007D92  6E0C               	movwf	Set_LED@red+1,c
   976  007D94  0E00               	movlw	0
   977  007D96  6E0B               	movwf	Set_LED@red,c
   978  007D98  0E00               	movlw	0
   979  007D9A  6E0E               	movwf	Set_LED@green+1,c
   980  007D9C  0E00               	movlw	0
   981  007D9E  6E0D               	movwf	Set_LED@green,c
   982  007DA0  0E01               	movlw	1
   983  007DA2  6E10               	movwf	Set_LED@blue+1,c
   984  007DA4  0E00               	movlw	0
   985  007DA6  6E0F               	movwf	Set_LED@blue,c
   986  007DA8  C03F  F011         	movff	main@led_time,Set_LED@count
   987  007DAC  C040  F012         	movff	main@led_time+1,Set_LED@count+1
   988  007DB0  0EF0               	movlw	low STR_19
   989  007DB2  6E13               	movwf	Set_LED@color_name,c
   990  007DB4  0E7F               	movlw	high STR_19
   991  007DB6  6E14               	movwf	Set_LED@color_name+1,c
   992  007DB8  ECA1  F03B         	call	_Set_LED	;wreg free
   993  007DBC  D7A0               	goto	l2038
   994  007DBE                     l2054:
   995  007DBE  0E01               	movlw	1
   996  007DC0  6E0C               	movwf	Set_LED@red+1,c
   997  007DC2  0E00               	movlw	0
   998  007DC4  6E0B               	movwf	Set_LED@red,c
   999  007DC6  0E00               	movlw	0
  1000  007DC8  6E0E               	movwf	Set_LED@green+1,c
  1001  007DCA  0E00               	movlw	0
  1002  007DCC  6E0D               	movwf	Set_LED@green,c
  1003  007DCE  0E00               	movlw	0
  1004  007DD0  6E10               	movwf	Set_LED@blue+1,c
  1005  007DD2  0EB4               	movlw	180
  1006  007DD4  6E0F               	movwf	Set_LED@blue,c
  1007  007DD6  C03F  F011         	movff	main@led_time,Set_LED@count
  1008  007DDA  C040  F012         	movff	main@led_time+1,Set_LED@count+1
  1009  007DDE  0EDD               	movlw	low STR_20
  1010  007DE0  6E13               	movwf	Set_LED@color_name,c
  1011  007DE2  0E7F               	movlw	high STR_20
  1012  007DE4  6E14               	movwf	Set_LED@color_name+1,c
  1013  007DE6  ECA1  F03B         	call	_Set_LED	;wreg free
  1014  007DEA  D789               	goto	l2038
  1015  007DEC                     l2056:
  1016  007DEC  0E00               	movlw	0
  1017  007DEE  6E0C               	movwf	Set_LED@red+1,c
  1018  007DF0  0E00               	movlw	0
  1019  007DF2  6E0B               	movwf	Set_LED@red,c
  1020  007DF4  0E01               	movlw	1
  1021  007DF6  6E0E               	movwf	Set_LED@green+1,c
  1022  007DF8  0E00               	movlw	0
  1023  007DFA  6E0D               	movwf	Set_LED@green,c
  1024  007DFC  0E01               	movlw	1
  1025  007DFE  6E10               	movwf	Set_LED@blue+1,c
  1026  007E00  0E00               	movlw	0
  1027  007E02  6E0F               	movwf	Set_LED@blue,c
  1028  007E04  C03F  F011         	movff	main@led_time,Set_LED@count
  1029  007E08  C040  F012         	movff	main@led_time+1,Set_LED@count+1
  1030  007E0C  0EF5               	movlw	low STR_21
  1031  007E0E  6E13               	movwf	Set_LED@color_name,c
  1032  007E10  0E7F               	movlw	high STR_21
  1033  007E12  6E14               	movwf	Set_LED@color_name+1,c
  1034  007E14  ECA1  F03B         	call	_Set_LED	;wreg free
  1035  007E18  D772               	goto	l2038
  1036  007E1A                     l2058:
  1037  007E1A  0E01               	movlw	1
  1038  007E1C  6E0C               	movwf	Set_LED@red+1,c
  1039  007E1E  0E00               	movlw	0
  1040  007E20  6E0B               	movwf	Set_LED@red,c
  1041  007E22  0E00               	movlw	0
  1042  007E24  6E0E               	movwf	Set_LED@green+1,c
  1043  007E26  0E80               	movlw	128
  1044  007E28  6E0D               	movwf	Set_LED@green,c
  1045  007E2A  0E00               	movlw	0
  1046  007E2C  6E10               	movwf	Set_LED@blue+1,c
  1047  007E2E  0E80               	movlw	128
  1048  007E30  6E0F               	movwf	Set_LED@blue,c
  1049  007E32  C03F  F011         	movff	main@led_time,Set_LED@count
  1050  007E36  C040  F012         	movff	main@led_time+1,Set_LED@count+1
  1051  007E3A  0EE4               	movlw	low STR_22
  1052  007E3C  6E13               	movwf	Set_LED@color_name,c
  1053  007E3E  0E7F               	movlw	high STR_22
  1054  007E40  6E14               	movwf	Set_LED@color_name+1,c
  1055  007E42  ECA1  F03B         	call	_Set_LED	;wreg free
  1056  007E46  D75B               	goto	l2038
  1057  007E48                     l2060:
  1058  007E48  0E00               	movlw	0
  1059  007E4A  6E23               	movwf	read_and_print_distance@count+1,c
  1060  007E4C  0E14               	movlw	20
  1061  007E4E  6E22               	movwf	read_and_print_distance@count,c
  1062  007E50  EC7B  F03D         	call	_read_and_print_distance	;wreg free
  1063  007E54  D754               	goto	l2038
  1064  007E56                     l2062:
  1065  007E56  EC41  F03A         	call	_motion_sensor	;wreg free
  1066  007E5A  D751               	goto	l2038
  1067  007E5C                     l2064:
  1068                           
  1069                           ;newmain.c: 232: Lcd_Clear();
  1070  007E5C  ECFA  F037         	call	_Lcd_Clear	;wreg free
  1071                           
  1072                           ;newmain.c: 233: Lcd_Set_Cursor(1, 1);
  1073  007E60  0E01               	movlw	1
  1074  007E62  6E04               	movwf	Lcd_Set_Cursor@b,c
  1075  007E64  0E01               	movlw	1
  1076  007E66  ECCE  F038         	call	_Lcd_Set_Cursor
  1077                           
  1078                           ;newmain.c: 234: Lcd_Write_String("UNEXPECTED: ");
  1079  007E6A  0EBA               	movlw	low STR_23
  1080  007E6C  6E05               	movwf	Lcd_Write_String@a,c
  1081  007E6E  0E7F               	movlw	high STR_23
  1082  007E70  6E06               	movwf	Lcd_Write_String@a+1,c
  1083  007E72  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  1084                           
  1085                           ;newmain.c: 235: Lcd_Set_Cursor(2, 1);
  1086  007E76  0E01               	movlw	1
  1087  007E78  6E04               	movwf	Lcd_Set_Cursor@b,c
  1088  007E7A  0E02               	movlw	2
  1089  007E7C  ECCE  F038         	call	_Lcd_Set_Cursor
  1090                           
  1091                           ;newmain.c: 236: Lcd_Write_Char(ours);
  1092  007E80  503E               	movf	main@ours,w,c
  1093  007E82  EC70  F038         	call	_Lcd_Write_Char
  1094                           
  1095                           ;newmain.c: 237: _delay((unsigned long)((2000)*(20000000/4000.0)));
  1096  007E86  0E33               	movlw	51
  1097  007E88  6E3D               	movwf	(??_main+1)& (0+255),c
  1098  007E8A  0EBB               	movlw	187
  1099  007E8C  6E3C               	movwf	??_main& (0+255),c
  1100  007E8E  0EE0               	movlw	224
  1101  007E90                     u1347:
  1102  007E90  2EE8               	decfsz	wreg,f,c
  1103  007E92  D7FE               	bra	u1347
  1104  007E94  2E3C               	decfsz	??_main& (0+255),f,c
  1105  007E96  D7FC               	bra	u1347
  1106  007E98  2E3D               	decfsz	(??_main+1)& (0+255),f,c
  1107  007E9A  D7FA               	bra	u1347
  1108                           
  1109                           ;newmain.c: 239: }
  1110                           
  1111                           ;newmain.c: 238: break;
  1112  007E9C  D730               	goto	l2038
  1113  007E9E                     l2078:
  1114  007E9E  503E               	movf	main@ours,w,c
  1115                           
  1116                           ; Switch size 1, requested type "space"
  1117                           ; Number of cases is 11, Range of values is 49 to 119
  1118                           ; switch strategies available:
  1119                           ; Name         Instructions Cycles
  1120                           ; simple_byte           34    18 (average)
  1121                           ;	Chosen strategy is simple_byte
  1122  007EA0  0A31               	xorlw	49	; case 49
  1123  007EA2  B4D8               	btfsc	status,2,c
  1124  007EA4  D732               	goto	l2042
  1125  007EA6  0A03               	xorlw	3	; case 50
  1126  007EA8  B4D8               	btfsc	status,2,c
  1127  007EAA  D736               	goto	l2044
  1128  007EAC  0A01               	xorlw	1	; case 51
  1129  007EAE  B4D8               	btfsc	status,2,c
  1130  007EB0  D73A               	goto	l2046
  1131  007EB2  0A51               	xorlw	81	; case 98
  1132  007EB4  B4D8               	btfsc	status,2,c
  1133  007EB6  D76C               	goto	l2052
  1134  007EB8  0A06               	xorlw	6	; case 100
  1135  007EBA  B4D8               	btfsc	status,2,c
  1136  007EBC  D7C5               	goto	l2060
  1137  007EBE  0A03               	xorlw	3	; case 103
  1138  007EC0  B4D8               	btfsc	status,2,c
  1139  007EC2  D74F               	goto	l2050
  1140  007EC4  0A0A               	xorlw	10	; case 109
  1141  007EC6  B4D8               	btfsc	status,2,c
  1142  007EC8  D7C6               	goto	l2062
  1143  007ECA  0A1D               	xorlw	29	; case 112
  1144  007ECC  B4D8               	btfsc	status,2,c
  1145  007ECE  D777               	goto	l2054
  1146  007ED0  0A02               	xorlw	2	; case 114
  1147  007ED2  B4D8               	btfsc	status,2,c
  1148  007ED4  D72F               	goto	l2048
  1149  007ED6  0A06               	xorlw	6	; case 116
  1150  007ED8  B4D8               	btfsc	status,2,c
  1151  007EDA  D788               	goto	l2056
  1152  007EDC  0A03               	xorlw	3	; case 119
  1153  007EDE  B4D8               	btfsc	status,2,c
  1154  007EE0  D79C               	goto	l2058
  1155  007EE2  D7BC               	goto	l2064
  1156  007EE4                     __end_of_main:
  1157                           	opt stack 0
  1158                           tblptru	equ	0xFF8
  1159                           wreg	equ	0xFE8
  1160                           status	equ	0xFD8
  1161                           
  1162 ;; *************** function _standby_message *****************
  1163 ;; Defined at:
  1164 ;;		line 114 in file "newmain.c"
  1165 ;; Parameters:    Size  Location     Type
  1166 ;;		None
  1167 ;; Auto vars:     Size  Location     Type
  1168 ;;		None
  1169 ;; Return value:  Size  Location     Type
  1170 ;;                  1    wreg      void 
  1171 ;; Registers used:
  1172 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1173 ;; Tracked objects:
  1174 ;;		On entry : 0/0
  1175 ;;		On exit  : 0/0
  1176 ;;		Unchanged: 0/0
  1177 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1178 ;;      Params:         0       0       0       0       0       0       0       0       0
  1179 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1180 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1181 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1182 ;;Total ram usage:        0 bytes
  1183 ;; Hardware stack levels used:    1
  1184 ;; Hardware stack levels required when called:    3
  1185 ;; This function calls:
  1186 ;;		_Lcd_Set_Cursor
  1187 ;;		_Lcd_Write_String
  1188 ;; This function is called by:
  1189 ;;		_main
  1190 ;; This function uses a non-reentrant model
  1191 ;;
  1192                           
  1193                           	psect	text1
  1194  0070B2                     __ptext1:
  1195                           	opt stack 0
  1196  0070B2                     _standby_message:
  1197                           	opt stack 27
  1198                           
  1199                           ;newmain.c: 115: Lcd_Set_Cursor(1, 1); Lcd_Write_String("   Waiting on   ");
  1200                           
  1201                           ;incstack = 0
  1202  0070B2  0E01               	movlw	1
  1203  0070B4  6E04               	movwf	Lcd_Set_Cursor@b,c
  1204  0070B6  0E01               	movlw	1
  1205  0070B8  ECCE  F038         	call	_Lcd_Set_Cursor
  1206  0070BC  0E6E               	movlw	low STR_4
  1207  0070BE  6E05               	movwf	Lcd_Write_String@a,c
  1208  0070C0  0E7F               	movlw	high STR_4
  1209  0070C2  6E06               	movwf	Lcd_Write_String@a+1,c
  1210  0070C4  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  1211                           
  1212                           ;newmain.c: 116: Lcd_Set_Cursor(2, 1); Lcd_Write_String("    input...    ");
  1213  0070C8  0E01               	movlw	1
  1214  0070CA  6E04               	movwf	Lcd_Set_Cursor@b,c
  1215  0070CC  0E02               	movlw	2
  1216  0070CE  ECCE  F038         	call	_Lcd_Set_Cursor
  1217  0070D2  0E19               	movlw	low STR_5
  1218  0070D4  6E05               	movwf	Lcd_Write_String@a,c
  1219  0070D6  0E7F               	movlw	high STR_5
  1220  0070D8  6E06               	movwf	Lcd_Write_String@a+1,c
  1221  0070DA  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  1222  0070DE  0012               	return		;funcret
  1223  0070E0                     __end_of_standby_message:
  1224                           	opt stack 0
  1225                           tblptru	equ	0xFF8
  1226                           wreg	equ	0xFE8
  1227                           status	equ	0xFD8
  1228                           
  1229 ;; *************** function _read_char *****************
  1230 ;; Defined at:
  1231 ;;		line 39 in file "newmain.c"
  1232 ;; Parameters:    Size  Location     Type
  1233 ;;		None
  1234 ;; Auto vars:     Size  Location     Type
  1235 ;;		None
  1236 ;; Return value:  Size  Location     Type
  1237 ;;                  1    wreg      unsigned char 
  1238 ;; Registers used:
  1239 ;;		wreg, status,2
  1240 ;; Tracked objects:
  1241 ;;		On entry : 0/0
  1242 ;;		On exit  : 0/0
  1243 ;;		Unchanged: 0/0
  1244 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1245 ;;      Params:         0       0       0       0       0       0       0       0       0
  1246 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1247 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1248 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1249 ;;Total ram usage:        0 bytes
  1250 ;; Hardware stack levels used:    1
  1251 ;; This function calls:
  1252 ;;		Nothing
  1253 ;; This function is called by:
  1254 ;;		_main
  1255 ;; This function uses a non-reentrant model
  1256 ;;
  1257                           
  1258                           	psect	text2
  1259  007002                     __ptext2:
  1260                           	opt stack 0
  1261  007002                     _read_char:
  1262                           	opt stack 30
  1263                           
  1264                           ;newmain.c: 41: while (PIR1bits.RCIF == 0) {
  1265                           
  1266                           ;incstack = 0
  1267  007002  D005               	goto	l92
  1268  007004                     l93:
  1269                           
  1270                           ;newmain.c: 43: if (RCSTAbits.OERR == 1) {
  1271  007004  A2AB               	btfss	4011,1,c	;volatile
  1272  007006  D003               	goto	l92
  1273                           
  1274                           ;newmain.c: 44: RCSTAbits.OERR = 0;
  1275  007008  92AB               	bcf	4011,1,c	;volatile
  1276                           
  1277                           ;newmain.c: 45: RCSTAbits.CREN = 0;
  1278  00700A  98AB               	bcf	4011,4,c	;volatile
  1279                           
  1280                           ;newmain.c: 46: RCSTAbits.CREN = 1;
  1281  00700C  88AB               	bsf	4011,4,c	;volatile
  1282  00700E                     l92:
  1283  00700E  AA9E               	btfss	3998,5,c	;volatile
  1284  007010  D7F9               	goto	l93
  1285                           
  1286                           ;newmain.c: 47: }
  1287                           ;newmain.c: 48: }
  1288                           ;newmain.c: 49: return RCREG;
  1289  007012  50AE               	movf	4014,w,c	;volatile
  1290  007014  0012               	return	
  1291  007016                     __end_of_read_char:
  1292                           	opt stack 0
  1293                           tblptru	equ	0xFF8
  1294                           wreg	equ	0xFE8
  1295                           status	equ	0xFD8
  1296                           
  1297 ;; *************** function _read_and_print_distance *****************
  1298 ;; Defined at:
  1299 ;;		line 79 in file "newmain.c"
  1300 ;; Parameters:    Size  Location     Type
  1301 ;;  count           2   33[COMRAM] int 
  1302 ;; Auto vars:     Size  Location     Type
  1303 ;;  i               2   54[COMRAM] int 
  1304 ;;  inch_str        4   43[COMRAM] unsigned char [4]
  1305 ;;  cent_str        4   39[COMRAM] unsigned char [4]
  1306 ;;  distance        4   47[COMRAM] long 
  1307 ;;  centimeters     3   56[COMRAM] float 
  1308 ;;  inches          3   51[COMRAM] float 
  1309 ;; Return value:  Size  Location     Type
  1310 ;;                  1    wreg      void 
  1311 ;; Registers used:
  1312 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1313 ;; Tracked objects:
  1314 ;;		On entry : 0/0
  1315 ;;		On exit  : 0/0
  1316 ;;		Unchanged: 0/0
  1317 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1318 ;;      Params:         2       0       0       0       0       0       0       0       0
  1319 ;;      Locals:        20       0       0       0       0       0       0       0       0
  1320 ;;      Temps:          4       0       0       0       0       0       0       0       0
  1321 ;;      Totals:        26       0       0       0       0       0       0       0       0
  1322 ;;Total ram usage:       26 bytes
  1323 ;; Hardware stack levels used:    1
  1324 ;; Hardware stack levels required when called:    3
  1325 ;; This function calls:
  1326 ;;		_Lcd_Clear
  1327 ;;		_Lcd_Set_Cursor
  1328 ;;		_Lcd_Write_String
  1329 ;;		___altoft
  1330 ;;		___ftdiv
  1331 ;;		___ftmul
  1332 ;;		___fttol
  1333 ;;		_itoa
  1334 ;; This function is called by:
  1335 ;;		_main
  1336 ;; This function uses a non-reentrant model
  1337 ;;
  1338                           
  1339                           	psect	text3
  1340  007AF6                     __ptext3:
  1341                           	opt stack 0
  1342  007AF6                     _read_and_print_distance:
  1343                           	opt stack 27
  1344                           
  1345                           ;newmain.c: 81: long distance;
  1346                           ;newmain.c: 82: float centimeters, inches;
  1347                           ;newmain.c: 83: char cent_str[4], inch_str[4];
  1348                           ;newmain.c: 85: for (int i = 0; i < count; i++) {
  1349                           
  1350                           ;incstack = 0
  1351  007AF6  0E00               	movlw	0
  1352  007AF8  6E38               	movwf	read_and_print_distance@i+1,c
  1353  007AFA  0E00               	movlw	0
  1354  007AFC  6E37               	movwf	read_and_print_distance@i,c
  1355  007AFE  D0B8               	goto	l1930
  1356  007B00                     l1890:
  1357                           
  1358                           ;newmain.c: 86: TMR1H = 0; TMR1L = 0;
  1359  007B00  0E00               	movlw	0
  1360  007B02  6ECF               	movwf	4047,c	;volatile
  1361  007B04  0E00               	movlw	0
  1362  007B06  6ECE               	movwf	4046,c	;volatile
  1363                           
  1364                           ;newmain.c: 87: PORTDbits.RD0 = 0; _delay((unsigned long)((5)*(20000000/4000000.0)));
  1365  007B08  9083               	bcf	3971,0,c	;volatile
  1366  007B0A  0E08               	movlw	8
  1367  007B0C                     u1357:
  1368  007B0C  2EE8               	decfsz	wreg,f,c
  1369  007B0E  D7FE               	bra	u1357
  1370  007B10  F000               	nop	
  1371                           
  1372                           ;newmain.c: 88: PORTDbits.RD0 = 1; _delay((unsigned long)((10)*(20000000/4000000.0)));
  1373  007B12  8083               	bsf	3971,0,c	;volatile
  1374  007B14  0E10               	movlw	16
  1375  007B16                     u1367:
  1376  007B16  2EE8               	decfsz	wreg,f,c
  1377  007B18  D7FE               	bra	u1367
  1378  007B1A  D000               	nop2	
  1379                           
  1380                           ;newmain.c: 89: PORTDbits.RD0 = 0;
  1381  007B1C  9083               	bcf	3971,0,c	;volatile
  1382  007B1E                     l122:
  1383  007B1E  A283               	btfss	3971,1,c	;volatile
  1384  007B20  D7FE               	goto	l122
  1385  007B22  80CD               	bsf	4045,0,c	;volatile
  1386  007B24                     l125:
  1387  007B24  B283               	btfsc	3971,1,c	;volatile
  1388  007B26  D7FE               	goto	l125
  1389  007B28  90CD               	bcf	4045,0,c	;volatile
  1390                           
  1391                           ;newmain.c: 94: distance = (TMR1L | (TMR1H << 8));
  1392  007B2A  50CF               	movf	4047,w,c	;volatile
  1393  007B2C  6E25               	movwf	(??_read_and_print_distance+1)& (0+255),c
  1394  007B2E  6A24               	clrf	??_read_and_print_distance& (0+255),c
  1395  007B30  50CE               	movf	4046,w,c	;volatile
  1396  007B32  6E26               	movwf	(??_read_and_print_distance+2)& (0+255),c
  1397  007B34  6A27               	clrf	(??_read_and_print_distance+3)& (0+255),c
  1398  007B36  5024               	movf	??_read_and_print_distance,w,c
  1399  007B38  1226               	iorwf	??_read_and_print_distance+2,f,c
  1400  007B3A  5025               	movf	??_read_and_print_distance+1,w,c
  1401  007B3C  1227               	iorwf	??_read_and_print_distance+3,f,c
  1402  007B3E  C026  F030         	movff	??_read_and_print_distance+2,read_and_print_distance@distance
  1403  007B42  C027  F031         	movff	??_read_and_print_distance+3,read_and_print_distance@distance+1
  1404  007B46  0E00               	movlw	0
  1405  007B48  BE31               	btfsc	read_and_print_distance@distance+1,7,c
  1406  007B4A  0EFF               	movlw	-1
  1407  007B4C  6E32               	movwf	read_and_print_distance@distance+2,c
  1408  007B4E  6E33               	movwf	read_and_print_distance@distance+3,c
  1409                           
  1410                           ;newmain.c: 96: centimeters = distance / (5 * 58.82);
  1411  007B50  C030  F009         	movff	read_and_print_distance@distance,___altoft@c
  1412  007B54  C031  F00A         	movff	read_and_print_distance@distance+1,___altoft@c+1
  1413  007B58  C032  F00B         	movff	read_and_print_distance@distance+2,___altoft@c+2
  1414  007B5C  C033  F00C         	movff	read_and_print_distance@distance+3,___altoft@c+3
  1415  007B60  ECC3  F039         	call	___altoft	;wreg free
  1416  007B64  C009  F013         	movff	?___altoft,___ftdiv@f1
  1417  007B68  C00A  F014         	movff	?___altoft+1,___ftdiv@f1+1
  1418  007B6C  C00B  F015         	movff	?___altoft+2,___ftdiv@f1+2
  1419  007B70  0E0D               	movlw	13
  1420  007B72  6E16               	movwf	___ftdiv@f2,c
  1421  007B74  0E93               	movlw	147
  1422  007B76  6E17               	movwf	___ftdiv@f2+1,c
  1423  007B78  0E43               	movlw	67
  1424  007B7A  6E18               	movwf	___ftdiv@f2+2,c
  1425  007B7C  EC14  F03C         	call	___ftdiv	;wreg free
  1426  007B80  C013  F039         	movff	?___ftdiv,read_and_print_distance@centimeters
  1427  007B84  C014  F03A         	movff	?___ftdiv+1,read_and_print_distance@centimeters+1
  1428  007B88  C015  F03B         	movff	?___ftdiv+2,read_and_print_distance@centimeters+2
  1429                           
  1430                           ;newmain.c: 97: inches = centimeters * 0.393701;
  1431  007B8C  C039  F009         	movff	read_and_print_distance@centimeters,___ftmul@f1
  1432  007B90  C03A  F00A         	movff	read_and_print_distance@centimeters+1,___ftmul@f1+1
  1433  007B94  C03B  F00B         	movff	read_and_print_distance@centimeters+2,___ftmul@f1+2
  1434  007B98  0E93               	movlw	147
  1435  007B9A  6E0C               	movwf	___ftmul@f2,c
  1436  007B9C  0EC9               	movlw	201
  1437  007B9E  6E0D               	movwf	___ftmul@f2+1,c
  1438  007BA0  0E3E               	movlw	62
  1439  007BA2  6E0E               	movwf	___ftmul@f2+2,c
  1440  007BA4  EC87  F03C         	call	___ftmul	;wreg free
  1441  007BA8  C009  F034         	movff	?___ftmul,read_and_print_distance@inches
  1442  007BAC  C00A  F035         	movff	?___ftmul+1,read_and_print_distance@inches+1
  1443  007BB0  C00B  F036         	movff	?___ftmul+2,read_and_print_distance@inches+2
  1444                           
  1445                           ;newmain.c: 99: itoa(inch_str, inches, 10);
  1446  007BB4  0E2C               	movlw	low read_and_print_distance@inch_str
  1447  007BB6  6E11               	movwf	itoa@buf,c
  1448  007BB8  0E00               	movlw	high read_and_print_distance@inch_str
  1449  007BBA  6E12               	movwf	itoa@buf+1,c
  1450  007BBC  C034  F001         	movff	read_and_print_distance@inches,___fttol@f1
  1451  007BC0  C035  F002         	movff	read_and_print_distance@inches+1,___fttol@f1+1
  1452  007BC4  C036  F003         	movff	read_and_print_distance@inches+2,___fttol@f1+2
  1453  007BC8  EC01  F03D         	call	___fttol	;wreg free
  1454  007BCC  C001  F013         	movff	?___fttol,itoa@val
  1455  007BD0  C002  F014         	movff	?___fttol+1,itoa@val+1
  1456  007BD4  0E00               	movlw	0
  1457  007BD6  6E16               	movwf	itoa@base+1,c
  1458  007BD8  0E0A               	movlw	10
  1459  007BDA  6E15               	movwf	itoa@base,c
  1460  007BDC  ECAD  F038         	call	_itoa	;wreg free
  1461                           
  1462                           ;newmain.c: 100: itoa(cent_str, centimeters, 10);
  1463  007BE0  0E28               	movlw	low read_and_print_distance@cent_str
  1464  007BE2  6E11               	movwf	itoa@buf,c
  1465  007BE4  0E00               	movlw	high read_and_print_distance@cent_str
  1466  007BE6  6E12               	movwf	itoa@buf+1,c
  1467  007BE8  C039  F001         	movff	read_and_print_distance@centimeters,___fttol@f1
  1468  007BEC  C03A  F002         	movff	read_and_print_distance@centimeters+1,___fttol@f1+1
  1469  007BF0  C03B  F003         	movff	read_and_print_distance@centimeters+2,___fttol@f1+2
  1470  007BF4  EC01  F03D         	call	___fttol	;wreg free
  1471  007BF8  C001  F013         	movff	?___fttol,itoa@val
  1472  007BFC  C002  F014         	movff	?___fttol+1,itoa@val+1
  1473  007C00  0E00               	movlw	0
  1474  007C02  6E16               	movwf	itoa@base+1,c
  1475  007C04  0E0A               	movlw	10
  1476  007C06  6E15               	movwf	itoa@base,c
  1477  007C08  ECAD  F038         	call	_itoa	;wreg free
  1478                           
  1479                           ;newmain.c: 102: Lcd_Clear();
  1480  007C0C  ECFA  F037         	call	_Lcd_Clear	;wreg free
  1481                           
  1482                           ;newmain.c: 103: Lcd_Set_Cursor(1, 1);
  1483  007C10  0E01               	movlw	1
  1484  007C12  6E04               	movwf	Lcd_Set_Cursor@b,c
  1485  007C14  0E01               	movlw	1
  1486  007C16  ECCE  F038         	call	_Lcd_Set_Cursor
  1487                           
  1488                           ;newmain.c: 105: Lcd_Write_String("Centimeters: ");
  1489  007C1A  0E9E               	movlw	low STR_2
  1490  007C1C  6E05               	movwf	Lcd_Write_String@a,c
  1491  007C1E  0E7F               	movlw	high STR_2
  1492  007C20  6E06               	movwf	Lcd_Write_String@a+1,c
  1493  007C22  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  1494                           
  1495                           ;newmain.c: 106: Lcd_Write_String(cent_str);
  1496  007C26  0E28               	movlw	low read_and_print_distance@cent_str
  1497  007C28  6E05               	movwf	Lcd_Write_String@a,c
  1498  007C2A  0E00               	movlw	high read_and_print_distance@cent_str
  1499  007C2C  6E06               	movwf	Lcd_Write_String@a+1,c
  1500  007C2E  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  1501                           
  1502                           ;newmain.c: 107: Lcd_Set_Cursor(2, 1);
  1503  007C32  0E01               	movlw	1
  1504  007C34  6E04               	movwf	Lcd_Set_Cursor@b,c
  1505  007C36  0E02               	movlw	2
  1506  007C38  ECCE  F038         	call	_Lcd_Set_Cursor
  1507                           
  1508                           ;newmain.c: 108: Lcd_Write_String("Inches:      ");
  1509  007C3C  0E90               	movlw	low STR_3
  1510  007C3E  6E05               	movwf	Lcd_Write_String@a,c
  1511  007C40  0E7F               	movlw	high STR_3
  1512  007C42  6E06               	movwf	Lcd_Write_String@a+1,c
  1513  007C44  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  1514                           
  1515                           ;newmain.c: 109: Lcd_Write_String(inch_str);
  1516  007C48  0E2C               	movlw	low read_and_print_distance@inch_str
  1517  007C4A  6E05               	movwf	Lcd_Write_String@a,c
  1518  007C4C  0E00               	movlw	high read_and_print_distance@inch_str
  1519  007C4E  6E06               	movwf	Lcd_Write_String@a+1,c
  1520  007C50  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  1521                           
  1522                           ;newmain.c: 110: _delay((unsigned long)((500)*(20000000/4000.0)));
  1523  007C54  0E0D               	movlw	13
  1524  007C56  6E25               	movwf	(??_read_and_print_distance+1)& (0+255),c
  1525  007C58  0EAF               	movlw	175
  1526  007C5A  6E24               	movwf	??_read_and_print_distance& (0+255),c
  1527  007C5C  0EB6               	movlw	182
  1528  007C5E                     u1377:
  1529  007C5E  2EE8               	decfsz	wreg,f,c
  1530  007C60  D7FE               	bra	u1377
  1531  007C62  2E24               	decfsz	??_read_and_print_distance& (0+255),f,c
  1532  007C64  D7FC               	bra	u1377
  1533  007C66  2E25               	decfsz	(??_read_and_print_distance+1)& (0+255),f,c
  1534  007C68  D7FA               	bra	u1377
  1535  007C6A  D000               	nop2	
  1536  007C6C  4A37               	infsnz	read_and_print_distance@i,f,c
  1537  007C6E  2A38               	incf	read_and_print_distance@i+1,f,c
  1538  007C70                     l1930:
  1539  007C70  5022               	movf	read_and_print_distance@count,w,c
  1540  007C72  5C37               	subwf	read_and_print_distance@i,w,c
  1541  007C74  5038               	movf	read_and_print_distance@i+1,w,c
  1542  007C76  0A80               	xorlw	128
  1543  007C78  6E24               	movwf	??_read_and_print_distance& (0+255),c
  1544  007C7A  5023               	movf	read_and_print_distance@count+1,w,c
  1545  007C7C  0A80               	xorlw	128
  1546  007C7E  5824               	subwfb	??_read_and_print_distance& (0+255),w,c
  1547  007C80  B0D8               	btfsc	status,0,c
  1548  007C82  0012               	return	
  1549  007C84  D73D               	goto	l1890
  1550  007C86                     __end_of_read_and_print_distance:
  1551                           	opt stack 0
  1552                           tblptru	equ	0xFF8
  1553                           wreg	equ	0xFE8
  1554                           status	equ	0xFD8
  1555                           
  1556 ;; *************** function ___fttol *****************
  1557 ;; Defined at:
  1558 ;;		line 44 in file "/opt/microchip/xc8/v1.42/sources/common/fttol.c"
  1559 ;; Parameters:    Size  Location     Type
  1560 ;;  f1              3    0[COMRAM] float 
  1561 ;; Auto vars:     Size  Location     Type
  1562 ;;  lval            4   10[COMRAM] unsigned long 
  1563 ;;  exp1            1   14[COMRAM] unsigned char 
  1564 ;;  sign1           1    9[COMRAM] unsigned char 
  1565 ;; Return value:  Size  Location     Type
  1566 ;;                  4    0[COMRAM] long 
  1567 ;; Registers used:
  1568 ;;		wreg, status,2, status,0
  1569 ;; Tracked objects:
  1570 ;;		On entry : 0/0
  1571 ;;		On exit  : 0/0
  1572 ;;		Unchanged: 0/0
  1573 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1574 ;;      Params:         4       0       0       0       0       0       0       0       0
  1575 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1576 ;;      Temps:          5       0       0       0       0       0       0       0       0
  1577 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1578 ;;Total ram usage:       15 bytes
  1579 ;; Hardware stack levels used:    1
  1580 ;; This function calls:
  1581 ;;		Nothing
  1582 ;; This function is called by:
  1583 ;;		_read_and_print_distance
  1584 ;; This function uses a non-reentrant model
  1585 ;;
  1586                           
  1587                           	psect	text4
  1588  007A02                     __ptext4:
  1589                           	opt stack 0
  1590  007A02                     ___fttol:
  1591                           	opt stack 29
  1592                           
  1593                           ;incstack = 0
  1594  007A02  C003  F005         	movff	___fttol@f1+2,??___fttol
  1595  007A06  6A06               	clrf	(??___fttol+1)& (0+255),c
  1596  007A08  6A07               	clrf	(??___fttol+2)& (0+255),c
  1597  007A0A  3402               	rlcf	___fttol@f1+1,w,c
  1598  007A0C  3605               	rlcf	??___fttol& (0+255),f,c
  1599  007A0E  E301               	bnc	u1141
  1600  007A10  8006               	bsf	(??___fttol+1)& (0+255),0,c
  1601  007A12                     u1141:
  1602  007A12  5005               	movf	??___fttol,w,c
  1603  007A14  6E0F               	movwf	___fttol@exp1,c
  1604  007A16  500F               	movf	___fttol@exp1,w,c
  1605  007A18  A4D8               	btfss	status,2,c
  1606  007A1A  D009               	goto	l1808
  1607  007A1C  0E00               	movlw	0
  1608  007A1E  6E01               	movwf	?___fttol,c
  1609  007A20  0E00               	movlw	0
  1610  007A22  6E02               	movwf	?___fttol+1,c
  1611  007A24  0E00               	movlw	0
  1612  007A26  6E03               	movwf	?___fttol+2,c
  1613  007A28  0E00               	movlw	0
  1614  007A2A  6E04               	movwf	?___fttol+3,c
  1615  007A2C  0012               	return	
  1616  007A2E                     l1808:
  1617  007A2E  0E17               	movlw	23
  1618  007A30  6E05               	movwf	??___fttol& (0+255),c
  1619  007A32  C001  F006         	movff	___fttol@f1,??___fttol+1
  1620  007A36  C002  F007         	movff	___fttol@f1+1,??___fttol+2
  1621  007A3A  C003  F008         	movff	___fttol@f1+2,??___fttol+3
  1622  007A3E  2805               	incf	??___fttol,w,c
  1623  007A40  6E09               	movwf	(??___fttol+4)& (0+255),c
  1624  007A42  D004               	goto	u1160
  1625  007A44                     u1165:
  1626  007A44  90D8               	bcf	status,0,c
  1627  007A46  3208               	rrcf	??___fttol+3,f,c
  1628  007A48  3207               	rrcf	??___fttol+2,f,c
  1629  007A4A  3206               	rrcf	??___fttol+1,f,c
  1630  007A4C                     u1160:
  1631  007A4C  2E09               	decfsz	(??___fttol+4)& (0+255),f,c
  1632  007A4E  D7FA               	goto	u1165
  1633  007A50  5006               	movf	??___fttol+1,w,c
  1634  007A52  6E0A               	movwf	___fttol@sign1,c
  1635  007A54  8E02               	bsf	___fttol@f1+1,7,c
  1636  007A56  0EFF               	movlw	255
  1637  007A58  1601               	andwf	___fttol@f1,f,c
  1638  007A5A  0EFF               	movlw	255
  1639  007A5C  1602               	andwf	___fttol@f1+1,f,c
  1640  007A5E  0E00               	movlw	0
  1641  007A60  1603               	andwf	___fttol@f1+2,f,c
  1642  007A62  5001               	movf	___fttol@f1,w,c
  1643  007A64  6E0B               	movwf	___fttol@lval,c
  1644  007A66  5002               	movf	___fttol@f1+1,w,c
  1645  007A68  6E0C               	movwf	___fttol@lval+1,c
  1646  007A6A  5003               	movf	___fttol@f1+2,w,c
  1647  007A6C  6E0D               	movwf	___fttol@lval+2,c
  1648  007A6E  6A0E               	clrf	___fttol@lval+3,c
  1649  007A70  0E8E               	movlw	142
  1650  007A72  5E0F               	subwf	___fttol@exp1,f,c
  1651  007A74  AE0F               	btfss	___fttol@exp1,7,c
  1652  007A76  D016               	goto	l1830
  1653  007A78  500F               	movf	___fttol@exp1,w,c
  1654  007A7A  0A80               	xorlw	128
  1655  007A7C  0F8F               	addlw	143
  1656  007A7E  B0D8               	btfsc	status,0,c
  1657  007A80  D009               	goto	l1826
  1658  007A82  0E00               	movlw	0
  1659  007A84  6E01               	movwf	?___fttol,c
  1660  007A86  0E00               	movlw	0
  1661  007A88  6E02               	movwf	?___fttol+1,c
  1662  007A8A  0E00               	movlw	0
  1663  007A8C  6E03               	movwf	?___fttol+2,c
  1664  007A8E  0E00               	movlw	0
  1665  007A90  6E04               	movwf	?___fttol+3,c
  1666  007A92  0012               	return	
  1667  007A94                     l1826:
  1668  007A94  90D8               	bcf	status,0,c
  1669  007A96  320E               	rrcf	___fttol@lval+3,f,c
  1670  007A98  320D               	rrcf	___fttol@lval+2,f,c
  1671  007A9A  320C               	rrcf	___fttol@lval+1,f,c
  1672  007A9C  320B               	rrcf	___fttol@lval,f,c
  1673  007A9E  3E0F               	incfsz	___fttol@exp1,f,c
  1674  007AA0  D7F9               	goto	l1826
  1675  007AA2  D015               	goto	l1840
  1676  007AA4                     l1830:
  1677  007AA4  0E17               	movlw	23
  1678  007AA6  640F               	cpfsgt	___fttol@exp1,c
  1679  007AA8  D00F               	goto	l1838
  1680  007AAA  0E00               	movlw	0
  1681  007AAC  6E01               	movwf	?___fttol,c
  1682  007AAE  0E00               	movlw	0
  1683  007AB0  6E02               	movwf	?___fttol+1,c
  1684  007AB2  0E00               	movlw	0
  1685  007AB4  6E03               	movwf	?___fttol+2,c
  1686  007AB6  0E00               	movlw	0
  1687  007AB8  6E04               	movwf	?___fttol+3,c
  1688  007ABA  0012               	return	
  1689  007ABC                     l1836:
  1690  007ABC  90D8               	bcf	status,0,c
  1691  007ABE  360B               	rlcf	___fttol@lval,f,c
  1692  007AC0  360C               	rlcf	___fttol@lval+1,f,c
  1693  007AC2  360D               	rlcf	___fttol@lval+2,f,c
  1694  007AC4  360E               	rlcf	___fttol@lval+3,f,c
  1695  007AC6  060F               	decf	___fttol@exp1,f,c
  1696  007AC8                     l1838:
  1697  007AC8  500F               	movf	___fttol@exp1,w,c
  1698  007ACA  A4D8               	btfss	status,2,c
  1699  007ACC  D7F7               	goto	l1836
  1700  007ACE                     l1840:
  1701  007ACE  500A               	movf	___fttol@sign1,w,c
  1702  007AD0  B4D8               	btfsc	status,2,c
  1703  007AD2  D008               	goto	l1844
  1704  007AD4  1E0E               	comf	___fttol@lval+3,f,c
  1705  007AD6  1E0D               	comf	___fttol@lval+2,f,c
  1706  007AD8  1E0C               	comf	___fttol@lval+1,f,c
  1707  007ADA  6C0B               	negf	___fttol@lval,c
  1708  007ADC  0E00               	movlw	0
  1709  007ADE  220C               	addwfc	___fttol@lval+1,f,c
  1710  007AE0  220D               	addwfc	___fttol@lval+2,f,c
  1711  007AE2  220E               	addwfc	___fttol@lval+3,f,c
  1712  007AE4                     l1844:
  1713  007AE4  C00B  F001         	movff	___fttol@lval,?___fttol
  1714  007AE8  C00C  F002         	movff	___fttol@lval+1,?___fttol+1
  1715  007AEC  C00D  F003         	movff	___fttol@lval+2,?___fttol+2
  1716  007AF0  C00E  F004         	movff	___fttol@lval+3,?___fttol+3
  1717  007AF4  0012               	return	
  1718  007AF6                     __end_of___fttol:
  1719                           	opt stack 0
  1720                           tblptru	equ	0xFF8
  1721                           wreg	equ	0xFE8
  1722                           status	equ	0xFD8
  1723                           
  1724 ;; *************** function ___ftmul *****************
  1725 ;; Defined at:
  1726 ;;		line 62 in file "/opt/microchip/xc8/v1.42/sources/common/ftmul.c"
  1727 ;; Parameters:    Size  Location     Type
  1728 ;;  f1              3    8[COMRAM] float 
  1729 ;;  f2              3   11[COMRAM] float 
  1730 ;; Auto vars:     Size  Location     Type
  1731 ;;  f3_as_produc    3   18[COMRAM] unsigned um
  1732 ;;  sign            1   22[COMRAM] unsigned char 
  1733 ;;  cntr            1   21[COMRAM] unsigned char 
  1734 ;;  exp             1   17[COMRAM] unsigned char 
  1735 ;; Return value:  Size  Location     Type
  1736 ;;                  3    8[COMRAM] float 
  1737 ;; Registers used:
  1738 ;;		wreg, status,2, status,0, cstack
  1739 ;; Tracked objects:
  1740 ;;		On entry : 0/0
  1741 ;;		On exit  : 0/0
  1742 ;;		Unchanged: 0/0
  1743 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1744 ;;      Params:         6       0       0       0       0       0       0       0       0
  1745 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1746 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1747 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1748 ;;Total ram usage:       15 bytes
  1749 ;; Hardware stack levels used:    1
  1750 ;; Hardware stack levels required when called:    1
  1751 ;; This function calls:
  1752 ;;		___ftpack
  1753 ;; This function is called by:
  1754 ;;		_read_and_print_distance
  1755 ;; This function uses a non-reentrant model
  1756 ;;
  1757                           
  1758                           	psect	text5
  1759  00790E                     __ptext5:
  1760                           	opt stack 0
  1761  00790E                     ___ftmul:
  1762                           	opt stack 28
  1763                           
  1764                           ;incstack = 0
  1765  00790E  C00B  F00F         	movff	___ftmul@f1+2,??___ftmul
  1766  007912  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1767  007914  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1768  007916  340A               	rlcf	___ftmul@f1+1,w,c
  1769  007918  360F               	rlcf	??___ftmul& (0+255),f,c
  1770  00791A  E301               	bnc	u1021
  1771  00791C  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1772  00791E                     u1021:
  1773  00791E  500F               	movf	??___ftmul,w,c
  1774  007920  6E12               	movwf	___ftmul@exp,c
  1775  007922  5012               	movf	___ftmul@exp,w,c
  1776  007924  A4D8               	btfss	status,2,c
  1777  007926  D007               	goto	l1716
  1778  007928  0E00               	movlw	0
  1779  00792A  6E09               	movwf	?___ftmul,c
  1780  00792C  0E00               	movlw	0
  1781  00792E  6E0A               	movwf	?___ftmul+1,c
  1782  007930  0E00               	movlw	0
  1783  007932  6E0B               	movwf	?___ftmul+2,c
  1784  007934  0012               	return	
  1785  007936                     l1716:
  1786  007936  C00E  F00F         	movff	___ftmul@f2+2,??___ftmul
  1787  00793A  6A10               	clrf	(??___ftmul+1)& (0+255),c
  1788  00793C  6A11               	clrf	(??___ftmul+2)& (0+255),c
  1789  00793E  340D               	rlcf	___ftmul@f2+1,w,c
  1790  007940  360F               	rlcf	??___ftmul& (0+255),f,c
  1791  007942  E301               	bnc	u1041
  1792  007944  8010               	bsf	(??___ftmul+1)& (0+255),0,c
  1793  007946                     u1041:
  1794  007946  500F               	movf	??___ftmul,w,c
  1795  007948  6E17               	movwf	___ftmul@sign,c
  1796  00794A  5017               	movf	___ftmul@sign,w,c
  1797  00794C  A4D8               	btfss	status,2,c
  1798  00794E  D007               	goto	l1722
  1799  007950  0E00               	movlw	0
  1800  007952  6E09               	movwf	?___ftmul,c
  1801  007954  0E00               	movlw	0
  1802  007956  6E0A               	movwf	?___ftmul+1,c
  1803  007958  0E00               	movlw	0
  1804  00795A  6E0B               	movwf	?___ftmul+2,c
  1805  00795C  0012               	return	
  1806  00795E                     l1722:
  1807  00795E  5017               	movf	___ftmul@sign,w,c
  1808  007960  0F7B               	addlw	123
  1809  007962  2612               	addwf	___ftmul@exp,f,c
  1810  007964  C00B  F017         	movff	___ftmul@f1+2,___ftmul@sign
  1811  007968  500E               	movf	___ftmul@f2+2,w,c
  1812  00796A  1A17               	xorwf	___ftmul@sign,f,c
  1813  00796C  0E80               	movlw	128
  1814  00796E  1617               	andwf	___ftmul@sign,f,c
  1815  007970  8E0A               	bsf	___ftmul@f1+1,7,c
  1816  007972  8E0D               	bsf	___ftmul@f2+1,7,c
  1817  007974  0EFF               	movlw	255
  1818  007976  160C               	andwf	___ftmul@f2,f,c
  1819  007978  0EFF               	movlw	255
  1820  00797A  160D               	andwf	___ftmul@f2+1,f,c
  1821  00797C  0E00               	movlw	0
  1822  00797E  160E               	andwf	___ftmul@f2+2,f,c
  1823  007980  0E00               	movlw	0
  1824  007982  6E13               	movwf	___ftmul@f3_as_product,c
  1825  007984  0E00               	movlw	0
  1826  007986  6E14               	movwf	___ftmul@f3_as_product+1,c
  1827  007988  0E00               	movlw	0
  1828  00798A  6E15               	movwf	___ftmul@f3_as_product+2,c
  1829  00798C  0E07               	movlw	7
  1830  00798E  6E16               	movwf	___ftmul@cntr,c
  1831  007990                     l1736:
  1832  007990  A009               	btfss	___ftmul@f1,0,c
  1833  007992  D006               	goto	l1740
  1834  007994  500C               	movf	___ftmul@f2,w,c
  1835  007996  2613               	addwf	___ftmul@f3_as_product,f,c
  1836  007998  500D               	movf	___ftmul@f2+1,w,c
  1837  00799A  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1838  00799C  500E               	movf	___ftmul@f2+2,w,c
  1839  00799E  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1840  0079A0                     l1740:
  1841  0079A0  90D8               	bcf	status,0,c
  1842  0079A2  320B               	rrcf	___ftmul@f1+2,f,c
  1843  0079A4  320A               	rrcf	___ftmul@f1+1,f,c
  1844  0079A6  3209               	rrcf	___ftmul@f1,f,c
  1845  0079A8  90D8               	bcf	status,0,c
  1846  0079AA  360C               	rlcf	___ftmul@f2,f,c
  1847  0079AC  360D               	rlcf	___ftmul@f2+1,f,c
  1848  0079AE  360E               	rlcf	___ftmul@f2+2,f,c
  1849  0079B0  2E16               	decfsz	___ftmul@cntr,f,c
  1850  0079B2  D7EE               	goto	l1736
  1851  0079B4  0E09               	movlw	9
  1852  0079B6  6E16               	movwf	___ftmul@cntr,c
  1853  0079B8                     l1746:
  1854  0079B8  A009               	btfss	___ftmul@f1,0,c
  1855  0079BA  D006               	goto	l1750
  1856  0079BC  500C               	movf	___ftmul@f2,w,c
  1857  0079BE  2613               	addwf	___ftmul@f3_as_product,f,c
  1858  0079C0  500D               	movf	___ftmul@f2+1,w,c
  1859  0079C2  2214               	addwfc	___ftmul@f3_as_product+1,f,c
  1860  0079C4  500E               	movf	___ftmul@f2+2,w,c
  1861  0079C6  2215               	addwfc	___ftmul@f3_as_product+2,f,c
  1862  0079C8                     l1750:
  1863  0079C8  90D8               	bcf	status,0,c
  1864  0079CA  320B               	rrcf	___ftmul@f1+2,f,c
  1865  0079CC  320A               	rrcf	___ftmul@f1+1,f,c
  1866  0079CE  3209               	rrcf	___ftmul@f1,f,c
  1867  0079D0  90D8               	bcf	status,0,c
  1868  0079D2  3215               	rrcf	___ftmul@f3_as_product+2,f,c
  1869  0079D4  3214               	rrcf	___ftmul@f3_as_product+1,f,c
  1870  0079D6  3213               	rrcf	___ftmul@f3_as_product,f,c
  1871  0079D8  2E16               	decfsz	___ftmul@cntr,f,c
  1872  0079DA  D7EE               	goto	l1746
  1873  0079DC  C013  F001         	movff	___ftmul@f3_as_product,___ftpack@arg
  1874  0079E0  C014  F002         	movff	___ftmul@f3_as_product+1,___ftpack@arg+1
  1875  0079E4  C015  F003         	movff	___ftmul@f3_as_product+2,___ftpack@arg+2
  1876  0079E8  C012  F004         	movff	___ftmul@exp,___ftpack@exp
  1877  0079EC  C017  F005         	movff	___ftmul@sign,___ftpack@sign
  1878  0079F0  ECDB  F03A         	call	___ftpack	;wreg free
  1879  0079F4  C001  F009         	movff	?___ftpack,?___ftmul
  1880  0079F8  C002  F00A         	movff	?___ftpack+1,?___ftmul+1
  1881  0079FC  C003  F00B         	movff	?___ftpack+2,?___ftmul+2
  1882  007A00  0012               	return	
  1883  007A02                     __end_of___ftmul:
  1884                           	opt stack 0
  1885                           tblptru	equ	0xFF8
  1886                           wreg	equ	0xFE8
  1887                           status	equ	0xFD8
  1888                           
  1889 ;; *************** function ___ftdiv *****************
  1890 ;; Defined at:
  1891 ;;		line 54 in file "/opt/microchip/xc8/v1.42/sources/common/ftdiv.c"
  1892 ;; Parameters:    Size  Location     Type
  1893 ;;  f1              3   18[COMRAM] float 
  1894 ;;  f2              3   21[COMRAM] float 
  1895 ;; Auto vars:     Size  Location     Type
  1896 ;;  f3              3   28[COMRAM] float 
  1897 ;;  sign            1   32[COMRAM] unsigned char 
  1898 ;;  exp             1   31[COMRAM] unsigned char 
  1899 ;;  cntr            1   27[COMRAM] unsigned char 
  1900 ;; Return value:  Size  Location     Type
  1901 ;;                  3   18[COMRAM] float 
  1902 ;; Registers used:
  1903 ;;		wreg, status,2, status,0, cstack
  1904 ;; Tracked objects:
  1905 ;;		On entry : 0/0
  1906 ;;		On exit  : 0/0
  1907 ;;		Unchanged: 0/0
  1908 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1909 ;;      Params:         6       0       0       0       0       0       0       0       0
  1910 ;;      Locals:         6       0       0       0       0       0       0       0       0
  1911 ;;      Temps:          3       0       0       0       0       0       0       0       0
  1912 ;;      Totals:        15       0       0       0       0       0       0       0       0
  1913 ;;Total ram usage:       15 bytes
  1914 ;; Hardware stack levels used:    1
  1915 ;; Hardware stack levels required when called:    1
  1916 ;; This function calls:
  1917 ;;		___ftpack
  1918 ;; This function is called by:
  1919 ;;		_read_and_print_distance
  1920 ;; This function uses a non-reentrant model
  1921 ;;
  1922                           
  1923                           	psect	text6
  1924  007828                     __ptext6:
  1925                           	opt stack 0
  1926  007828                     ___ftdiv:
  1927                           	opt stack 28
  1928                           
  1929                           ;incstack = 0
  1930  007828  C015  F019         	movff	___ftdiv@f1+2,??___ftdiv
  1931  00782C  6A1A               	clrf	(??___ftdiv+1)& (0+255),c
  1932  00782E  6A1B               	clrf	(??___ftdiv+2)& (0+255),c
  1933  007830  3414               	rlcf	___ftdiv@f1+1,w,c
  1934  007832  3619               	rlcf	??___ftdiv& (0+255),f,c
  1935  007834  E301               	bnc	u971
  1936  007836  801A               	bsf	(??___ftdiv+1)& (0+255),0,c
  1937  007838                     u971:
  1938  007838  5019               	movf	??___ftdiv,w,c
  1939  00783A  6E20               	movwf	___ftdiv@exp,c
  1940  00783C  5020               	movf	___ftdiv@exp,w,c
  1941  00783E  A4D8               	btfss	status,2,c
  1942  007840  D007               	goto	l1670
  1943  007842  0E00               	movlw	0
  1944  007844  6E13               	movwf	?___ftdiv,c
  1945  007846  0E00               	movlw	0
  1946  007848  6E14               	movwf	?___ftdiv+1,c
  1947  00784A  0E00               	movlw	0
  1948  00784C  6E15               	movwf	?___ftdiv+2,c
  1949  00784E  0012               	return	
  1950  007850                     l1670:
  1951  007850  C018  F019         	movff	___ftdiv@f2+2,??___ftdiv
  1952  007854  6A1A               	clrf	(??___ftdiv+1)& (0+255),c
  1953  007856  6A1B               	clrf	(??___ftdiv+2)& (0+255),c
  1954  007858  3417               	rlcf	___ftdiv@f2+1,w,c
  1955  00785A  3619               	rlcf	??___ftdiv& (0+255),f,c
  1956  00785C  E301               	bnc	u991
  1957  00785E  801A               	bsf	(??___ftdiv+1)& (0+255),0,c
  1958  007860                     u991:
  1959  007860  5019               	movf	??___ftdiv,w,c
  1960  007862  6E21               	movwf	___ftdiv@sign,c
  1961  007864  5021               	movf	___ftdiv@sign,w,c
  1962  007866  A4D8               	btfss	status,2,c
  1963  007868  D007               	goto	l1676
  1964  00786A  0E00               	movlw	0
  1965  00786C  6E13               	movwf	?___ftdiv,c
  1966  00786E  0E00               	movlw	0
  1967  007870  6E14               	movwf	?___ftdiv+1,c
  1968  007872  0E00               	movlw	0
  1969  007874  6E15               	movwf	?___ftdiv+2,c
  1970  007876  0012               	return	
  1971  007878                     l1676:
  1972  007878  0E00               	movlw	0
  1973  00787A  6E1D               	movwf	___ftdiv@f3,c
  1974  00787C  0E00               	movlw	0
  1975  00787E  6E1E               	movwf	___ftdiv@f3+1,c
  1976  007880  0E00               	movlw	0
  1977  007882  6E1F               	movwf	___ftdiv@f3+2,c
  1978  007884  5021               	movf	___ftdiv@sign,w,c
  1979  007886  0F89               	addlw	137
  1980  007888  5E20               	subwf	___ftdiv@exp,f,c
  1981  00788A  C015  F021         	movff	___ftdiv@f1+2,___ftdiv@sign
  1982  00788E  5018               	movf	___ftdiv@f2+2,w,c
  1983  007890  1A21               	xorwf	___ftdiv@sign,f,c
  1984  007892  0E80               	movlw	128
  1985  007894  1621               	andwf	___ftdiv@sign,f,c
  1986  007896  8E14               	bsf	___ftdiv@f1+1,7,c
  1987  007898  0EFF               	movlw	255
  1988  00789A  1613               	andwf	___ftdiv@f1,f,c
  1989  00789C  0EFF               	movlw	255
  1990  00789E  1614               	andwf	___ftdiv@f1+1,f,c
  1991  0078A0  0E00               	movlw	0
  1992  0078A2  1615               	andwf	___ftdiv@f1+2,f,c
  1993  0078A4  8E17               	bsf	___ftdiv@f2+1,7,c
  1994  0078A6  0EFF               	movlw	255
  1995  0078A8  1616               	andwf	___ftdiv@f2,f,c
  1996  0078AA  0EFF               	movlw	255
  1997  0078AC  1617               	andwf	___ftdiv@f2+1,f,c
  1998  0078AE  0E00               	movlw	0
  1999  0078B0  1618               	andwf	___ftdiv@f2+2,f,c
  2000  0078B2  0E18               	movlw	24
  2001  0078B4  6E1C               	movwf	___ftdiv@cntr,c
  2002  0078B6                     l1696:
  2003  0078B6  90D8               	bcf	status,0,c
  2004  0078B8  361D               	rlcf	___ftdiv@f3,f,c
  2005  0078BA  361E               	rlcf	___ftdiv@f3+1,f,c
  2006  0078BC  361F               	rlcf	___ftdiv@f3+2,f,c
  2007  0078BE  5016               	movf	___ftdiv@f2,w,c
  2008  0078C0  5C13               	subwf	___ftdiv@f1,w,c
  2009  0078C2  5017               	movf	___ftdiv@f2+1,w,c
  2010  0078C4  5814               	subwfb	___ftdiv@f1+1,w,c
  2011  0078C6  5018               	movf	___ftdiv@f2+2,w,c
  2012  0078C8  5815               	subwfb	___ftdiv@f1+2,w,c
  2013  0078CA  A0D8               	btfss	status,0,c
  2014  0078CC  D007               	goto	l451
  2015  0078CE  5016               	movf	___ftdiv@f2,w,c
  2016  0078D0  5E13               	subwf	___ftdiv@f1,f,c
  2017  0078D2  5017               	movf	___ftdiv@f2+1,w,c
  2018  0078D4  5A14               	subwfb	___ftdiv@f1+1,f,c
  2019  0078D6  5018               	movf	___ftdiv@f2+2,w,c
  2020  0078D8  5A15               	subwfb	___ftdiv@f1+2,f,c
  2021  0078DA  801D               	bsf	___ftdiv@f3,0,c
  2022  0078DC                     l451:
  2023  0078DC  90D8               	bcf	status,0,c
  2024  0078DE  3613               	rlcf	___ftdiv@f1,f,c
  2025  0078E0  3614               	rlcf	___ftdiv@f1+1,f,c
  2026  0078E2  3615               	rlcf	___ftdiv@f1+2,f,c
  2027  0078E4  2E1C               	decfsz	___ftdiv@cntr,f,c
  2028  0078E6  D7E7               	goto	l1696
  2029  0078E8  C01D  F001         	movff	___ftdiv@f3,___ftpack@arg
  2030  0078EC  C01E  F002         	movff	___ftdiv@f3+1,___ftpack@arg+1
  2031  0078F0  C01F  F003         	movff	___ftdiv@f3+2,___ftpack@arg+2
  2032  0078F4  C020  F004         	movff	___ftdiv@exp,___ftpack@exp
  2033  0078F8  C021  F005         	movff	___ftdiv@sign,___ftpack@sign
  2034  0078FC  ECDB  F03A         	call	___ftpack	;wreg free
  2035  007900  C001  F013         	movff	?___ftpack,?___ftdiv
  2036  007904  C002  F014         	movff	?___ftpack+1,?___ftdiv+1
  2037  007908  C003  F015         	movff	?___ftpack+2,?___ftdiv+2
  2038  00790C  0012               	return	
  2039  00790E                     __end_of___ftdiv:
  2040                           	opt stack 0
  2041                           tblptru	equ	0xFF8
  2042                           wreg	equ	0xFE8
  2043                           status	equ	0xFD8
  2044                           
  2045 ;; *************** function ___altoft *****************
  2046 ;; Defined at:
  2047 ;;		line 42 in file "/opt/microchip/xc8/v1.42/sources/common/altoft.c"
  2048 ;; Parameters:    Size  Location     Type
  2049 ;;  c               4    8[COMRAM] long 
  2050 ;; Auto vars:     Size  Location     Type
  2051 ;;  sign            1   17[COMRAM] unsigned char 
  2052 ;;  exp             1   16[COMRAM] unsigned char 
  2053 ;; Return value:  Size  Location     Type
  2054 ;;                  3    8[COMRAM] float 
  2055 ;; Registers used:
  2056 ;;		wreg, status,2, status,0, cstack
  2057 ;; Tracked objects:
  2058 ;;		On entry : 0/0
  2059 ;;		On exit  : 0/0
  2060 ;;		Unchanged: 0/0
  2061 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2062 ;;      Params:         4       0       0       0       0       0       0       0       0
  2063 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2064 ;;      Temps:          4       0       0       0       0       0       0       0       0
  2065 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2066 ;;Total ram usage:       10 bytes
  2067 ;; Hardware stack levels used:    1
  2068 ;; Hardware stack levels required when called:    1
  2069 ;; This function calls:
  2070 ;;		___ftpack
  2071 ;; This function is called by:
  2072 ;;		_read_and_print_distance
  2073 ;; This function uses a non-reentrant model
  2074 ;;
  2075                           
  2076                           	psect	text7
  2077  007386                     __ptext7:
  2078                           	opt stack 0
  2079  007386                     ___altoft:
  2080                           	opt stack 28
  2081                           
  2082                           ;incstack = 0
  2083  007386  0E00               	movlw	0
  2084  007388  6E12               	movwf	___altoft@sign,c
  2085  00738A  0E8E               	movlw	142
  2086  00738C  6E11               	movwf	___altoft@exp,c
  2087  00738E  AE0C               	btfss	___altoft@c+3,7,c
  2088  007390  D011               	goto	l1658
  2089  007392  1E0C               	comf	___altoft@c+3,f,c
  2090  007394  1E0B               	comf	___altoft@c+2,f,c
  2091  007396  1E0A               	comf	___altoft@c+1,f,c
  2092  007398  6C09               	negf	___altoft@c,c
  2093  00739A  0E00               	movlw	0
  2094  00739C  220A               	addwfc	___altoft@c+1,f,c
  2095  00739E  220B               	addwfc	___altoft@c+2,f,c
  2096  0073A0  220C               	addwfc	___altoft@c+3,f,c
  2097  0073A2  0E01               	movlw	1
  2098  0073A4  6E12               	movwf	___altoft@sign,c
  2099  0073A6  D006               	goto	l1658
  2100  0073A8                     l1656:
  2101  0073A8  90D8               	bcf	status,0,c
  2102  0073AA  320C               	rrcf	___altoft@c+3,f,c
  2103  0073AC  320B               	rrcf	___altoft@c+2,f,c
  2104  0073AE  320A               	rrcf	___altoft@c+1,f,c
  2105  0073B0  3209               	rrcf	___altoft@c,f,c
  2106  0073B2  2A11               	incf	___altoft@exp,f,c
  2107  0073B4                     l1658:
  2108  0073B4  0E00               	movlw	0
  2109  0073B6  1409               	andwf	___altoft@c,w,c
  2110  0073B8  6E0D               	movwf	??___altoft& (0+255),c
  2111  0073BA  0E00               	movlw	0
  2112  0073BC  140A               	andwf	___altoft@c+1,w,c
  2113  0073BE  6E0E               	movwf	(??___altoft+1)& (0+255),c
  2114  0073C0  0E00               	movlw	0
  2115  0073C2  140B               	andwf	___altoft@c+2,w,c
  2116  0073C4  6E0F               	movwf	(??___altoft+2)& (0+255),c
  2117  0073C6  0EFF               	movlw	255
  2118  0073C8  140C               	andwf	___altoft@c+3,w,c
  2119  0073CA  6E10               	movwf	(??___altoft+3)& (0+255),c
  2120  0073CC  500D               	movf	??___altoft,w,c
  2121  0073CE  100E               	iorwf	??___altoft+1,w,c
  2122  0073D0  100F               	iorwf	??___altoft+2,w,c
  2123  0073D2  1010               	iorwf	??___altoft+3,w,c
  2124  0073D4  A4D8               	btfss	status,2,c
  2125  0073D6  D7E8               	goto	l1656
  2126  0073D8  C009  F001         	movff	___altoft@c,___ftpack@arg
  2127  0073DC  C00A  F002         	movff	___altoft@c+1,___ftpack@arg+1
  2128  0073E0  C00B  F003         	movff	___altoft@c+2,___ftpack@arg+2
  2129  0073E4  C011  F004         	movff	___altoft@exp,___ftpack@exp
  2130  0073E8  C012  F005         	movff	___altoft@sign,___ftpack@sign
  2131  0073EC  ECDB  F03A         	call	___ftpack	;wreg free
  2132  0073F0  C001  F009         	movff	?___ftpack,?___altoft
  2133  0073F4  C002  F00A         	movff	?___ftpack+1,?___altoft+1
  2134  0073F8  C003  F00B         	movff	?___ftpack+2,?___altoft+2
  2135  0073FC  0012               	return	
  2136  0073FE                     __end_of___altoft:
  2137                           	opt stack 0
  2138                           tblptru	equ	0xFF8
  2139                           wreg	equ	0xFE8
  2140                           status	equ	0xFD8
  2141                           
  2142 ;; *************** function ___ftpack *****************
  2143 ;; Defined at:
  2144 ;;		line 62 in file "/opt/microchip/xc8/v1.42/sources/common/float.c"
  2145 ;; Parameters:    Size  Location     Type
  2146 ;;  arg             3    0[COMRAM] unsigned um
  2147 ;;  exp             1    3[COMRAM] unsigned char 
  2148 ;;  sign            1    4[COMRAM] unsigned char 
  2149 ;; Auto vars:     Size  Location     Type
  2150 ;;		None
  2151 ;; Return value:  Size  Location     Type
  2152 ;;                  3    0[COMRAM] float 
  2153 ;; Registers used:
  2154 ;;		wreg, status,2, status,0
  2155 ;; Tracked objects:
  2156 ;;		On entry : 0/0
  2157 ;;		On exit  : 0/0
  2158 ;;		Unchanged: 0/0
  2159 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2160 ;;      Params:         5       0       0       0       0       0       0       0       0
  2161 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2162 ;;      Temps:          3       0       0       0       0       0       0       0       0
  2163 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2164 ;;Total ram usage:        8 bytes
  2165 ;; Hardware stack levels used:    1
  2166 ;; This function calls:
  2167 ;;		Nothing
  2168 ;; This function is called by:
  2169 ;;		___altoft
  2170 ;;		___ftdiv
  2171 ;;		___ftmul
  2172 ;; This function uses a non-reentrant model
  2173 ;;
  2174                           
  2175                           	psect	text8
  2176  0075B6                     __ptext8:
  2177                           	opt stack 0
  2178  0075B6                     ___ftpack:
  2179                           	opt stack 28
  2180                           
  2181                           ;incstack = 0
  2182  0075B6  5004               	movf	___ftpack@exp,w,c
  2183  0075B8  B4D8               	btfsc	status,2,c
  2184  0075BA  D005               	goto	l1534
  2185  0075BC  5001               	movf	___ftpack@arg,w,c
  2186  0075BE  1002               	iorwf	___ftpack@arg+1,w,c
  2187  0075C0  1003               	iorwf	___ftpack@arg+2,w,c
  2188  0075C2  A4D8               	btfss	status,2,c
  2189  0075C4  D00C               	goto	l1540
  2190  0075C6                     l1534:
  2191  0075C6  0E00               	movlw	0
  2192  0075C8  6E01               	movwf	?___ftpack,c
  2193  0075CA  0E00               	movlw	0
  2194  0075CC  6E02               	movwf	?___ftpack+1,c
  2195  0075CE  0E00               	movlw	0
  2196  0075D0  6E03               	movwf	?___ftpack+2,c
  2197  0075D2  0012               	return	
  2198  0075D4                     l1538:
  2199  0075D4  2A04               	incf	___ftpack@exp,f,c
  2200  0075D6  90D8               	bcf	status,0,c
  2201  0075D8  3203               	rrcf	___ftpack@arg+2,f,c
  2202  0075DA  3202               	rrcf	___ftpack@arg+1,f,c
  2203  0075DC  3201               	rrcf	___ftpack@arg,f,c
  2204  0075DE                     l1540:
  2205  0075DE  0E00               	movlw	0
  2206  0075E0  1401               	andwf	___ftpack@arg,w,c
  2207  0075E2  6E06               	movwf	??___ftpack& (0+255),c
  2208  0075E4  0E00               	movlw	0
  2209  0075E6  1402               	andwf	___ftpack@arg+1,w,c
  2210  0075E8  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2211  0075EA  0EFE               	movlw	254
  2212  0075EC  1403               	andwf	___ftpack@arg+2,w,c
  2213  0075EE  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2214  0075F0  5006               	movf	??___ftpack,w,c
  2215  0075F2  1007               	iorwf	??___ftpack+1,w,c
  2216  0075F4  1008               	iorwf	??___ftpack+2,w,c
  2217  0075F6  B4D8               	btfsc	status,2,c
  2218  0075F8  D00C               	goto	l1546
  2219  0075FA  D7EC               	goto	l1538
  2220  0075FC                     l1542:
  2221  0075FC  2A04               	incf	___ftpack@exp,f,c
  2222  0075FE  0E01               	movlw	1
  2223  007600  2601               	addwf	___ftpack@arg,f,c
  2224  007602  0E00               	movlw	0
  2225  007604  2202               	addwfc	___ftpack@arg+1,f,c
  2226  007606  0E00               	movlw	0
  2227  007608  2203               	addwfc	___ftpack@arg+2,f,c
  2228  00760A  90D8               	bcf	status,0,c
  2229  00760C  3203               	rrcf	___ftpack@arg+2,f,c
  2230  00760E  3202               	rrcf	___ftpack@arg+1,f,c
  2231  007610  3201               	rrcf	___ftpack@arg,f,c
  2232  007612                     l1546:
  2233  007612  0E00               	movlw	0
  2234  007614  1401               	andwf	___ftpack@arg,w,c
  2235  007616  6E06               	movwf	??___ftpack& (0+255),c
  2236  007618  0E00               	movlw	0
  2237  00761A  1402               	andwf	___ftpack@arg+1,w,c
  2238  00761C  6E07               	movwf	(??___ftpack+1)& (0+255),c
  2239  00761E  0EFF               	movlw	255
  2240  007620  1403               	andwf	___ftpack@arg+2,w,c
  2241  007622  6E08               	movwf	(??___ftpack+2)& (0+255),c
  2242  007624  5006               	movf	??___ftpack,w,c
  2243  007626  1007               	iorwf	??___ftpack+1,w,c
  2244  007628  1008               	iorwf	??___ftpack+2,w,c
  2245  00762A  B4D8               	btfsc	status,2,c
  2246  00762C  D006               	goto	l1550
  2247  00762E  D7E6               	goto	l1542
  2248  007630                     l1548:
  2249  007630  0604               	decf	___ftpack@exp,f,c
  2250  007632  90D8               	bcf	status,0,c
  2251  007634  3601               	rlcf	___ftpack@arg,f,c
  2252  007636  3602               	rlcf	___ftpack@arg+1,f,c
  2253  007638  3603               	rlcf	___ftpack@arg+2,f,c
  2254  00763A                     l1550:
  2255  00763A  BE02               	btfsc	___ftpack@arg+1,7,c
  2256  00763C  D003               	goto	l393
  2257  00763E  0E02               	movlw	2
  2258  007640  6004               	cpfslt	___ftpack@exp,c
  2259  007642  D7F6               	goto	l1548
  2260  007644                     l393:
  2261  007644  A004               	btfss	___ftpack@exp,0,c
  2262  007646  9E02               	bcf	___ftpack@arg+1,7,c
  2263  007648  90D8               	bcf	status,0,c
  2264  00764A  3204               	rrcf	___ftpack@exp,f,c
  2265  00764C  5004               	movf	___ftpack@exp,w,c
  2266  00764E  1203               	iorwf	___ftpack@arg+2,f,c
  2267  007650  5005               	movf	___ftpack@sign,w,c
  2268  007652  A4D8               	btfss	status,2,c
  2269  007654  8E03               	bsf	___ftpack@arg+2,7,c
  2270  007656  C001  F001         	movff	___ftpack@arg,?___ftpack
  2271  00765A  C002  F002         	movff	___ftpack@arg+1,?___ftpack+1
  2272  00765E  C003  F003         	movff	___ftpack@arg+2,?___ftpack+2
  2273  007662  0012               	return	
  2274  007664                     __end_of___ftpack:
  2275                           	opt stack 0
  2276                           tblptru	equ	0xFF8
  2277                           wreg	equ	0xFE8
  2278                           status	equ	0xFD8
  2279                           
  2280 ;; *************** function _motion_sensor *****************
  2281 ;; Defined at:
  2282 ;;		line 142 in file "newmain.c"
  2283 ;; Parameters:    Size  Location     Type
  2284 ;;		None
  2285 ;; Auto vars:     Size  Location     Type
  2286 ;;		None
  2287 ;; Return value:  Size  Location     Type
  2288 ;;                  1    wreg      void 
  2289 ;; Registers used:
  2290 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2291 ;; Tracked objects:
  2292 ;;		On entry : 0/0
  2293 ;;		On exit  : 0/0
  2294 ;;		Unchanged: 0/0
  2295 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2296 ;;      Params:         0       0       0       0       0       0       0       0       0
  2297 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2298 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2299 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2300 ;;Total ram usage:        0 bytes
  2301 ;; Hardware stack levels used:    1
  2302 ;; Hardware stack levels required when called:    3
  2303 ;; This function calls:
  2304 ;;		_Lcd_Clear
  2305 ;;		_Lcd_Set_Cursor
  2306 ;;		_Lcd_Write_String
  2307 ;;		_buzz_seconds
  2308 ;; This function is called by:
  2309 ;;		_main
  2310 ;; This function uses a non-reentrant model
  2311 ;;
  2312                           
  2313                           	psect	text9
  2314  007482                     __ptext9:
  2315                           	opt stack 0
  2316  007482                     _motion_sensor:
  2317                           	opt stack 27
  2318                           
  2319                           ;newmain.c: 144: Lcd_Clear();
  2320                           
  2321                           ;incstack = 0
  2322  007482  ECFA  F037         	call	_Lcd_Clear	;wreg free
  2323                           
  2324                           ;newmain.c: 145: Lcd_Set_Cursor(1, 1);
  2325  007486  0E01               	movlw	1
  2326  007488  6E04               	movwf	Lcd_Set_Cursor@b,c
  2327  00748A  0E01               	movlw	1
  2328  00748C  ECCE  F038         	call	_Lcd_Set_Cursor
  2329                           
  2330                           ;newmain.c: 146: Lcd_Write_String(" Don't Move.");
  2331  007490  0EC7               	movlw	low STR_11
  2332  007492  6E05               	movwf	Lcd_Write_String@a,c
  2333  007494  0E7F               	movlw	high STR_11
  2334  007496  6E06               	movwf	Lcd_Write_String@a+1,c
  2335  007498  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2336  00749C                     l140:
  2337  00749C  B082               	btfsc	3970,0,c	;volatile
  2338  00749E  D7FE               	goto	l140
  2339                           
  2340                           ;newmain.c: 150: };
  2341                           ;newmain.c: 152: Lcd_Clear();
  2342  0074A0  ECFA  F037         	call	_Lcd_Clear	;wreg free
  2343                           
  2344                           ;newmain.c: 153: Lcd_Set_Cursor(1, 1);
  2345  0074A4  0E01               	movlw	1
  2346  0074A6  6E04               	movwf	Lcd_Set_Cursor@b,c
  2347  0074A8  0E01               	movlw	1
  2348  0074AA  ECCE  F038         	call	_Lcd_Set_Cursor
  2349                           
  2350                           ;newmain.c: 154: Lcd_Write_String("    Security    ");
  2351  0074AE  0E3B               	movlw	low STR_12
  2352  0074B0  6E05               	movwf	Lcd_Write_String@a,c
  2353  0074B2  0E7F               	movlw	high STR_12
  2354  0074B4  6E06               	movwf	Lcd_Write_String@a+1,c
  2355  0074B6  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2356                           
  2357                           ;newmain.c: 155: Lcd_Set_Cursor(2, 1);
  2358  0074BA  0E01               	movlw	1
  2359  0074BC  6E04               	movwf	Lcd_Set_Cursor@b,c
  2360  0074BE  0E02               	movlw	2
  2361  0074C0  ECCE  F038         	call	_Lcd_Set_Cursor
  2362                           
  2363                           ;newmain.c: 156: Lcd_Write_String("    Activated   ");
  2364  0074C4  0E5D               	movlw	low STR_13
  2365  0074C6  6E05               	movwf	Lcd_Write_String@a,c
  2366  0074C8  0E7F               	movlw	high STR_13
  2367  0074CA  6E06               	movwf	Lcd_Write_String@a+1,c
  2368  0074CC  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2369  0074D0                     l143:
  2370  0074D0  A082               	btfss	3970,0,c	;volatile
  2371  0074D2  D7FE               	goto	l143
  2372                           
  2373                           ;newmain.c: 161: Lcd_Clear();
  2374  0074D4  ECFA  F037         	call	_Lcd_Clear	;wreg free
  2375                           
  2376                           ;newmain.c: 162: Lcd_Set_Cursor(1, 1);
  2377  0074D8  0E01               	movlw	1
  2378  0074DA  6E04               	movwf	Lcd_Set_Cursor@b,c
  2379  0074DC  0E01               	movlw	1
  2380  0074DE  ECCE  F038         	call	_Lcd_Set_Cursor
  2381                           
  2382                           ;newmain.c: 163: Lcd_Write_String("     Motion     ");
  2383  0074E2  0EF7               	movlw	low STR_14
  2384  0074E4  6E05               	movwf	Lcd_Write_String@a,c
  2385  0074E6  0E7E               	movlw	high STR_14
  2386  0074E8  6E06               	movwf	Lcd_Write_String@a+1,c
  2387  0074EA  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2388                           
  2389                           ;newmain.c: 164: Lcd_Set_Cursor(2, 1);
  2390  0074EE  0E01               	movlw	1
  2391  0074F0  6E04               	movwf	Lcd_Set_Cursor@b,c
  2392  0074F2  0E02               	movlw	2
  2393  0074F4  ECCE  F038         	call	_Lcd_Set_Cursor
  2394                           
  2395                           ;newmain.c: 165: Lcd_Write_String("    Detected!   ");
  2396  0074F8  0E4C               	movlw	low STR_15
  2397  0074FA  6E05               	movwf	Lcd_Write_String@a,c
  2398  0074FC  0E7F               	movlw	high STR_15
  2399  0074FE  6E06               	movwf	Lcd_Write_String@a+1,c
  2400  007500  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2401                           
  2402                           ;newmain.c: 167: buzz_seconds(3);
  2403  007504  0E00               	movlw	0
  2404  007506  6E08               	movwf	buzz_seconds@seconds+1,c
  2405  007508  0E03               	movlw	3
  2406  00750A  6E07               	movwf	buzz_seconds@seconds,c
  2407  00750C  EC1F  F039         	call	_buzz_seconds	;wreg free
  2408  007510  0012               	return		;funcret
  2409  007512                     __end_of_motion_sensor:
  2410                           	opt stack 0
  2411                           tblptru	equ	0xFF8
  2412                           wreg	equ	0xFE8
  2413                           status	equ	0xFD8
  2414                           
  2415 ;; *************** function _countdown_timer *****************
  2416 ;; Defined at:
  2417 ;;		line 119 in file "newmain.c"
  2418 ;; Parameters:    Size  Location     Type
  2419 ;;  seconds         2   24[COMRAM] int 
  2420 ;; Auto vars:     Size  Location     Type
  2421 ;;  i               2   32[COMRAM] int 
  2422 ;;  sec_str         4   28[COMRAM] unsigned char [4]
  2423 ;; Return value:  Size  Location     Type
  2424 ;;                  1    wreg      void 
  2425 ;; Registers used:
  2426 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, prodl, prodh, cstack
  2427 ;; Tracked objects:
  2428 ;;		On entry : 0/0
  2429 ;;		On exit  : 0/0
  2430 ;;		Unchanged: 0/0
  2431 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2432 ;;      Params:         2       0       0       0       0       0       0       0       0
  2433 ;;      Locals:         6       0       0       0       0       0       0       0       0
  2434 ;;      Temps:          2       0       0       0       0       0       0       0       0
  2435 ;;      Totals:        10       0       0       0       0       0       0       0       0
  2436 ;;Total ram usage:       10 bytes
  2437 ;; Hardware stack levels used:    1
  2438 ;; Hardware stack levels required when called:    3
  2439 ;; This function calls:
  2440 ;;		_Lcd_Clear
  2441 ;;		_Lcd_Set_Cursor
  2442 ;;		_Lcd_Write_String
  2443 ;;		_buzz_seconds
  2444 ;;		_itoa
  2445 ;; This function is called by:
  2446 ;;		_main
  2447 ;; This function uses a non-reentrant model
  2448 ;;
  2449                           
  2450                           	psect	text10
  2451  007664                     __ptext10:
  2452                           	opt stack 0
  2453  007664                     _countdown_timer:
  2454                           	opt stack 27
  2455                           
  2456                           ;newmain.c: 121: char sec_str[4];
  2457                           ;newmain.c: 123: Lcd_Clear();
  2458                           
  2459                           ;incstack = 0
  2460  007664  ECFA  F037         	call	_Lcd_Clear	;wreg free
  2461                           
  2462                           ;newmain.c: 124: Lcd_Set_Cursor(1, 1); Lcd_Write_String("Counting Down... ");
  2463  007668  0E01               	movlw	1
  2464  00766A  6E04               	movwf	Lcd_Set_Cursor@b,c
  2465  00766C  0E01               	movlw	1
  2466  00766E  ECCE  F038         	call	_Lcd_Set_Cursor
  2467  007672  0EE5               	movlw	low STR_6
  2468  007674  6E05               	movwf	Lcd_Write_String@a,c
  2469  007676  0E7E               	movlw	high STR_6
  2470  007678  6E06               	movwf	Lcd_Write_String@a+1,c
  2471  00767A  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2472                           
  2473                           ;newmain.c: 127: for (int i = seconds; i > 0; i--) {
  2474  00767E  C019  F021         	movff	countdown_timer@seconds,countdown_timer@i
  2475  007682  C01A  F022         	movff	countdown_timer@seconds+1,countdown_timer@i+1
  2476  007686                     l1946:
  2477  007686  BE22               	btfsc	countdown_timer@i+1,7,c
  2478  007688  D03F               	goto	l1968
  2479  00768A  5022               	movf	countdown_timer@i+1,w,c
  2480  00768C  E103               	bnz	l1950
  2481  00768E  0421               	decf	countdown_timer@i,w,c
  2482  007690  A0D8               	btfss	status,0,c
  2483  007692  D03A               	goto	l1968
  2484  007694                     l1950:
  2485                           
  2486                           ;newmain.c: 128: itoa(sec_str, i, 10);
  2487  007694  0E1D               	movlw	low countdown_timer@sec_str
  2488  007696  6E11               	movwf	itoa@buf,c
  2489  007698  0E00               	movlw	high countdown_timer@sec_str
  2490  00769A  6E12               	movwf	itoa@buf+1,c
  2491  00769C  C021  F013         	movff	countdown_timer@i,itoa@val
  2492  0076A0  C022  F014         	movff	countdown_timer@i+1,itoa@val+1
  2493  0076A4  0E00               	movlw	0
  2494  0076A6  6E16               	movwf	itoa@base+1,c
  2495  0076A8  0E0A               	movlw	10
  2496  0076AA  6E15               	movwf	itoa@base,c
  2497  0076AC  ECAD  F038         	call	_itoa	;wreg free
  2498                           
  2499                           ;newmain.c: 129: Lcd_Set_Cursor(2, 1); Lcd_Write_String("   ");
  2500  0076B0  0E01               	movlw	1
  2501  0076B2  6E04               	movwf	Lcd_Set_Cursor@b,c
  2502  0076B4  0E02               	movlw	2
  2503  0076B6  ECCE  F038         	call	_Lcd_Set_Cursor
  2504  0076BA  0E9A               	movlw	low (STR_3+10)
  2505  0076BC  6E05               	movwf	Lcd_Write_String@a,c
  2506  0076BE  0E7F               	movlw	high (STR_3+10)
  2507  0076C0  6E06               	movwf	Lcd_Write_String@a+1,c
  2508  0076C2  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2509                           
  2510                           ;newmain.c: 130: Lcd_Set_Cursor(2, 1); Lcd_Write_String(sec_str);
  2511  0076C6  0E01               	movlw	1
  2512  0076C8  6E04               	movwf	Lcd_Set_Cursor@b,c
  2513  0076CA  0E02               	movlw	2
  2514  0076CC  ECCE  F038         	call	_Lcd_Set_Cursor
  2515  0076D0  0E1D               	movlw	low countdown_timer@sec_str
  2516  0076D2  6E05               	movwf	Lcd_Write_String@a,c
  2517  0076D4  0E00               	movlw	high countdown_timer@sec_str
  2518  0076D6  6E06               	movwf	Lcd_Write_String@a+1,c
  2519  0076D8  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2520                           
  2521                           ;newmain.c: 131: Lcd_Write_String(" secs left...");
  2522  0076DC  0EAC               	movlw	low STR_8
  2523  0076DE  6E05               	movwf	Lcd_Write_String@a,c
  2524  0076E0  0E7F               	movlw	high STR_8
  2525  0076E2  6E06               	movwf	Lcd_Write_String@a+1,c
  2526  0076E4  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2527                           
  2528                           ;newmain.c: 132: _delay((unsigned long)((1000)*(20000000/4000.0)));
  2529  0076E8  0E1A               	movlw	26
  2530  0076EA  6E1C               	movwf	(??_countdown_timer+1)& (0+255),c
  2531  0076EC  0E5E               	movlw	94
  2532  0076EE  6E1B               	movwf	??_countdown_timer& (0+255),c
  2533  0076F0  0E6E               	movlw	110
  2534  0076F2                     u1387:
  2535  0076F2  2EE8               	decfsz	wreg,f,c
  2536  0076F4  D7FE               	bra	u1387
  2537  0076F6  2E1B               	decfsz	??_countdown_timer& (0+255),f,c
  2538  0076F8  D7FC               	bra	u1387
  2539  0076FA  2E1C               	decfsz	(??_countdown_timer+1)& (0+255),f,c
  2540  0076FC  D7FA               	bra	u1387
  2541  0076FE  D000               	nop2	
  2542  007700  0621               	decf	countdown_timer@i,f,c
  2543  007702  A0D8               	btfss	status,0,c
  2544  007704  0622               	decf	countdown_timer@i+1,f,c
  2545  007706  D7BF               	goto	l1946
  2546  007708                     l1968:
  2547                           
  2548                           ;newmain.c: 133: }
  2549                           ;newmain.c: 135: Lcd_Set_Cursor(1, 1); Lcd_Write_String("   Countdown    ");
  2550  007708  0E01               	movlw	1
  2551  00770A  6E04               	movwf	Lcd_Set_Cursor@b,c
  2552  00770C  0E01               	movlw	1
  2553  00770E  ECCE  F038         	call	_Lcd_Set_Cursor
  2554  007712  0E2A               	movlw	low STR_9
  2555  007714  6E05               	movwf	Lcd_Write_String@a,c
  2556  007716  0E7F               	movlw	high STR_9
  2557  007718  6E06               	movwf	Lcd_Write_String@a+1,c
  2558  00771A  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2559                           
  2560                           ;newmain.c: 136: Lcd_Set_Cursor(2, 1); Lcd_Write_String("   Finished!    ");
  2561  00771E  0E01               	movlw	1
  2562  007720  6E04               	movwf	Lcd_Set_Cursor@b,c
  2563  007722  0E02               	movlw	2
  2564  007724  ECCE  F038         	call	_Lcd_Set_Cursor
  2565  007728  0E08               	movlw	low STR_10
  2566  00772A  6E05               	movwf	Lcd_Write_String@a,c
  2567  00772C  0E7F               	movlw	high STR_10
  2568  00772E  6E06               	movwf	Lcd_Write_String@a+1,c
  2569  007730  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  2570                           
  2571                           ;newmain.c: 137: buzz_seconds(3);
  2572  007734  0E00               	movlw	0
  2573  007736  6E08               	movwf	buzz_seconds@seconds+1,c
  2574  007738  0E03               	movlw	3
  2575  00773A  6E07               	movwf	buzz_seconds@seconds,c
  2576  00773C  EC1F  F039         	call	_buzz_seconds	;wreg free
  2577  007740  0012               	return		;funcret
  2578  007742                     __end_of_countdown_timer:
  2579                           	opt stack 0
  2580                           tblptru	equ	0xFF8
  2581                           wreg	equ	0xFE8
  2582                           status	equ	0xFD8
  2583                           
  2584 ;; *************** function _itoa *****************
  2585 ;; Defined at:
  2586 ;;		line 4 in file "/opt/microchip/xc8/v1.42/sources/common/itoa.c"
  2587 ;; Parameters:    Size  Location     Type
  2588 ;;  buf             2   16[COMRAM] PTR unsigned char 
  2589 ;;		 -> countdown_timer@sec_str(4), read_and_print_distance@cent_str(4), read_and_print_distance@inch_str(4), 
  2590 ;;  val             2   18[COMRAM] int 
  2591 ;;  base            2   20[COMRAM] int 
  2592 ;; Auto vars:     Size  Location     Type
  2593 ;;  cp              2   22[COMRAM] PTR unsigned char 
  2594 ;;		 -> countdown_timer@sec_str(4), read_and_print_distance@cent_str(4), read_and_print_distance@inch_str(4), 
  2595 ;; Return value:  Size  Location     Type
  2596 ;;                  2   16[COMRAM] PTR unsigned char 
  2597 ;; Registers used:
  2598 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2599 ;; Tracked objects:
  2600 ;;		On entry : 0/0
  2601 ;;		On exit  : 0/0
  2602 ;;		Unchanged: 0/0
  2603 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2604 ;;      Params:         6       0       0       0       0       0       0       0       0
  2605 ;;      Locals:         2       0       0       0       0       0       0       0       0
  2606 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2607 ;;      Totals:         8       0       0       0       0       0       0       0       0
  2608 ;;Total ram usage:        8 bytes
  2609 ;; Hardware stack levels used:    1
  2610 ;; Hardware stack levels required when called:    2
  2611 ;; This function calls:
  2612 ;;		_utoa
  2613 ;; This function is called by:
  2614 ;;		_read_and_print_distance
  2615 ;;		_countdown_timer
  2616 ;; This function uses a non-reentrant model
  2617 ;;
  2618                           
  2619                           	psect	text11
  2620  00715A                     __ptext11:
  2621                           	opt stack 0
  2622  00715A                     _itoa:
  2623                           	opt stack 27
  2624                           
  2625                           ;incstack = 0
  2626  00715A  C011  F017         	movff	itoa@buf,itoa@cp
  2627  00715E  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  2628  007162  AE14               	btfss	itoa@val+1,7,c
  2629  007164  D00C               	goto	l1644
  2630  007166  C011  FFD9         	movff	itoa@buf,fsr2l
  2631  00716A  C012  FFDA         	movff	itoa@buf+1,fsr2h
  2632  00716E  0E2D               	movlw	45
  2633  007170  6EDF               	movwf	indf2,c
  2634  007172  4A11               	infsnz	itoa@buf,f,c
  2635  007174  2A12               	incf	itoa@buf+1,f,c
  2636  007176  6C13               	negf	itoa@val,c
  2637  007178  1E14               	comf	itoa@val+1,f,c
  2638  00717A  B0D8               	btfsc	status,0,c
  2639  00717C  2A14               	incf	itoa@val+1,f,c
  2640  00717E                     l1644:
  2641  00717E  C011  F008         	movff	itoa@buf,utoa@buf
  2642  007182  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  2643  007186  C013  F00A         	movff	itoa@val,utoa@val
  2644  00718A  C014  F00B         	movff	itoa@val+1,utoa@val+1
  2645  00718E  C015  F00C         	movff	itoa@base,utoa@base
  2646  007192  C016  F00D         	movff	itoa@base+1,utoa@base+1
  2647  007196  EC89  F03A         	call	_utoa	;wreg free
  2648  00719A  0012               	return	
  2649  00719C                     __end_of_itoa:
  2650                           	opt stack 0
  2651                           tblptru	equ	0xFF8
  2652                           wreg	equ	0xFE8
  2653                           indf2	equ	0xFDF
  2654                           fsr2h	equ	0xFDA
  2655                           fsr2l	equ	0xFD9
  2656                           status	equ	0xFD8
  2657                           
  2658 ;; *************** function _utoa *****************
  2659 ;; Defined at:
  2660 ;;		line 17 in file "/opt/microchip/xc8/v1.42/sources/common/itoa.c"
  2661 ;; Parameters:    Size  Location     Type
  2662 ;;  buf             2    7[COMRAM] PTR unsigned char 
  2663 ;;		 -> countdown_timer@sec_str(4), read_and_print_distance@cent_str(4), read_and_print_distance@inch_str(4), 
  2664 ;;  val             2    9[COMRAM] unsigned int 
  2665 ;;  base            2   11[COMRAM] int 
  2666 ;; Auto vars:     Size  Location     Type
  2667 ;;  v               2   13[COMRAM] unsigned int 
  2668 ;;  c               1   15[COMRAM] unsigned char 
  2669 ;; Return value:  Size  Location     Type
  2670 ;;                  2    7[COMRAM] PTR unsigned char 
  2671 ;; Registers used:
  2672 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  2673 ;; Tracked objects:
  2674 ;;		On entry : 0/0
  2675 ;;		On exit  : 0/0
  2676 ;;		Unchanged: 0/0
  2677 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2678 ;;      Params:         6       0       0       0       0       0       0       0       0
  2679 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2680 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2681 ;;      Totals:         9       0       0       0       0       0       0       0       0
  2682 ;;Total ram usage:        9 bytes
  2683 ;; Hardware stack levels used:    1
  2684 ;; Hardware stack levels required when called:    1
  2685 ;; This function calls:
  2686 ;;		___lwdiv
  2687 ;;		___lwmod
  2688 ;; This function is called by:
  2689 ;;		_itoa
  2690 ;; This function uses a non-reentrant model
  2691 ;;
  2692                           
  2693                           	psect	text12
  2694  007512                     __ptext12:
  2695                           	opt stack 0
  2696  007512                     _utoa:
  2697                           	opt stack 27
  2698                           
  2699                           ;incstack = 0
  2700  007512  C00A  F00E         	movff	utoa@val,utoa@v
  2701  007516  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  2702  00751A                     l1568:
  2703  00751A  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  2704  00751E  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  2705  007522  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  2706  007526  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  2707  00752A  ECF6  F038         	call	___lwdiv	;wreg free
  2708  00752E  C001  F00E         	movff	?___lwdiv,utoa@v
  2709  007532  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  2710  007536  4A08               	infsnz	utoa@buf,f,c
  2711  007538  2A09               	incf	utoa@buf+1,f,c
  2712  00753A  500E               	movf	utoa@v,w,c
  2713  00753C  100F               	iorwf	utoa@v+1,w,c
  2714  00753E  A4D8               	btfss	status,2,c
  2715  007540  D7EC               	goto	l1568
  2716  007542  C008  FFD9         	movff	utoa@buf,fsr2l
  2717  007546  C009  FFDA         	movff	utoa@buf+1,fsr2h
  2718  00754A  0E00               	movlw	0
  2719  00754C  6EDF               	movwf	indf2,c
  2720  00754E  0608               	decf	utoa@buf,f,c
  2721  007550  A0D8               	btfss	status,0,c
  2722  007552  0609               	decf	utoa@buf+1,f,c
  2723  007554                     l1578:
  2724  007554  C00A  F001         	movff	utoa@val,___lwmod@dividend
  2725  007558  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  2726  00755C  C00C  F003         	movff	utoa@base,___lwmod@divisor
  2727  007560  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  2728  007564  EC8C  F038         	call	___lwmod	;wreg free
  2729  007568  5001               	movf	?___lwmod,w,c
  2730  00756A  6E10               	movwf	utoa@c,c
  2731  00756C  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  2732  007570  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  2733  007574  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  2734  007578  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  2735  00757C  ECF6  F038         	call	___lwdiv	;wreg free
  2736  007580  C001  F00A         	movff	?___lwdiv,utoa@val
  2737  007584  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  2738  007588  0E09               	movlw	9
  2739  00758A  6410               	cpfsgt	utoa@c,c
  2740  00758C  D002               	goto	l506
  2741  00758E  0E07               	movlw	7
  2742  007590  2610               	addwf	utoa@c,f,c
  2743  007592                     l506:
  2744  007592  0E30               	movlw	48
  2745  007594  2610               	addwf	utoa@c,f,c
  2746  007596  C008  FFD9         	movff	utoa@buf,fsr2l
  2747  00759A  C009  FFDA         	movff	utoa@buf+1,fsr2h
  2748  00759E  C010  FFDF         	movff	utoa@c,indf2
  2749  0075A2  0608               	decf	utoa@buf,f,c
  2750  0075A4  A0D8               	btfss	status,0,c
  2751  0075A6  0609               	decf	utoa@buf+1,f,c
  2752  0075A8  500A               	movf	utoa@val,w,c
  2753  0075AA  100B               	iorwf	utoa@val+1,w,c
  2754  0075AC  A4D8               	btfss	status,2,c
  2755  0075AE  D7D2               	goto	l1578
  2756                           
  2757                           ;	Return value of _utoa is never used
  2758  0075B0  4A08               	infsnz	utoa@buf,f,c
  2759  0075B2  2A09               	incf	utoa@buf+1,f,c
  2760  0075B4  0012               	return	
  2761  0075B6                     __end_of_utoa:
  2762                           	opt stack 0
  2763                           tblptru	equ	0xFF8
  2764                           wreg	equ	0xFE8
  2765                           indf2	equ	0xFDF
  2766                           fsr2h	equ	0xFDA
  2767                           fsr2l	equ	0xFD9
  2768                           status	equ	0xFD8
  2769                           
  2770 ;; *************** function ___lwmod *****************
  2771 ;; Defined at:
  2772 ;;		line 8 in file "/opt/microchip/xc8/v1.42/sources/common/lwmod.c"
  2773 ;; Parameters:    Size  Location     Type
  2774 ;;  dividend        2    0[COMRAM] unsigned int 
  2775 ;;  divisor         2    2[COMRAM] unsigned int 
  2776 ;; Auto vars:     Size  Location     Type
  2777 ;;  counter         1    4[COMRAM] unsigned char 
  2778 ;; Return value:  Size  Location     Type
  2779 ;;                  2    0[COMRAM] unsigned int 
  2780 ;; Registers used:
  2781 ;;		wreg, status,2, status,0
  2782 ;; Tracked objects:
  2783 ;;		On entry : 0/0
  2784 ;;		On exit  : 0/0
  2785 ;;		Unchanged: 0/0
  2786 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2787 ;;      Params:         4       0       0       0       0       0       0       0       0
  2788 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2789 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2790 ;;      Totals:         5       0       0       0       0       0       0       0       0
  2791 ;;Total ram usage:        5 bytes
  2792 ;; Hardware stack levels used:    1
  2793 ;; This function calls:
  2794 ;;		Nothing
  2795 ;; This function is called by:
  2796 ;;		_utoa
  2797 ;; This function uses a non-reentrant model
  2798 ;;
  2799                           
  2800                           	psect	text13
  2801  007118                     __ptext13:
  2802                           	opt stack 0
  2803  007118                     ___lwmod:
  2804                           	opt stack 27
  2805                           
  2806                           ;incstack = 0
  2807  007118  5003               	movf	___lwmod@divisor,w,c
  2808  00711A  1004               	iorwf	___lwmod@divisor+1,w,c
  2809  00711C  B4D8               	btfsc	status,2,c
  2810  00711E  D018               	goto	l595
  2811  007120  0E01               	movlw	1
  2812  007122  6E05               	movwf	___lwmod@counter,c
  2813  007124  D004               	goto	l1514
  2814  007126                     l1512:
  2815  007126  90D8               	bcf	status,0,c
  2816  007128  3603               	rlcf	___lwmod@divisor,f,c
  2817  00712A  3604               	rlcf	___lwmod@divisor+1,f,c
  2818  00712C  2A05               	incf	___lwmod@counter,f,c
  2819  00712E                     l1514:
  2820  00712E  AE04               	btfss	___lwmod@divisor+1,7,c
  2821  007130  D7FA               	goto	l1512
  2822  007132                     l1516:
  2823  007132  5003               	movf	___lwmod@divisor,w,c
  2824  007134  5C01               	subwf	___lwmod@dividend,w,c
  2825  007136  5004               	movf	___lwmod@divisor+1,w,c
  2826  007138  5802               	subwfb	___lwmod@dividend+1,w,c
  2827  00713A  A0D8               	btfss	status,0,c
  2828  00713C  D004               	goto	l1520
  2829  00713E  5003               	movf	___lwmod@divisor,w,c
  2830  007140  5E01               	subwf	___lwmod@dividend,f,c
  2831  007142  5004               	movf	___lwmod@divisor+1,w,c
  2832  007144  5A02               	subwfb	___lwmod@dividend+1,f,c
  2833  007146                     l1520:
  2834  007146  90D8               	bcf	status,0,c
  2835  007148  3204               	rrcf	___lwmod@divisor+1,f,c
  2836  00714A  3203               	rrcf	___lwmod@divisor,f,c
  2837  00714C  2E05               	decfsz	___lwmod@counter,f,c
  2838  00714E  D7F1               	goto	l1516
  2839  007150                     l595:
  2840  007150  C001  F001         	movff	___lwmod@dividend,?___lwmod
  2841  007154  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  2842  007158  0012               	return		;funcret
  2843  00715A                     __end_of___lwmod:
  2844                           	opt stack 0
  2845                           tblptru	equ	0xFF8
  2846                           wreg	equ	0xFE8
  2847                           indf2	equ	0xFDF
  2848                           fsr2h	equ	0xFDA
  2849                           fsr2l	equ	0xFD9
  2850                           status	equ	0xFD8
  2851                           
  2852 ;; *************** function ___lwdiv *****************
  2853 ;; Defined at:
  2854 ;;		line 8 in file "/opt/microchip/xc8/v1.42/sources/common/lwdiv.c"
  2855 ;; Parameters:    Size  Location     Type
  2856 ;;  dividend        2    0[COMRAM] unsigned int 
  2857 ;;  divisor         2    2[COMRAM] unsigned int 
  2858 ;; Auto vars:     Size  Location     Type
  2859 ;;  quotient        2    4[COMRAM] unsigned int 
  2860 ;;  counter         1    6[COMRAM] unsigned char 
  2861 ;; Return value:  Size  Location     Type
  2862 ;;                  2    0[COMRAM] unsigned int 
  2863 ;; Registers used:
  2864 ;;		wreg, status,2, status,0
  2865 ;; Tracked objects:
  2866 ;;		On entry : 0/0
  2867 ;;		On exit  : 0/0
  2868 ;;		Unchanged: 0/0
  2869 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2870 ;;      Params:         4       0       0       0       0       0       0       0       0
  2871 ;;      Locals:         3       0       0       0       0       0       0       0       0
  2872 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2873 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2874 ;;Total ram usage:        7 bytes
  2875 ;; Hardware stack levels used:    1
  2876 ;; This function calls:
  2877 ;;		Nothing
  2878 ;; This function is called by:
  2879 ;;		_utoa
  2880 ;; This function uses a non-reentrant model
  2881 ;;
  2882                           
  2883                           	psect	text14
  2884  0071EC                     __ptext14:
  2885                           	opt stack 0
  2886  0071EC                     ___lwdiv:
  2887                           	opt stack 27
  2888                           
  2889                           ;incstack = 0
  2890  0071EC  0E00               	movlw	0
  2891  0071EE  6E06               	movwf	___lwdiv@quotient+1,c
  2892  0071F0  0E00               	movlw	0
  2893  0071F2  6E05               	movwf	___lwdiv@quotient,c
  2894  0071F4  5003               	movf	___lwdiv@divisor,w,c
  2895  0071F6  1004               	iorwf	___lwdiv@divisor+1,w,c
  2896  0071F8  B4D8               	btfsc	status,2,c
  2897  0071FA  D01C               	goto	l585
  2898  0071FC  0E01               	movlw	1
  2899  0071FE  6E07               	movwf	___lwdiv@counter,c
  2900  007200  D004               	goto	l1494
  2901  007202                     l1492:
  2902  007202  90D8               	bcf	status,0,c
  2903  007204  3603               	rlcf	___lwdiv@divisor,f,c
  2904  007206  3604               	rlcf	___lwdiv@divisor+1,f,c
  2905  007208  2A07               	incf	___lwdiv@counter,f,c
  2906  00720A                     l1494:
  2907  00720A  AE04               	btfss	___lwdiv@divisor+1,7,c
  2908  00720C  D7FA               	goto	l1492
  2909  00720E                     l1496:
  2910  00720E  90D8               	bcf	status,0,c
  2911  007210  3605               	rlcf	___lwdiv@quotient,f,c
  2912  007212  3606               	rlcf	___lwdiv@quotient+1,f,c
  2913  007214  5003               	movf	___lwdiv@divisor,w,c
  2914  007216  5C01               	subwf	___lwdiv@dividend,w,c
  2915  007218  5004               	movf	___lwdiv@divisor+1,w,c
  2916  00721A  5802               	subwfb	___lwdiv@dividend+1,w,c
  2917  00721C  A0D8               	btfss	status,0,c
  2918  00721E  D005               	goto	l1504
  2919  007220  5003               	movf	___lwdiv@divisor,w,c
  2920  007222  5E01               	subwf	___lwdiv@dividend,f,c
  2921  007224  5004               	movf	___lwdiv@divisor+1,w,c
  2922  007226  5A02               	subwfb	___lwdiv@dividend+1,f,c
  2923  007228  8005               	bsf	___lwdiv@quotient,0,c
  2924  00722A                     l1504:
  2925  00722A  90D8               	bcf	status,0,c
  2926  00722C  3204               	rrcf	___lwdiv@divisor+1,f,c
  2927  00722E  3203               	rrcf	___lwdiv@divisor,f,c
  2928  007230  2E07               	decfsz	___lwdiv@counter,f,c
  2929  007232  D7ED               	goto	l1496
  2930  007234                     l585:
  2931  007234  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  2932  007238  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  2933  00723C  0012               	return		;funcret
  2934  00723E                     __end_of___lwdiv:
  2935                           	opt stack 0
  2936                           tblptru	equ	0xFF8
  2937                           wreg	equ	0xFE8
  2938                           indf2	equ	0xFDF
  2939                           fsr2h	equ	0xFDA
  2940                           fsr2l	equ	0xFD9
  2941                           status	equ	0xFD8
  2942                           
  2943 ;; *************** function _buzz_seconds *****************
  2944 ;; Defined at:
  2945 ;;		line 52 in file "newmain.c"
  2946 ;; Parameters:    Size  Location     Type
  2947 ;;  seconds         2    6[COMRAM] int 
  2948 ;; Auto vars:     Size  Location     Type
  2949 ;;  i               2   11[COMRAM] int 
  2950 ;;  time            2    9[COMRAM] int 
  2951 ;; Return value:  Size  Location     Type
  2952 ;;                  1    wreg      void 
  2953 ;; Registers used:
  2954 ;;		wreg, status,2, status,0, prodl, prodh, cstack
  2955 ;; Tracked objects:
  2956 ;;		On entry : 0/0
  2957 ;;		On exit  : 0/0
  2958 ;;		Unchanged: 0/0
  2959 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2960 ;;      Params:         2       0       0       0       0       0       0       0       0
  2961 ;;      Locals:         4       0       0       0       0       0       0       0       0
  2962 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2963 ;;      Totals:         7       0       0       0       0       0       0       0       0
  2964 ;;Total ram usage:        7 bytes
  2965 ;; Hardware stack levels used:    1
  2966 ;; Hardware stack levels required when called:    1
  2967 ;; This function calls:
  2968 ;;		___wmul
  2969 ;; This function is called by:
  2970 ;;		_countdown_timer
  2971 ;;		_motion_sensor
  2972 ;; This function uses a non-reentrant model
  2973 ;;
  2974                           
  2975                           	psect	text15
  2976  00723E                     __ptext15:
  2977                           	opt stack 0
  2978  00723E                     _buzz_seconds:
  2979                           	opt stack 28
  2980                           
  2981                           ;newmain.c: 53: int time = seconds * 500;
  2982                           
  2983                           ;incstack = 0
  2984  00723E  C007  F001         	movff	buzz_seconds@seconds,___wmul@multiplier
  2985  007242  C008  F002         	movff	buzz_seconds@seconds+1,___wmul@multiplier+1
  2986  007246  0E01               	movlw	1
  2987  007248  6E04               	movwf	___wmul@multiplicand+1,c
  2988  00724A  0EF4               	movlw	244
  2989  00724C  6E03               	movwf	___wmul@multiplicand,c
  2990  00724E  EC1B  F038         	call	___wmul	;wreg free
  2991  007252  C001  F00A         	movff	?___wmul,buzz_seconds@time
  2992  007256  C002  F00B         	movff	?___wmul+1,buzz_seconds@time+1
  2993                           
  2994                           ;newmain.c: 54: for (int i = 0; i < time; i++) {
  2995  00725A  0E00               	movlw	0
  2996  00725C  6E0D               	movwf	buzz_seconds@i+1,c
  2997  00725E  0E00               	movlw	0
  2998  007260  6E0C               	movwf	buzz_seconds@i,c
  2999  007262  D014               	goto	l99
  3000  007264                     l100:
  3001                           
  3002                           ;newmain.c: 55: PORTAbits.RA0 = 1; _delay((unsigned long)((1)*(20000000/4000.0)));
  3003  007264  8080               	bsf	3968,0,c	;volatile
  3004  007266  0E07               	movlw	7
  3005  007268  6E09               	movwf	??_buzz_seconds& (0+255),c
  3006  00726A  0E7D               	movlw	125
  3007  00726C                     u1397:
  3008  00726C  2EE8               	decfsz	wreg,f,c
  3009  00726E  D7FE               	bra	u1397
  3010  007270  2E09               	decfsz	??_buzz_seconds& (0+255),f,c
  3011  007272  D7FC               	bra	u1397
  3012  007274  F000               	nop	
  3013                           
  3014                           ;newmain.c: 56: PORTAbits.RA0 = 0; _delay((unsigned long)((1)*(20000000/4000.0))); }
  3015  007276  9080               	bcf	3968,0,c	;volatile
  3016  007278  0E07               	movlw	7
  3017  00727A  6E09               	movwf	??_buzz_seconds& (0+255),c
  3018  00727C  0E7D               	movlw	125
  3019  00727E                     u1407:
  3020  00727E  2EE8               	decfsz	wreg,f,c
  3021  007280  D7FE               	bra	u1407
  3022  007282  2E09               	decfsz	??_buzz_seconds& (0+255),f,c
  3023  007284  D7FC               	bra	u1407
  3024  007286  F000               	nop	
  3025  007288  4A0C               	infsnz	buzz_seconds@i,f,c
  3026  00728A  2A0D               	incf	buzz_seconds@i+1,f,c
  3027  00728C                     l99:
  3028  00728C  500A               	movf	buzz_seconds@time,w,c
  3029  00728E  5C0C               	subwf	buzz_seconds@i,w,c
  3030  007290  500D               	movf	buzz_seconds@i+1,w,c
  3031  007292  0A80               	xorlw	128
  3032  007294  6E09               	movwf	??_buzz_seconds& (0+255),c
  3033  007296  500B               	movf	buzz_seconds@time+1,w,c
  3034  007298  0A80               	xorlw	128
  3035  00729A  5809               	subwfb	??_buzz_seconds& (0+255),w,c
  3036  00729C  B0D8               	btfsc	status,0,c
  3037  00729E  0012               	return	
  3038  0072A0  D7E1               	goto	l100
  3039  0072A2                     __end_of_buzz_seconds:
  3040                           	opt stack 0
  3041                           tblptru	equ	0xFF8
  3042                           wreg	equ	0xFE8
  3043                           indf2	equ	0xFDF
  3044                           fsr2h	equ	0xFDA
  3045                           fsr2l	equ	0xFD9
  3046                           status	equ	0xFD8
  3047                           
  3048 ;; *************** function ___wmul *****************
  3049 ;; Defined at:
  3050 ;;		line 15 in file "/opt/microchip/xc8/v1.42/sources/common/Umul16.c"
  3051 ;; Parameters:    Size  Location     Type
  3052 ;;  multiplier      2    0[COMRAM] unsigned int 
  3053 ;;  multiplicand    2    2[COMRAM] unsigned int 
  3054 ;; Auto vars:     Size  Location     Type
  3055 ;;  product         2    4[COMRAM] unsigned int 
  3056 ;; Return value:  Size  Location     Type
  3057 ;;                  2    0[COMRAM] unsigned int 
  3058 ;; Registers used:
  3059 ;;		wreg, status,2, status,0, prodl, prodh
  3060 ;; Tracked objects:
  3061 ;;		On entry : 0/0
  3062 ;;		On exit  : 0/0
  3063 ;;		Unchanged: 0/0
  3064 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3065 ;;      Params:         4       0       0       0       0       0       0       0       0
  3066 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3067 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3068 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3069 ;;Total ram usage:        6 bytes
  3070 ;; Hardware stack levels used:    1
  3071 ;; This function calls:
  3072 ;;		Nothing
  3073 ;; This function is called by:
  3074 ;;		_buzz_seconds
  3075 ;; This function uses a non-reentrant model
  3076 ;;
  3077                           
  3078                           	psect	text16
  3079  007036                     __ptext16:
  3080                           	opt stack 0
  3081  007036                     ___wmul:
  3082                           	opt stack 28
  3083                           
  3084                           ;incstack = 0
  3085  007036  5001               	movf	___wmul@multiplier,w,c
  3086  007038  0203               	mulwf	___wmul@multiplicand,c
  3087  00703A  CFF3 F005          	movff	prodl,___wmul@product
  3088  00703E  CFF4 F006          	movff	prodh,___wmul@product+1
  3089  007042  5001               	movf	___wmul@multiplier,w,c
  3090  007044  0204               	mulwf	___wmul@multiplicand+1,c
  3091  007046  50F3               	movf	prodl,w,c
  3092  007048  2606               	addwf	___wmul@product+1,f,c
  3093  00704A  5002               	movf	___wmul@multiplier+1,w,c
  3094  00704C  0203               	mulwf	___wmul@multiplicand,c
  3095  00704E  50F3               	movf	prodl,w,c
  3096  007050  2606               	addwf	___wmul@product+1,f,c
  3097  007052  C005  F001         	movff	___wmul@product,?___wmul
  3098  007056  C006  F002         	movff	___wmul@product+1,?___wmul+1
  3099  00705A  0012               	return	
  3100  00705C                     __end_of___wmul:
  3101                           	opt stack 0
  3102                           tblptru	equ	0xFF8
  3103                           prodh	equ	0xFF4
  3104                           prodl	equ	0xFF3
  3105                           wreg	equ	0xFE8
  3106                           indf2	equ	0xFDF
  3107                           fsr2h	equ	0xFDA
  3108                           fsr2l	equ	0xFD9
  3109                           status	equ	0xFD8
  3110                           
  3111 ;; *************** function _Set_LED *****************
  3112 ;; Defined at:
  3113 ;;		line 63 in file "newmain.c"
  3114 ;; Parameters:    Size  Location     Type
  3115 ;;  red             2   10[COMRAM] int 
  3116 ;;  green           2   12[COMRAM] int 
  3117 ;;  blue            2   14[COMRAM] int 
  3118 ;;  count           2   16[COMRAM] int 
  3119 ;;  color_name      2   18[COMRAM] PTR unsigned char 
  3120 ;;		 -> STR_22(6), STR_21(5), STR_20(7), STR_19(5), 
  3121 ;;		 -> STR_18(6), STR_17(4), 
  3122 ;; Auto vars:     Size  Location     Type
  3123 ;;  i               2   21[COMRAM] int 
  3124 ;; Return value:  Size  Location     Type
  3125 ;;                  1    wreg      void 
  3126 ;; Registers used:
  3127 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3128 ;; Tracked objects:
  3129 ;;		On entry : 0/0
  3130 ;;		On exit  : 0/0
  3131 ;;		Unchanged: 0/0
  3132 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3133 ;;      Params:        10       0       0       0       0       0       0       0       0
  3134 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3135 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3136 ;;      Totals:        13       0       0       0       0       0       0       0       0
  3137 ;;Total ram usage:       13 bytes
  3138 ;; Hardware stack levels used:    1
  3139 ;; Hardware stack levels required when called:    3
  3140 ;; This function calls:
  3141 ;;		_Lcd_Clear
  3142 ;;		_Lcd_Set_Cursor
  3143 ;;		_Lcd_Write_String
  3144 ;;		___awdiv
  3145 ;;		_var_delay_us
  3146 ;; This function is called by:
  3147 ;;		_main
  3148 ;; This function uses a non-reentrant model
  3149 ;;
  3150                           
  3151                           	psect	text17
  3152  007742                     __ptext17:
  3153                           	opt stack 0
  3154  007742                     _Set_LED:
  3155                           	opt stack 27
  3156                           
  3157                           ;newmain.c: 65: red /= 8; green /= 8; blue /= 8;
  3158                           
  3159                           ;incstack = 0
  3160  007742  C00B  F001         	movff	Set_LED@red,___awdiv@dividend
  3161  007746  C00C  F002         	movff	Set_LED@red+1,___awdiv@dividend+1
  3162  00774A  0E00               	movlw	0
  3163  00774C  6E04               	movwf	___awdiv@divisor+1,c
  3164  00774E  0E08               	movlw	8
  3165  007750  6E03               	movwf	___awdiv@divisor,c
  3166  007752  ECFF  F039         	call	___awdiv	;wreg free
  3167  007756  C001  F00B         	movff	?___awdiv,Set_LED@red
  3168  00775A  C002  F00C         	movff	?___awdiv+1,Set_LED@red+1
  3169  00775E  C00D  F001         	movff	Set_LED@green,___awdiv@dividend
  3170  007762  C00E  F002         	movff	Set_LED@green+1,___awdiv@dividend+1
  3171  007766  0E00               	movlw	0
  3172  007768  6E04               	movwf	___awdiv@divisor+1,c
  3173  00776A  0E08               	movlw	8
  3174  00776C  6E03               	movwf	___awdiv@divisor,c
  3175  00776E  ECFF  F039         	call	___awdiv	;wreg free
  3176  007772  C001  F00D         	movff	?___awdiv,Set_LED@green
  3177  007776  C002  F00E         	movff	?___awdiv+1,Set_LED@green+1
  3178  00777A  C00F  F001         	movff	Set_LED@blue,___awdiv@dividend
  3179  00777E  C010  F002         	movff	Set_LED@blue+1,___awdiv@dividend+1
  3180  007782  0E00               	movlw	0
  3181  007784  6E04               	movwf	___awdiv@divisor+1,c
  3182  007786  0E08               	movlw	8
  3183  007788  6E03               	movwf	___awdiv@divisor,c
  3184  00778A  ECFF  F039         	call	___awdiv	;wreg free
  3185  00778E  C001  F00F         	movff	?___awdiv,Set_LED@blue
  3186  007792  C002  F010         	movff	?___awdiv+1,Set_LED@blue+1
  3187                           
  3188                           ;newmain.c: 67: Lcd_Clear();
  3189  007796  ECFA  F037         	call	_Lcd_Clear	;wreg free
  3190                           
  3191                           ;newmain.c: 68: Lcd_Set_Cursor(1, 1);
  3192  00779A  0E01               	movlw	1
  3193  00779C  6E04               	movwf	Lcd_Set_Cursor@b,c
  3194  00779E  0E01               	movlw	1
  3195  0077A0  ECCE  F038         	call	_Lcd_Set_Cursor
  3196                           
  3197                           ;newmain.c: 69: Lcd_Write_String("Led is: ");
  3198  0077A4  0ED4               	movlw	low STR_1
  3199  0077A6  6E05               	movwf	Lcd_Write_String@a,c
  3200  0077A8  0E7F               	movlw	high STR_1
  3201  0077AA  6E06               	movwf	Lcd_Write_String@a+1,c
  3202  0077AC  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  3203                           
  3204                           ;newmain.c: 70: Lcd_Write_String(color_name);
  3205  0077B0  C013  F005         	movff	Set_LED@color_name,Lcd_Write_String@a
  3206  0077B4  C014  F006         	movff	Set_LED@color_name+1,Lcd_Write_String@a+1
  3207  0077B8  EC8A  F039         	call	_Lcd_Write_String	;wreg free
  3208                           
  3209                           ;newmain.c: 72: for (int i = 0; i < count; i++) {
  3210  0077BC  0E00               	movlw	0
  3211  0077BE  6E17               	movwf	Set_LED@i+1,c
  3212  0077C0  0E00               	movlw	0
  3213  0077C2  6E16               	movwf	Set_LED@i,c
  3214  0077C4  D026               	goto	l1886
  3215  0077C6                     l1860:
  3216                           
  3217                           ;newmain.c: 73: if (red){ PORTEbits.RE0 = 1; var_delay_us(red); PORTEbits.RE0 = 0;}
  3218  0077C6  500B               	movf	Set_LED@red,w,c
  3219  0077C8  100C               	iorwf	Set_LED@red+1,w,c
  3220  0077CA  B4D8               	btfsc	status,2,c
  3221  0077CC  D008               	goto	l1868
  3222  0077CE  8084               	bsf	3972,0,c	;volatile
  3223  0077D0  C00B  F001         	movff	Set_LED@red,var_delay_us@us
  3224  0077D4  C00C  F002         	movff	Set_LED@red+1,var_delay_us@us+1
  3225  0077D8  EC2E  F038         	call	_var_delay_us	;wreg free
  3226  0077DC  9084               	bcf	3972,0,c	;volatile
  3227  0077DE                     l1868:
  3228                           
  3229                           ;newmain.c: 74: if (green){ PORTEbits.RE1 = 1; var_delay_us(green); PORTEbits.RE1 = 0;}
  3230  0077DE  500D               	movf	Set_LED@green,w,c
  3231  0077E0  100E               	iorwf	Set_LED@green+1,w,c
  3232  0077E2  B4D8               	btfsc	status,2,c
  3233  0077E4  D008               	goto	l1876
  3234  0077E6  8284               	bsf	3972,1,c	;volatile
  3235  0077E8  C00D  F001         	movff	Set_LED@green,var_delay_us@us
  3236  0077EC  C00E  F002         	movff	Set_LED@green+1,var_delay_us@us+1
  3237  0077F0  EC2E  F038         	call	_var_delay_us	;wreg free
  3238  0077F4  9284               	bcf	3972,1,c	;volatile
  3239  0077F6                     l1876:
  3240                           
  3241                           ;newmain.c: 75: if (blue){ PORTEbits.RE2 = 1; var_delay_us(blue); PORTEbits.RE2 = 0;}
  3242  0077F6  500F               	movf	Set_LED@blue,w,c
  3243  0077F8  1010               	iorwf	Set_LED@blue+1,w,c
  3244  0077FA  B4D8               	btfsc	status,2,c
  3245  0077FC  D008               	goto	l1884
  3246  0077FE  8484               	bsf	3972,2,c	;volatile
  3247  007800  C00F  F001         	movff	Set_LED@blue,var_delay_us@us
  3248  007804  C010  F002         	movff	Set_LED@blue+1,var_delay_us@us+1
  3249  007808  EC2E  F038         	call	_var_delay_us	;wreg free
  3250  00780C  9484               	bcf	3972,2,c	;volatile
  3251  00780E                     l1884:
  3252  00780E  4A16               	infsnz	Set_LED@i,f,c
  3253  007810  2A17               	incf	Set_LED@i+1,f,c
  3254  007812                     l1886:
  3255  007812  5011               	movf	Set_LED@count,w,c
  3256  007814  5C16               	subwf	Set_LED@i,w,c
  3257  007816  5017               	movf	Set_LED@i+1,w,c
  3258  007818  0A80               	xorlw	128
  3259  00781A  6E15               	movwf	??_Set_LED& (0+255),c
  3260  00781C  5012               	movf	Set_LED@count+1,w,c
  3261  00781E  0A80               	xorlw	128
  3262  007820  5815               	subwfb	??_Set_LED& (0+255),w,c
  3263  007822  B0D8               	btfsc	status,0,c
  3264  007824  0012               	return	
  3265  007826  D7CF               	goto	l1860
  3266  007828                     __end_of_Set_LED:
  3267                           	opt stack 0
  3268                           tblptru	equ	0xFF8
  3269                           prodh	equ	0xFF4
  3270                           prodl	equ	0xFF3
  3271                           wreg	equ	0xFE8
  3272                           indf2	equ	0xFDF
  3273                           fsr2h	equ	0xFDA
  3274                           fsr2l	equ	0xFD9
  3275                           status	equ	0xFD8
  3276                           
  3277 ;; *************** function _var_delay_us *****************
  3278 ;; Defined at:
  3279 ;;		line 59 in file "newmain.c"
  3280 ;; Parameters:    Size  Location     Type
  3281 ;;  us              2    0[COMRAM] int 
  3282 ;; Auto vars:     Size  Location     Type
  3283 ;;  i               2    3[COMRAM] int 
  3284 ;; Return value:  Size  Location     Type
  3285 ;;                  1    wreg      void 
  3286 ;; Registers used:
  3287 ;;		wreg, status,2, status,0
  3288 ;; Tracked objects:
  3289 ;;		On entry : 0/0
  3290 ;;		On exit  : 0/0
  3291 ;;		Unchanged: 0/0
  3292 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3293 ;;      Params:         2       0       0       0       0       0       0       0       0
  3294 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3295 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3296 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3297 ;;Total ram usage:        5 bytes
  3298 ;; Hardware stack levels used:    1
  3299 ;; This function calls:
  3300 ;;		Nothing
  3301 ;; This function is called by:
  3302 ;;		_Set_LED
  3303 ;; This function uses a non-reentrant model
  3304 ;;
  3305                           
  3306                           	psect	text18
  3307  00705C                     __ptext18:
  3308                           	opt stack 0
  3309  00705C                     _var_delay_us:
  3310                           	opt stack 29
  3311                           
  3312                           ;newmain.c: 60: for (int i = 0; i < us; i++) { _delay((unsigned long)((1)*(20000000/4000
      +                          000.0))); }
  3313                           
  3314                           ;incstack = 0
  3315  00705C  0E00               	movlw	0
  3316  00705E  6E05               	movwf	var_delay_us@i+1,c
  3317  007060  0E00               	movlw	0
  3318  007062  6E04               	movwf	var_delay_us@i,c
  3319  007064  D005               	goto	l1634
  3320  007066                     l106:
  3321  007066  D000               	nop2		;2 cycle nop
  3322  007068  D000               	nop2		;2 cycle nop
  3323  00706A  F000               	nop	
  3324  00706C  4A04               	infsnz	var_delay_us@i,f,c
  3325  00706E  2A05               	incf	var_delay_us@i+1,f,c
  3326  007070                     l1634:
  3327  007070  5001               	movf	var_delay_us@us,w,c
  3328  007072  5C04               	subwf	var_delay_us@i,w,c
  3329  007074  5005               	movf	var_delay_us@i+1,w,c
  3330  007076  0A80               	xorlw	128
  3331  007078  6E03               	movwf	??_var_delay_us& (0+255),c
  3332  00707A  5002               	movf	var_delay_us@us+1,w,c
  3333  00707C  0A80               	xorlw	128
  3334  00707E  5803               	subwfb	??_var_delay_us& (0+255),w,c
  3335  007080  B0D8               	btfsc	status,0,c
  3336  007082  0012               	return	
  3337  007084  D7F0               	goto	l106
  3338  007086                     __end_of_var_delay_us:
  3339                           	opt stack 0
  3340                           tblptru	equ	0xFF8
  3341                           prodh	equ	0xFF4
  3342                           prodl	equ	0xFF3
  3343                           wreg	equ	0xFE8
  3344                           indf2	equ	0xFDF
  3345                           fsr2h	equ	0xFDA
  3346                           fsr2l	equ	0xFD9
  3347                           status	equ	0xFD8
  3348                           
  3349 ;; *************** function ___awdiv *****************
  3350 ;; Defined at:
  3351 ;;		line 8 in file "/opt/microchip/xc8/v1.42/sources/common/awdiv.c"
  3352 ;; Parameters:    Size  Location     Type
  3353 ;;  dividend        2    0[COMRAM] int 
  3354 ;;  divisor         2    2[COMRAM] int 
  3355 ;; Auto vars:     Size  Location     Type
  3356 ;;  quotient        2    6[COMRAM] int 
  3357 ;;  sign            1    5[COMRAM] unsigned char 
  3358 ;;  counter         1    4[COMRAM] unsigned char 
  3359 ;; Return value:  Size  Location     Type
  3360 ;;                  2    0[COMRAM] int 
  3361 ;; Registers used:
  3362 ;;		wreg, status,2, status,0
  3363 ;; Tracked objects:
  3364 ;;		On entry : 0/0
  3365 ;;		On exit  : 0/0
  3366 ;;		Unchanged: 0/0
  3367 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3368 ;;      Params:         4       0       0       0       0       0       0       0       0
  3369 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3370 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3371 ;;      Totals:         8       0       0       0       0       0       0       0       0
  3372 ;;Total ram usage:        8 bytes
  3373 ;; Hardware stack levels used:    1
  3374 ;; This function calls:
  3375 ;;		Nothing
  3376 ;; This function is called by:
  3377 ;;		_Set_LED
  3378 ;; This function uses a non-reentrant model
  3379 ;;
  3380                           
  3381                           	psect	text19
  3382  0073FE                     __ptext19:
  3383                           	opt stack 0
  3384  0073FE                     ___awdiv:
  3385                           	opt stack 29
  3386                           
  3387                           ;incstack = 0
  3388  0073FE  0E00               	movlw	0
  3389  007400  6E06               	movwf	___awdiv@sign,c
  3390  007402  AE04               	btfss	___awdiv@divisor+1,7,c
  3391  007404  D006               	goto	l1766
  3392  007406  6C03               	negf	___awdiv@divisor,c
  3393  007408  1E04               	comf	___awdiv@divisor+1,f,c
  3394  00740A  B0D8               	btfsc	status,0,c
  3395  00740C  2A04               	incf	___awdiv@divisor+1,f,c
  3396  00740E  0E01               	movlw	1
  3397  007410  6E06               	movwf	___awdiv@sign,c
  3398  007412                     l1766:
  3399  007412  AE02               	btfss	___awdiv@dividend+1,7,c
  3400  007414  D006               	goto	l1772
  3401  007416  6C01               	negf	___awdiv@dividend,c
  3402  007418  1E02               	comf	___awdiv@dividend+1,f,c
  3403  00741A  B0D8               	btfsc	status,0,c
  3404  00741C  2A02               	incf	___awdiv@dividend+1,f,c
  3405  00741E  0E01               	movlw	1
  3406  007420  1A06               	xorwf	___awdiv@sign,f,c
  3407  007422                     l1772:
  3408  007422  0E00               	movlw	0
  3409  007424  6E08               	movwf	___awdiv@quotient+1,c
  3410  007426  0E00               	movlw	0
  3411  007428  6E07               	movwf	___awdiv@quotient,c
  3412  00742A  5003               	movf	___awdiv@divisor,w,c
  3413  00742C  1004               	iorwf	___awdiv@divisor+1,w,c
  3414  00742E  B4D8               	btfsc	status,2,c
  3415  007430  D01C               	goto	l1794
  3416  007432  0E01               	movlw	1
  3417  007434  6E05               	movwf	___awdiv@counter,c
  3418  007436  D004               	goto	l1780
  3419  007438                     l1778:
  3420  007438  90D8               	bcf	status,0,c
  3421  00743A  3603               	rlcf	___awdiv@divisor,f,c
  3422  00743C  3604               	rlcf	___awdiv@divisor+1,f,c
  3423  00743E  2A05               	incf	___awdiv@counter,f,c
  3424  007440                     l1780:
  3425  007440  AE04               	btfss	___awdiv@divisor+1,7,c
  3426  007442  D7FA               	goto	l1778
  3427  007444                     l1782:
  3428  007444  90D8               	bcf	status,0,c
  3429  007446  3607               	rlcf	___awdiv@quotient,f,c
  3430  007448  3608               	rlcf	___awdiv@quotient+1,f,c
  3431  00744A  5003               	movf	___awdiv@divisor,w,c
  3432  00744C  5C01               	subwf	___awdiv@dividend,w,c
  3433  00744E  5004               	movf	___awdiv@divisor+1,w,c
  3434  007450  5802               	subwfb	___awdiv@dividend+1,w,c
  3435  007452  A0D8               	btfss	status,0,c
  3436  007454  D005               	goto	l1790
  3437  007456  5003               	movf	___awdiv@divisor,w,c
  3438  007458  5E01               	subwf	___awdiv@dividend,f,c
  3439  00745A  5004               	movf	___awdiv@divisor+1,w,c
  3440  00745C  5A02               	subwfb	___awdiv@dividend+1,f,c
  3441  00745E  8007               	bsf	___awdiv@quotient,0,c
  3442  007460                     l1790:
  3443  007460  90D8               	bcf	status,0,c
  3444  007462  3204               	rrcf	___awdiv@divisor+1,f,c
  3445  007464  3203               	rrcf	___awdiv@divisor,f,c
  3446  007466  2E05               	decfsz	___awdiv@counter,f,c
  3447  007468  D7ED               	goto	l1782
  3448  00746A                     l1794:
  3449  00746A  5006               	movf	___awdiv@sign,w,c
  3450  00746C  B4D8               	btfsc	status,2,c
  3451  00746E  D004               	goto	l1798
  3452  007470  6C07               	negf	___awdiv@quotient,c
  3453  007472  1E08               	comf	___awdiv@quotient+1,f,c
  3454  007474  B0D8               	btfsc	status,0,c
  3455  007476  2A08               	incf	___awdiv@quotient+1,f,c
  3456  007478                     l1798:
  3457  007478  C007  F001         	movff	___awdiv@quotient,?___awdiv
  3458  00747C  C008  F002         	movff	___awdiv@quotient+1,?___awdiv+1
  3459  007480  0012               	return	
  3460  007482                     __end_of___awdiv:
  3461                           	opt stack 0
  3462                           tblptru	equ	0xFF8
  3463                           prodh	equ	0xFF4
  3464                           prodl	equ	0xFF3
  3465                           wreg	equ	0xFE8
  3466                           indf2	equ	0xFDF
  3467                           fsr2h	equ	0xFDA
  3468                           fsr2l	equ	0xFD9
  3469                           status	equ	0xFD8
  3470                           
  3471 ;; *************** function _Lcd_Write_String *****************
  3472 ;; Defined at:
  3473 ;;		line 96 in file "lcd.h"
  3474 ;; Parameters:    Size  Location     Type
  3475 ;;  a               2    4[COMRAM] PTR unsigned char 
  3476 ;;		 -> STR_23(13), STR_22(6), STR_21(5), STR_20(7), 
  3477 ;;		 -> STR_19(5), STR_18(6), STR_17(4), STR_16(17), 
  3478 ;;		 -> STR_15(17), STR_14(17), STR_13(17), STR_12(17), 
  3479 ;;		 -> STR_11(13), STR_10(17), STR_9(17), STR_8(14), 
  3480 ;;		 -> STR_7(4), countdown_timer@sec_str(4), STR_6(18), STR_5(17), 
  3481 ;;		 -> STR_4(17), STR_3(14), STR_2(14), read_and_print_distance@cent_str(4), 
  3482 ;;		 -> read_and_print_distance@inch_str(4), STR_1(9), 
  3483 ;; Auto vars:     Size  Location     Type
  3484 ;;  i               2    8[COMRAM] int 
  3485 ;; Return value:  Size  Location     Type
  3486 ;;                  1    wreg      void 
  3487 ;; Registers used:
  3488 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  3489 ;; Tracked objects:
  3490 ;;		On entry : 0/0
  3491 ;;		On exit  : 0/0
  3492 ;;		Unchanged: 0/0
  3493 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3494 ;;      Params:         2       0       0       0       0       0       0       0       0
  3495 ;;      Locals:         2       0       0       0       0       0       0       0       0
  3496 ;;      Temps:          2       0       0       0       0       0       0       0       0
  3497 ;;      Totals:         6       0       0       0       0       0       0       0       0
  3498 ;;Total ram usage:        6 bytes
  3499 ;; Hardware stack levels used:    1
  3500 ;; Hardware stack levels required when called:    2
  3501 ;; This function calls:
  3502 ;;		_Lcd_Write_Char
  3503 ;; This function is called by:
  3504 ;;		_Set_LED
  3505 ;;		_read_and_print_distance
  3506 ;;		_standby_message
  3507 ;;		_countdown_timer
  3508 ;;		_motion_sensor
  3509 ;;		_main
  3510 ;; This function uses a non-reentrant model
  3511 ;;
  3512                           
  3513                           	psect	text20
  3514  007314                     __ptext20:
  3515                           	opt stack 0
  3516  007314                     _Lcd_Write_String:
  3517                           	opt stack 27
  3518                           
  3519                           ;lcd.h: 98: int i;
  3520                           ;lcd.h: 99: for(i=0;a[i]!='\0';i++)
  3521                           
  3522                           ;incstack = 0
  3523  007314  0E00               	movlw	0
  3524  007316  6E0A               	movwf	Lcd_Write_String@i+1,c
  3525  007318  0E00               	movlw	0
  3526  00731A  6E09               	movwf	Lcd_Write_String@i,c
  3527  00731C  D01A               	goto	l1618
  3528  00731E                     l1614:
  3529                           
  3530                           ;lcd.h: 100: Lcd_Write_Char(a[i]);
  3531  00731E  5009               	movf	Lcd_Write_String@i,w,c
  3532  007320  2405               	addwf	Lcd_Write_String@a,w,c
  3533  007322  6E07               	movwf	??_Lcd_Write_String& (0+255),c
  3534  007324  500A               	movf	Lcd_Write_String@i+1,w,c
  3535  007326  2006               	addwfc	Lcd_Write_String@a+1,w,c
  3536  007328  6E08               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  3537  00732A  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3538  00732E  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  3539  007332  6AF8               	clrf	tblptru,c
  3540  007334  0E07               	movlw	(high __ramtop+-1)
  3541  007336  64F7               	cpfsgt	tblptrh,c
  3542  007338  D003               	bra	u897
  3543  00733A  0008               	tblrd		*
  3544  00733C  50F5               	movf	tablat,w,c
  3545  00733E  D005               	bra	u890
  3546  007340                     u897:
  3547  007340  CFF6 FFD9          	movff	tblptrl,fsr2l
  3548  007344  CFF7 FFDA          	movff	tblptrh,fsr2h
  3549  007348  50DF               	movf	indf2,w,c
  3550  00734A                     u890:
  3551  00734A  EC70  F038         	call	_Lcd_Write_Char
  3552  00734E  4A09               	infsnz	Lcd_Write_String@i,f,c
  3553  007350  2A0A               	incf	Lcd_Write_String@i+1,f,c
  3554  007352                     l1618:
  3555  007352  5009               	movf	Lcd_Write_String@i,w,c
  3556  007354  2405               	addwf	Lcd_Write_String@a,w,c
  3557  007356  6E07               	movwf	??_Lcd_Write_String& (0+255),c
  3558  007358  500A               	movf	Lcd_Write_String@i+1,w,c
  3559  00735A  2006               	addwfc	Lcd_Write_String@a+1,w,c
  3560  00735C  6E08               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  3561  00735E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  3562  007362  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  3563  007366  6AF8               	clrf	tblptru,c
  3564  007368  0E07               	movlw	(high __ramtop+-1)
  3565  00736A  64F7               	cpfsgt	tblptrh,c
  3566  00736C  D003               	bra	u907
  3567  00736E  0008               	tblrd		*
  3568  007370  50F5               	movf	tablat,w,c
  3569  007372  D005               	bra	u900
  3570  007374                     u907:
  3571  007374  CFF6 FFD9          	movff	tblptrl,fsr2l
  3572  007378  CFF7 FFDA          	movff	tblptrh,fsr2h
  3573  00737C  50DF               	movf	indf2,w,c
  3574  00737E                     u900:
  3575  00737E  0900               	iorlw	0
  3576  007380  B4D8               	btfsc	status,2,c
  3577  007382  0012               	return	
  3578  007384  D7CC               	goto	l1614
  3579  007386                     __end_of_Lcd_Write_String:
  3580                           	opt stack 0
  3581                           tblptru	equ	0xFF8
  3582                           tblptrh	equ	0xFF7
  3583                           tblptrl	equ	0xFF6
  3584                           tablat	equ	0xFF5
  3585                           prodh	equ	0xFF4
  3586                           prodl	equ	0xFF3
  3587                           wreg	equ	0xFE8
  3588                           indf2	equ	0xFDF
  3589                           fsr2h	equ	0xFDA
  3590                           fsr2l	equ	0xFD9
  3591                           status	equ	0xFD8
  3592                           
  3593 ;; *************** function _Lcd_Write_Char *****************
  3594 ;; Defined at:
  3595 ;;		line 80 in file "lcd.h"
  3596 ;; Parameters:    Size  Location     Type
  3597 ;;  a               1    wreg     unsigned char 
  3598 ;; Auto vars:     Size  Location     Type
  3599 ;;  a               1    3[COMRAM] unsigned char 
  3600 ;;  y               1    2[COMRAM] unsigned char 
  3601 ;;  temp            1    1[COMRAM] unsigned char 
  3602 ;; Return value:  Size  Location     Type
  3603 ;;                  2   76[None  ] int 
  3604 ;; Registers used:
  3605 ;;		wreg, status,2, status,0, cstack
  3606 ;; Tracked objects:
  3607 ;;		On entry : 0/0
  3608 ;;		On exit  : 0/0
  3609 ;;		Unchanged: 0/0
  3610 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3611 ;;      Params:         0       0       0       0       0       0       0       0       0
  3612 ;;      Locals:         3       0       0       0       0       0       0       0       0
  3613 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3614 ;;      Totals:         3       0       0       0       0       0       0       0       0
  3615 ;;Total ram usage:        3 bytes
  3616 ;; Hardware stack levels used:    1
  3617 ;; Hardware stack levels required when called:    1
  3618 ;; This function calls:
  3619 ;;		_Lcd_Port
  3620 ;; This function is called by:
  3621 ;;		_Lcd_Write_String
  3622 ;;		_main
  3623 ;; This function uses a non-reentrant model
  3624 ;;
  3625                           
  3626                           	psect	text21
  3627  0070E0                     __ptext21:
  3628                           	opt stack 0
  3629  0070E0                     _Lcd_Write_Char:
  3630                           	opt stack 27
  3631                           
  3632                           ;incstack = 0
  3633                           ;Lcd_Write_Char@a stored from wreg
  3634  0070E0  6E04               	movwf	Lcd_Write_Char@a,c
  3635                           
  3636                           ;lcd.h: 82: char temp,y;
  3637                           ;lcd.h: 83: temp = a&0x0F;
  3638  0070E2  5004               	movf	Lcd_Write_Char@a,w,c
  3639  0070E4  0B0F               	andlw	15
  3640  0070E6  6E02               	movwf	Lcd_Write_Char@temp,c
  3641                           
  3642                           ;lcd.h: 84: y = a&0xF0;
  3643  0070E8  5004               	movf	Lcd_Write_Char@a,w,c
  3644  0070EA  0BF0               	andlw	240
  3645  0070EC  6E03               	movwf	Lcd_Write_Char@y,c
  3646                           
  3647                           ;lcd.h: 85: PORTDbits.RD2 = 1;
  3648  0070EE  8483               	bsf	3971,2,c	;volatile
  3649                           
  3650                           ;lcd.h: 86: Lcd_Port(y>>4);
  3651  0070F0  3803               	swapf	Lcd_Write_Char@y,w,c
  3652  0070F2  0B0F               	andlw	15
  3653  0070F4  EC43  F038         	call	_Lcd_Port
  3654                           
  3655                           ;lcd.h: 87: PORTDbits.RD3 = 1;
  3656  0070F8  8683               	bsf	3971,3,c	;volatile
  3657                           
  3658                           ;lcd.h: 88: _delay((unsigned long)((40)*(20000000/4000000.0)));
  3659  0070FA  0E42               	movlw	66
  3660  0070FC                     u1417:
  3661  0070FC  2EE8               	decfsz	wreg,f,c
  3662  0070FE  D7FE               	bra	u1417
  3663  007100  D000               	nop2	
  3664                           
  3665                           ;lcd.h: 89: PORTDbits.RD3 = 0;
  3666  007102  9683               	bcf	3971,3,c	;volatile
  3667                           
  3668                           ;lcd.h: 90: Lcd_Port(temp);
  3669  007104  5002               	movf	Lcd_Write_Char@temp,w,c
  3670  007106  EC43  F038         	call	_Lcd_Port
  3671                           
  3672                           ;lcd.h: 91: PORTDbits.RD3 = 1;
  3673  00710A  8683               	bsf	3971,3,c	;volatile
  3674                           
  3675                           ;lcd.h: 92: _delay((unsigned long)((40)*(20000000/4000000.0)));
  3676  00710C  0E42               	movlw	66
  3677  00710E                     u1427:
  3678  00710E  2EE8               	decfsz	wreg,f,c
  3679  007110  D7FE               	bra	u1427
  3680  007112  D000               	nop2	
  3681                           
  3682                           ;lcd.h: 93: PORTDbits.RD3 = 0;
  3683  007114  9683               	bcf	3971,3,c	;volatile
  3684  007116  0012               	return		;funcret
  3685  007118                     __end_of_Lcd_Write_Char:
  3686                           	opt stack 0
  3687                           tblptru	equ	0xFF8
  3688                           tblptrh	equ	0xFF7
  3689                           tblptrl	equ	0xFF6
  3690                           tablat	equ	0xFF5
  3691                           prodh	equ	0xFF4
  3692                           prodl	equ	0xFF3
  3693                           wreg	equ	0xFE8
  3694                           indf2	equ	0xFDF
  3695                           fsr2h	equ	0xFDA
  3696                           fsr2l	equ	0xFD9
  3697                           status	equ	0xFD8
  3698                           
  3699 ;; *************** function _Lcd_Set_Cursor *****************
  3700 ;; Defined at:
  3701 ;;		line 40 in file "lcd.h"
  3702 ;; Parameters:    Size  Location     Type
  3703 ;;  a               1    wreg     unsigned char 
  3704 ;;  b               1    3[COMRAM] unsigned char 
  3705 ;; Auto vars:     Size  Location     Type
  3706 ;;  a               1    4[COMRAM] unsigned char 
  3707 ;;  temp            1    7[COMRAM] unsigned char 
  3708 ;;  y               1    6[COMRAM] unsigned char 
  3709 ;;  z               1    5[COMRAM] unsigned char 
  3710 ;; Return value:  Size  Location     Type
  3711 ;;                  1    wreg      void 
  3712 ;; Registers used:
  3713 ;;		wreg, status,2, status,0, cstack
  3714 ;; Tracked objects:
  3715 ;;		On entry : 0/0
  3716 ;;		On exit  : 0/0
  3717 ;;		Unchanged: 0/0
  3718 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3719 ;;      Params:         1       0       0       0       0       0       0       0       0
  3720 ;;      Locals:         4       0       0       0       0       0       0       0       0
  3721 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3722 ;;      Totals:         5       0       0       0       0       0       0       0       0
  3723 ;;Total ram usage:        5 bytes
  3724 ;; Hardware stack levels used:    1
  3725 ;; Hardware stack levels required when called:    2
  3726 ;; This function calls:
  3727 ;;		_Lcd_Cmd
  3728 ;; This function is called by:
  3729 ;;		_Set_LED
  3730 ;;		_read_and_print_distance
  3731 ;;		_standby_message
  3732 ;;		_countdown_timer
  3733 ;;		_motion_sensor
  3734 ;;		_main
  3735 ;; This function uses a non-reentrant model
  3736 ;;
  3737                           
  3738                           	psect	text22
  3739  00719C                     __ptext22:
  3740                           	opt stack 0
  3741  00719C                     _Lcd_Set_Cursor:
  3742                           	opt stack 27
  3743                           
  3744                           ;incstack = 0
  3745                           ;Lcd_Set_Cursor@a stored from wreg
  3746  00719C  6E05               	movwf	Lcd_Set_Cursor@a,c
  3747                           
  3748                           ;lcd.h: 42: char temp,z,y;
  3749                           ;lcd.h: 43: if(a == 1)
  3750  00719E  0405               	decf	Lcd_Set_Cursor@a,w,c
  3751  0071A0  A4D8               	btfss	status,2,c
  3752  0071A2  D010               	goto	l1604
  3753                           
  3754                           ;lcd.h: 44: {
  3755                           ;lcd.h: 45: temp = 0x80 + b - 1;
  3756  0071A4  5004               	movf	Lcd_Set_Cursor@b,w,c
  3757  0071A6  0F7F               	addlw	127
  3758  0071A8  6E08               	movwf	Lcd_Set_Cursor@temp,c
  3759                           
  3760                           ;lcd.h: 46: z = temp>>4;
  3761  0071AA  3808               	swapf	Lcd_Set_Cursor@temp,w,c
  3762  0071AC  0B0F               	andlw	15
  3763  0071AE  6E06               	movwf	Lcd_Set_Cursor@z,c
  3764                           
  3765                           ;lcd.h: 47: y = temp & 0x0F;
  3766  0071B0  5008               	movf	Lcd_Set_Cursor@temp,w,c
  3767  0071B2  0B0F               	andlw	15
  3768  0071B4  6E07               	movwf	Lcd_Set_Cursor@y,c
  3769                           
  3770                           ;lcd.h: 48: Lcd_Cmd(z);
  3771  0071B6  5006               	movf	Lcd_Set_Cursor@z,w,c
  3772  0071B8  EC0B  F038         	call	_Lcd_Cmd
  3773                           
  3774                           ;lcd.h: 49: Lcd_Cmd(y);
  3775  0071BC  5007               	movf	Lcd_Set_Cursor@y,w,c
  3776  0071BE  EC0B  F038         	call	_Lcd_Cmd
  3777                           
  3778                           ;lcd.h: 50: }
  3779  0071C2  0012               	return	
  3780  0071C4                     l1604:
  3781                           
  3782                           ;lcd.h: 51: else if(a == 2)
  3783  0071C4  0E02               	movlw	2
  3784  0071C6  1805               	xorwf	Lcd_Set_Cursor@a,w,c
  3785  0071C8  A4D8               	btfss	status,2,c
  3786  0071CA  0012               	return	
  3787                           
  3788                           ;lcd.h: 52: {
  3789                           ;lcd.h: 53: temp = 0xC0 + b - 1;
  3790  0071CC  5004               	movf	Lcd_Set_Cursor@b,w,c
  3791  0071CE  0FBF               	addlw	191
  3792  0071D0  6E08               	movwf	Lcd_Set_Cursor@temp,c
  3793                           
  3794                           ;lcd.h: 54: z = temp>>4;
  3795  0071D2  3808               	swapf	Lcd_Set_Cursor@temp,w,c
  3796  0071D4  0B0F               	andlw	15
  3797  0071D6  6E06               	movwf	Lcd_Set_Cursor@z,c
  3798                           
  3799                           ;lcd.h: 55: y = temp & 0x0F;
  3800  0071D8  5008               	movf	Lcd_Set_Cursor@temp,w,c
  3801  0071DA  0B0F               	andlw	15
  3802  0071DC  6E07               	movwf	Lcd_Set_Cursor@y,c
  3803                           
  3804                           ;lcd.h: 56: Lcd_Cmd(z);
  3805  0071DE  5006               	movf	Lcd_Set_Cursor@z,w,c
  3806  0071E0  EC0B  F038         	call	_Lcd_Cmd
  3807                           
  3808                           ;lcd.h: 57: Lcd_Cmd(y);
  3809  0071E4  5007               	movf	Lcd_Set_Cursor@y,w,c
  3810  0071E6  EC0B  F038         	call	_Lcd_Cmd
  3811  0071EA  0012               	return	
  3812  0071EC                     __end_of_Lcd_Set_Cursor:
  3813                           	opt stack 0
  3814                           tblptru	equ	0xFF8
  3815                           tblptrh	equ	0xFF7
  3816                           tblptrl	equ	0xFF6
  3817                           tablat	equ	0xFF5
  3818                           prodh	equ	0xFF4
  3819                           prodl	equ	0xFF3
  3820                           wreg	equ	0xFE8
  3821                           indf2	equ	0xFDF
  3822                           fsr2h	equ	0xFDA
  3823                           fsr2l	equ	0xFD9
  3824                           status	equ	0xFD8
  3825                           
  3826 ;; *************** function _Lcd_Clear *****************
  3827 ;; Defined at:
  3828 ;;		line 34 in file "lcd.h"
  3829 ;; Parameters:    Size  Location     Type
  3830 ;;		None
  3831 ;; Auto vars:     Size  Location     Type
  3832 ;;		None
  3833 ;; Return value:  Size  Location     Type
  3834 ;;                  1    wreg      void 
  3835 ;; Registers used:
  3836 ;;		wreg, status,2, cstack
  3837 ;; Tracked objects:
  3838 ;;		On entry : 0/0
  3839 ;;		On exit  : 0/0
  3840 ;;		Unchanged: 0/0
  3841 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3842 ;;      Params:         0       0       0       0       0       0       0       0       0
  3843 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3844 ;;      Temps:          0       0       0       0       0       0       0       0       0
  3845 ;;      Totals:         0       0       0       0       0       0       0       0       0
  3846 ;;Total ram usage:        0 bytes
  3847 ;; Hardware stack levels used:    1
  3848 ;; Hardware stack levels required when called:    2
  3849 ;; This function calls:
  3850 ;;		_Lcd_Cmd
  3851 ;; This function is called by:
  3852 ;;		_Set_LED
  3853 ;;		_read_and_print_distance
  3854 ;;		_countdown_timer
  3855 ;;		_motion_sensor
  3856 ;;		_main
  3857 ;; This function uses a non-reentrant model
  3858 ;;
  3859                           
  3860                           	psect	text23
  3861  006FF4                     __ptext23:
  3862                           	opt stack 0
  3863  006FF4                     _Lcd_Clear:
  3864                           	opt stack 27
  3865                           
  3866                           ;lcd.h: 36: Lcd_Cmd(0);
  3867                           
  3868                           ;incstack = 0
  3869  006FF4  0E00               	movlw	0
  3870  006FF6  EC0B  F038         	call	_Lcd_Cmd
  3871                           
  3872                           ;lcd.h: 37: Lcd_Cmd(1);
  3873  006FFA  0E01               	movlw	1
  3874  006FFC  EC0B  F038         	call	_Lcd_Cmd
  3875  007000  0012               	return		;funcret
  3876  007002                     __end_of_Lcd_Clear:
  3877                           	opt stack 0
  3878                           tblptru	equ	0xFF8
  3879                           tblptrh	equ	0xFF7
  3880                           tblptrl	equ	0xFF6
  3881                           tablat	equ	0xFF5
  3882                           prodh	equ	0xFF4
  3883                           prodl	equ	0xFF3
  3884                           wreg	equ	0xFE8
  3885                           indf2	equ	0xFDF
  3886                           fsr2h	equ	0xFDA
  3887                           fsr2l	equ	0xFD9
  3888                           status	equ	0xFD8
  3889                           
  3890 ;; *************** function _Lcd_Init *****************
  3891 ;; Defined at:
  3892 ;;		line 61 in file "lcd.h"
  3893 ;; Parameters:    Size  Location     Type
  3894 ;;		None
  3895 ;; Auto vars:     Size  Location     Type
  3896 ;;		None
  3897 ;; Return value:  Size  Location     Type
  3898 ;;                  1    wreg      void 
  3899 ;; Registers used:
  3900 ;;		wreg, status,2, cstack
  3901 ;; Tracked objects:
  3902 ;;		On entry : 0/0
  3903 ;;		On exit  : 0/0
  3904 ;;		Unchanged: 0/0
  3905 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  3906 ;;      Params:         0       0       0       0       0       0       0       0       0
  3907 ;;      Locals:         0       0       0       0       0       0       0       0       0
  3908 ;;      Temps:          1       0       0       0       0       0       0       0       0
  3909 ;;      Totals:         1       0       0       0       0       0       0       0       0
  3910 ;;Total ram usage:        1 bytes
  3911 ;; Hardware stack levels used:    1
  3912 ;; Hardware stack levels required when called:    2
  3913 ;; This function calls:
  3914 ;;		_Lcd_Cmd
  3915 ;;		_Lcd_Port
  3916 ;; This function is called by:
  3917 ;;		_main
  3918 ;; This function uses a non-reentrant model
  3919 ;;
  3920                           
  3921                           	psect	text24
  3922  0072A2                     __ptext24:
  3923                           	opt stack 0
  3924  0072A2                     _Lcd_Init:
  3925                           	opt stack 28
  3926                           
  3927                           ;lcd.h: 63: Lcd_Port(0x00);
  3928                           
  3929                           ;incstack = 0
  3930  0072A2  0E00               	movlw	0
  3931  0072A4  EC43  F038         	call	_Lcd_Port
  3932                           
  3933                           ;lcd.h: 64: _delay((unsigned long)((20)*(20000000/4000.0)));
  3934  0072A8  0E82               	movlw	130
  3935  0072AA  6E04               	movwf	??_Lcd_Init& (0+255),c
  3936  0072AC  0EDE               	movlw	222
  3937  0072AE                     u1437:
  3938  0072AE  2EE8               	decfsz	wreg,f,c
  3939  0072B0  D7FE               	bra	u1437
  3940  0072B2  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  3941  0072B4  D7FC               	bra	u1437
  3942                           
  3943                           ;lcd.h: 65: Lcd_Cmd(0x03);
  3944  0072B6  0E03               	movlw	3
  3945  0072B8  EC0B  F038         	call	_Lcd_Cmd
  3946                           
  3947                           ;lcd.h: 66: _delay((unsigned long)((5)*(20000000/4000.0)));
  3948  0072BC  0E21               	movlw	33
  3949  0072BE  6E04               	movwf	??_Lcd_Init& (0+255),c
  3950  0072C0  0E76               	movlw	118
  3951  0072C2                     u1447:
  3952  0072C2  2EE8               	decfsz	wreg,f,c
  3953  0072C4  D7FE               	bra	u1447
  3954  0072C6  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  3955  0072C8  D7FC               	bra	u1447
  3956  0072CA  D000               	nop2	
  3957                           
  3958                           ;lcd.h: 67: Lcd_Cmd(0x03);
  3959  0072CC  0E03               	movlw	3
  3960  0072CE  EC0B  F038         	call	_Lcd_Cmd
  3961                           
  3962                           ;lcd.h: 68: _delay((unsigned long)((11)*(20000000/4000.0)));
  3963  0072D2  0E48               	movlw	72
  3964  0072D4  6E04               	movwf	??_Lcd_Init& (0+255),c
  3965  0072D6  0E6C               	movlw	108
  3966  0072D8                     u1457:
  3967  0072D8  2EE8               	decfsz	wreg,f,c
  3968  0072DA  D7FE               	bra	u1457
  3969  0072DC  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  3970  0072DE  D7FC               	bra	u1457
  3971  0072E0  D000               	nop2	
  3972                           
  3973                           ;lcd.h: 69: Lcd_Cmd(0x03);
  3974  0072E2  0E03               	movlw	3
  3975  0072E4  EC0B  F038         	call	_Lcd_Cmd
  3976                           
  3977                           ;lcd.h: 71: Lcd_Cmd(0x02);
  3978  0072E8  0E02               	movlw	2
  3979  0072EA  EC0B  F038         	call	_Lcd_Cmd
  3980                           
  3981                           ;lcd.h: 72: Lcd_Cmd(0x02);
  3982  0072EE  0E02               	movlw	2
  3983  0072F0  EC0B  F038         	call	_Lcd_Cmd
  3984                           
  3985                           ;lcd.h: 73: Lcd_Cmd(0x08);
  3986  0072F4  0E08               	movlw	8
  3987  0072F6  EC0B  F038         	call	_Lcd_Cmd
  3988                           
  3989                           ;lcd.h: 74: Lcd_Cmd(0x00);
  3990  0072FA  0E00               	movlw	0
  3991  0072FC  EC0B  F038         	call	_Lcd_Cmd
  3992                           
  3993                           ;lcd.h: 75: Lcd_Cmd(0x0C);
  3994  007300  0E0C               	movlw	12
  3995  007302  EC0B  F038         	call	_Lcd_Cmd
  3996                           
  3997                           ;lcd.h: 76: Lcd_Cmd(0x00);
  3998  007306  0E00               	movlw	0
  3999  007308  EC0B  F038         	call	_Lcd_Cmd
  4000                           
  4001                           ;lcd.h: 77: Lcd_Cmd(0x06);
  4002  00730C  0E06               	movlw	6
  4003  00730E  EC0B  F038         	call	_Lcd_Cmd
  4004  007312  0012               	return		;funcret
  4005  007314                     __end_of_Lcd_Init:
  4006                           	opt stack 0
  4007                           tblptru	equ	0xFF8
  4008                           tblptrh	equ	0xFF7
  4009                           tblptrl	equ	0xFF6
  4010                           tablat	equ	0xFF5
  4011                           prodh	equ	0xFF4
  4012                           prodl	equ	0xFF3
  4013                           wreg	equ	0xFE8
  4014                           indf2	equ	0xFDF
  4015                           fsr2h	equ	0xFDA
  4016                           fsr2l	equ	0xFD9
  4017                           status	equ	0xFD8
  4018                           
  4019 ;; *************** function _Lcd_Cmd *****************
  4020 ;; Defined at:
  4021 ;;		line 25 in file "lcd.h"
  4022 ;; Parameters:    Size  Location     Type
  4023 ;;  a               1    wreg     unsigned char 
  4024 ;; Auto vars:     Size  Location     Type
  4025 ;;  a               1    2[COMRAM] unsigned char 
  4026 ;; Return value:  Size  Location     Type
  4027 ;;                  1    wreg      void 
  4028 ;; Registers used:
  4029 ;;		wreg, status,2, cstack
  4030 ;; Tracked objects:
  4031 ;;		On entry : 0/0
  4032 ;;		On exit  : 0/0
  4033 ;;		Unchanged: 0/0
  4034 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4035 ;;      Params:         0       0       0       0       0       0       0       0       0
  4036 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4037 ;;      Temps:          1       0       0       0       0       0       0       0       0
  4038 ;;      Totals:         2       0       0       0       0       0       0       0       0
  4039 ;;Total ram usage:        2 bytes
  4040 ;; Hardware stack levels used:    1
  4041 ;; Hardware stack levels required when called:    1
  4042 ;; This function calls:
  4043 ;;		_Lcd_Port
  4044 ;; This function is called by:
  4045 ;;		_Lcd_Clear
  4046 ;;		_Lcd_Set_Cursor
  4047 ;;		_Lcd_Init
  4048 ;;		_Lcd_Shift_Right
  4049 ;;		_Lcd_Shift_Left
  4050 ;; This function uses a non-reentrant model
  4051 ;;
  4052                           
  4053                           	psect	text25
  4054  007016                     __ptext25:
  4055                           	opt stack 0
  4056  007016                     _Lcd_Cmd:
  4057                           	opt stack 27
  4058                           
  4059                           ;incstack = 0
  4060                           ;Lcd_Cmd@a stored from wreg
  4061  007016  6E03               	movwf	Lcd_Cmd@a,c
  4062                           
  4063                           ;lcd.h: 27: PORTDbits.RD2 = 0;
  4064  007018  9483               	bcf	3971,2,c	;volatile
  4065                           
  4066                           ;lcd.h: 28: Lcd_Port(a);
  4067  00701A  5003               	movf	Lcd_Cmd@a,w,c
  4068  00701C  EC43  F038         	call	_Lcd_Port
  4069                           
  4070                           ;lcd.h: 29: PORTDbits.RD3 = 1;
  4071  007020  8683               	bsf	3971,3,c	;volatile
  4072                           
  4073                           ;lcd.h: 30: _delay((unsigned long)((4)*(20000000/4000.0)));
  4074  007022  0E1A               	movlw	26
  4075  007024  6E02               	movwf	??_Lcd_Cmd& (0+255),c
  4076  007026  0EF8               	movlw	248
  4077  007028                     u1467:
  4078  007028  2EE8               	decfsz	wreg,f,c
  4079  00702A  D7FE               	bra	u1467
  4080  00702C  2E02               	decfsz	??_Lcd_Cmd& (0+255),f,c
  4081  00702E  D7FC               	bra	u1467
  4082  007030  D000               	nop2	
  4083                           
  4084                           ;lcd.h: 31: PORTDbits.RD3 = 0;
  4085  007032  9683               	bcf	3971,3,c	;volatile
  4086  007034  0012               	return		;funcret
  4087  007036                     __end_of_Lcd_Cmd:
  4088                           	opt stack 0
  4089                           tblptru	equ	0xFF8
  4090                           tblptrh	equ	0xFF7
  4091                           tblptrl	equ	0xFF6
  4092                           tablat	equ	0xFF5
  4093                           prodh	equ	0xFF4
  4094                           prodl	equ	0xFF3
  4095                           wreg	equ	0xFE8
  4096                           indf2	equ	0xFDF
  4097                           fsr2h	equ	0xFDA
  4098                           fsr2l	equ	0xFD9
  4099                           status	equ	0xFD8
  4100                           
  4101 ;; *************** function _Lcd_Port *****************
  4102 ;; Defined at:
  4103 ;;		line 3 in file "lcd.h"
  4104 ;; Parameters:    Size  Location     Type
  4105 ;;  a               1    wreg     unsigned char 
  4106 ;; Auto vars:     Size  Location     Type
  4107 ;;  a               1    0[COMRAM] unsigned char 
  4108 ;; Return value:  Size  Location     Type
  4109 ;;                  1    wreg      void 
  4110 ;; Registers used:
  4111 ;;		wreg
  4112 ;; Tracked objects:
  4113 ;;		On entry : 0/0
  4114 ;;		On exit  : 0/0
  4115 ;;		Unchanged: 0/0
  4116 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  4117 ;;      Params:         0       0       0       0       0       0       0       0       0
  4118 ;;      Locals:         1       0       0       0       0       0       0       0       0
  4119 ;;      Temps:          0       0       0       0       0       0       0       0       0
  4120 ;;      Totals:         1       0       0       0       0       0       0       0       0
  4121 ;;Total ram usage:        1 bytes
  4122 ;; Hardware stack levels used:    1
  4123 ;; This function calls:
  4124 ;;		Nothing
  4125 ;; This function is called by:
  4126 ;;		_Lcd_Cmd
  4127 ;;		_Lcd_Init
  4128 ;;		_Lcd_Write_Char
  4129 ;; This function uses a non-reentrant model
  4130 ;;
  4131                           
  4132                           	psect	text26
  4133  007086                     __ptext26:
  4134                           	opt stack 0
  4135  007086                     _Lcd_Port:
  4136                           	opt stack 27
  4137                           
  4138                           ;incstack = 0
  4139                           ;Lcd_Port@a stored from wreg
  4140  007086  6E01               	movwf	Lcd_Port@a,c
  4141                           
  4142                           ;lcd.h: 5: if(a & 1)
  4143  007088  A001               	btfss	Lcd_Port@a,0,c
  4144  00708A  D002               	goto	l51
  4145                           
  4146                           ;lcd.h: 6: PORTDbits.RD4 = 1;
  4147  00708C  8883               	bsf	3971,4,c	;volatile
  4148  00708E  D001               	goto	l808
  4149  007090                     l51:
  4150                           
  4151                           ;lcd.h: 7: else
  4152                           ;lcd.h: 8: PORTDbits.RD4 = 0;
  4153  007090  9883               	bcf	3971,4,c	;volatile
  4154  007092                     l808:
  4155                           
  4156                           ;lcd.h: 10: if(a & 2)
  4157  007092  A201               	btfss	Lcd_Port@a,1,c
  4158  007094  D002               	goto	l53
  4159                           
  4160                           ;lcd.h: 11: PORTDbits.RD5 = 1;
  4161  007096  8A83               	bsf	3971,5,c	;volatile
  4162  007098  D001               	goto	l812
  4163  00709A                     l53:
  4164                           
  4165                           ;lcd.h: 12: else
  4166                           ;lcd.h: 13: PORTDbits.RD5 = 0;
  4167  00709A  9A83               	bcf	3971,5,c	;volatile
  4168  00709C                     l812:
  4169                           
  4170                           ;lcd.h: 15: if(a & 4)
  4171  00709C  A401               	btfss	Lcd_Port@a,2,c
  4172  00709E  D002               	goto	l55
  4173                           
  4174                           ;lcd.h: 16: PORTDbits.RD6 = 1;
  4175  0070A0  8C83               	bsf	3971,6,c	;volatile
  4176  0070A2  D001               	goto	l816
  4177  0070A4                     l55:
  4178                           
  4179                           ;lcd.h: 17: else
  4180                           ;lcd.h: 18: PORTDbits.RD6 = 0;
  4181  0070A4  9C83               	bcf	3971,6,c	;volatile
  4182  0070A6                     l816:
  4183                           
  4184                           ;lcd.h: 20: if(a & 8)
  4185  0070A6  A601               	btfss	Lcd_Port@a,3,c
  4186  0070A8  D002               	goto	l57
  4187                           
  4188                           ;lcd.h: 21: PORTDbits.RD7 = 1;
  4189  0070AA  8E83               	bsf	3971,7,c	;volatile
  4190  0070AC  0012               	return	
  4191  0070AE                     l57:
  4192                           
  4193                           ;lcd.h: 22: else
  4194                           ;lcd.h: 23: PORTDbits.RD7 = 0;
  4195  0070AE  9E83               	bcf	3971,7,c	;volatile
  4196  0070B0  0012               	return	
  4197  0070B2                     __end_of_Lcd_Port:
  4198                           	opt stack 0
  4199                           tblptru	equ	0xFF8
  4200                           tblptrh	equ	0xFF7
  4201                           tblptrl	equ	0xFF6
  4202                           tablat	equ	0xFF5
  4203                           prodh	equ	0xFF4
  4204                           prodl	equ	0xFF3
  4205                           wreg	equ	0xFE8
  4206                           indf2	equ	0xFDF
  4207                           fsr2h	equ	0xFDA
  4208                           fsr2l	equ	0xFD9
  4209                           status	equ	0xFD8
  4210                           tblptru	equ	0xFF8
  4211                           tblptrh	equ	0xFF7
  4212                           tblptrl	equ	0xFF6
  4213                           tablat	equ	0xFF5
  4214                           prodh	equ	0xFF4
  4215                           prodl	equ	0xFF3
  4216                           wreg	equ	0xFE8
  4217                           indf2	equ	0xFDF
  4218                           fsr2h	equ	0xFDA
  4219                           fsr2l	equ	0xFD9
  4220                           status	equ	0xFD8
  4221                           
  4222                           	psect	rparam
  4223  0000                     tblptru	equ	0xFF8
  4224                           tblptrh	equ	0xFF7
  4225                           tblptrl	equ	0xFF6
  4226                           tablat	equ	0xFF5
  4227                           prodh	equ	0xFF4
  4228                           prodl	equ	0xFF3
  4229                           wreg	equ	0xFE8
  4230                           indf2	equ	0xFDF
  4231                           fsr2h	equ	0xFDA
  4232                           fsr2l	equ	0xFD9
  4233                           status	equ	0xFD8


Data Sizes:
    Strings     281
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     64      64
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           256      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    utoa@buf	PTR unsigned char  size(2) Largest target is 4
		 -> countdown_timer@sec_str(COMRAM[4]), read_and_print_distance@cent_str(COMRAM[4]), read_and_print_distance@inch_str(COMRAM[4]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 4
		 -> countdown_timer@sec_str(COMRAM[4]), read_and_print_distance@cent_str(COMRAM[4]), read_and_print_distance@inch_str(COMRAM[4]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 4
		 -> countdown_timer@sec_str(COMRAM[4]), read_and_print_distance@cent_str(COMRAM[4]), read_and_print_distance@inch_str(COMRAM[4]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 4
		 -> countdown_timer@sec_str(COMRAM[4]), read_and_print_distance@cent_str(COMRAM[4]), read_and_print_distance@inch_str(COMRAM[4]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 4
		 -> countdown_timer@sec_str(COMRAM[4]), read_and_print_distance@cent_str(COMRAM[4]), read_and_print_distance@inch_str(COMRAM[4]), 

    Set_LED@color_name	PTR unsigned char  size(2) Largest target is 7
		 -> STR_22(CODE[6]), STR_21(CODE[5]), STR_20(CODE[7]), STR_19(CODE[5]), 
		 -> STR_18(CODE[6]), STR_17(CODE[4]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 18
		 -> STR_23(CODE[13]), STR_22(CODE[6]), STR_21(CODE[5]), STR_20(CODE[7]), 
		 -> STR_19(CODE[5]), STR_18(CODE[6]), STR_17(CODE[4]), STR_16(CODE[17]), 
		 -> STR_15(CODE[17]), STR_14(CODE[17]), STR_13(CODE[17]), STR_12(CODE[17]), 
		 -> STR_11(CODE[13]), STR_10(CODE[17]), STR_9(CODE[17]), STR_8(CODE[14]), 
		 -> STR_7(CODE[4]), countdown_timer@sec_str(COMRAM[4]), STR_6(CODE[18]), STR_5(CODE[17]), 
		 -> STR_4(CODE[17]), STR_3(CODE[14]), STR_2(CODE[14]), read_and_print_distance@cent_str(COMRAM[4]), 
		 -> read_and_print_distance@inch_str(COMRAM[4]), STR_1(CODE[9]), 


Critical Paths under _main in COMRAM

    _main->_read_and_print_distance
    _standby_message->_Lcd_Write_String
    _read_and_print_distance->___ftdiv
    ___ftmul->___ftpack
    ___ftdiv->___altoft
    ___altoft->___ftpack
    _motion_sensor->_buzz_seconds
    _countdown_timer->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _buzz_seconds->___wmul
    _Set_LED->_Lcd_Write_String
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                 5     5      0   40621
                                             59 COMRAM     5     5      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                     _Lcd_Write_Char
                   _Lcd_Write_String
                            _Set_LED
                    _countdown_timer
                      _motion_sensor
            _read_and_print_distance
                          _read_char
                    _standby_message
 ---------------------------------------------------------------------------------
 (1) _standby_message                                      0     0      0    3519
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
 ---------------------------------------------------------------------------------
 (1) _read_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _read_and_print_distance                             26    24      2   15126
                                             33 COMRAM    26    24      2
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                           ___altoft
                            ___ftdiv
                            ___ftmul
                            ___fttol
                               _itoa
 ---------------------------------------------------------------------------------
 (2) ___fttol                                             15    11      4     404
                                              0 COMRAM    15    11      4
 ---------------------------------------------------------------------------------
 (2) ___ftmul                                             15     9      6    3031
                                              8 COMRAM    15     9      6
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___ftdiv                                             15     9      6    2985
                                             18 COMRAM    15     9      6
                           ___altoft (ARG)
                           ___ftpack
 ---------------------------------------------------------------------------------
 (2) ___altoft                                            10     6      4    2641
                                              8 COMRAM    10     6      4
                           ___ftpack
 ---------------------------------------------------------------------------------
 (3) ___ftpack                                             8     3      5    2427
                                              0 COMRAM     8     3      5
 ---------------------------------------------------------------------------------
 (1) _motion_sensor                                        0     0      0    4126
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _buzz_seconds
 ---------------------------------------------------------------------------------
 (1) _countdown_timer                                     10     8      2    6650
                                             24 COMRAM    10     8      2
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                       _buzz_seconds
                               _itoa
 ---------------------------------------------------------------------------------
 (2) _itoa                                                 8     2      6    2154
                                             16 COMRAM     8     2      6
                            ___fttol (ARG)
                               _utoa
 ---------------------------------------------------------------------------------
 (3) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (4) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (4) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (2) _buzz_seconds                                         7     5      2     532
                                              6 COMRAM     7     5      2
                             ___wmul
 ---------------------------------------------------------------------------------
 (3) ___wmul                                               6     2      4     311
                                              0 COMRAM     6     2      4
 ---------------------------------------------------------------------------------
 (1) _Set_LED                                             13     3     10    7173
                                             10 COMRAM    13     3     10
                          _Lcd_Clear
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            ___awdiv
                       _var_delay_us
 ---------------------------------------------------------------------------------
 (2) _var_delay_us                                         5     3      2     274
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (2) ___awdiv                                              8     4      4     756
                                              0 COMRAM     8     4      4
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_String                                     6     4      2    1806
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (3) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (2) _Lcd_Set_Cursor                                       5     4      1    1713
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     135
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (4) _Lcd_Port                                             1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 4
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_Char
     _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Set_LED
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___awdiv
     _var_delay_us
   _countdown_timer
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _buzz_seconds
       ___wmul
     _itoa
       ___fttol (ARG)
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _motion_sensor
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     _buzz_seconds
       ___wmul
   _read_and_print_distance
     _Lcd_Clear
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port
     ___altoft
       ___ftpack
     ___ftdiv
       ___altoft (ARG)
         ___ftpack
       ___ftpack (ARG)
     ___ftmul
       ___ftpack
     ___fttol
     _itoa
       ___fttol (ARG)
       _utoa (ARG)
         ___lwdiv
         ___lwmod
   _read_char
   _standby_message
     _Lcd_Set_Cursor
       _Lcd_Cmd
         _Lcd_Port
     _Lcd_Write_String
       _Lcd_Write_Char
         _Lcd_Port

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     40      40       1       67.4%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BITBANK3           100      0       0      10        0.0%
BANK3              100      0       0      11        0.0%
BITBANK4           100      0       0      12        0.0%
BANK4              100      0       0      13        0.0%
BITBANK5           100      0       0      14        0.0%
BANK5              100      0       0      15        0.0%
BITBANK6           100      0       0      16        0.0%
BANK6              100      0       0      17        0.0%
BITBANK7           100      0       0      18        0.0%
BANK7              100      0       0      19        0.0%
ABS                  0      0       0      20        0.0%
BIGRAM             7FF      0       0      21        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Sun Jul 16 23:31:05 2017

                      ___altoft@exp 0011                       ___altoft@sign 0012  
                                l51 7090                                  l53 709A  
                                l55 70A4                                  l57 70AE  
                                l92 700E                                  l93 7004  
                                l99 728C                        ___awdiv@sign 0006  
               ___wmul@multiplicand 0003            ?_read_and_print_distance 0022  
                               l100 7264                                 l106 7066  
                               l122 7B1E                                 l140 749C  
                               l125 7B24                                 l143 74D0  
                               l506 7592                                 l451 78DC  
                               l393 7644                                 l812 709C  
                               l816 70A6                                 l808 7092  
                               l585 7234                                 l595 7150  
                               u900 737E                                 u907 7374  
                               u890 734A                                 u971 7838  
                               u991 7860                                 u897 7340  
                               wreg 000FE8                        __CFG_FOSC$HS 000000  
                      __CFG_LVP$OFF 000000                        ___ftdiv@cntr 001C  
                      ___ftdiv@sign 0021                        __CFG_WDT$OFF 000000  
                              l2050 7D62                                l2042 7D0A  
                              l2060 7E48                                l2052 7D90  
                              l2044 7D18                                l2062 7E56  
                              l2054 7DBE                                l2046 7D26  
                              l2038 7CFE                                l1504 722A  
                              l1520 7146                                l1512 7126  
                              l2064 7E5C                                l2056 7DEC  
                              l2048 7D34                                l1514 712E  
                              l2058 7E1A                                l1604 71C4  
                              l1516 7132                                l1540 75DE  
                              l1614 731E                                l1550 763A  
                              l1542 75FC                                l1534 75C6  
                              l2078 7E9E                                l1618 7352  
                              l1634 7070                                l1546 7612  
                              l1538 75D4                                l1722 795E  
                              l1492 7202                                l1644 717E  
                              l1548 7630                                l1740 79A0  
                              l1716 7936                                l1494 720A  
                              l1670 7850                                l1750 79C8  
                              l1830 7AA4                                l1496 720E  
                              l1568 751A                                l1656 73A8  
                              l1736 7990                                l1840 7ACE  
                              l1808 7A2E                                l1578 7554  
                              l1658 73B4                                l1746 79B8  
                              l1826 7A94                                l1930 7C70  
                              l1780 7440                                l1772 7422  
                              l1860 77C6                                l1676 7878  
                              l1844 7AE4                                l1836 7ABC  
                              l1790 7460                                l1782 7444  
                              l1766 7412                                l1950 7694  
                              l1838 7AC8                                l1696 78B6  
                              l1778 7438                                l1794 746A  
                              l1946 7686                                l1890 7B00  
                              l1884 780E                                l1876 77F6  
                              l1868 77DE                                l1798 7478  
                              l1886 7812                                l1968 7708  
                              STR_1 7FD4                                STR_2 7F9E  
                              STR_3 7F90                                STR_4 7F6E  
                              STR_5 7F19                                STR_6 7EE5  
                              STR_7 7F9A                                STR_8 7FAC  
                              STR_9 7F2A                                u1021 791E  
                              u1041 7946                                u1141 7A12  
                              u1160 7A4C                                u1165 7A44  
                              u1407 727E                                u1417 70FC  
                              u1337 7CF0                                u1427 710E  
                              u1347 7E90                                u1437 72AE  
                              u1357 7B0C                                u1447 72C2  
                              u1367 7B16                                u1457 72D8  
                              u1377 7C5E                                u1467 7028  
                              u1387 76F2                       __CFG_DEBUG$ON 000000  
                              u1397 726C                   ?_Lcd_Write_String 0005  
                              _main 7C86                        ___ftpack@arg 0001  
                              _itoa 715A                        ___ftpack@exp 0004  
                              fsr2h 000FDA                                indf2 000FDF  
                              fsr2l 000FD9                                _utoa 7512  
                              prodh 000FF4                                prodl 000FF3  
                              start 0000                  ??_Lcd_Write_String 0007  
                   __end_of_Lcd_Cmd 7036                       __CFG_MCLRE$ON 000000  
                      ___ftmul@cntr 0016                        ___param_bank 000000  
                      ___ftmul@sign 0017                     _standby_message 70B2  
                      ___fttol@exp1 000F                     __end_of_Set_LED 7828  
                      ___fttol@lval 000B                               ?_main 0001  
                      main@led_time 003F                               ?_itoa 0011  
                   __end_of___awdiv 7482                               STR_10 7F08  
                             STR_11 7FC7                               STR_20 7FDD  
                             STR_12 7F3B                               STR_21 7FF5  
                             STR_13 7F5D                               STR_22 7FE4  
                             STR_14 7EF7                               STR_23 7FBA  
                             STR_15 7F4C                               STR_16 7F7F  
                             STR_17 7FFA                               STR_18 7FEA  
                             STR_19 7FF0                     __end_of___ftdiv 790E  
                             ?_utoa 0008                     __end_of___ftmul 7A02  
                   ___awdiv@divisor 0003                     __end_of___fttol 7AF6  
                   __end_of___lwdiv 723E                     __end_of___lwmod 715A  
                   ___awdiv@counter 0005                               _RCREG 000FAE  
                             _RCSTA 000FAB                               _TMR1H 000FCF  
                             _TMR1L 000FCE                               _SPBRG 000FAF  
           __size_of_Lcd_Set_Cursor 0050                               _TRISA 000F92  
                             _TRISB 000F93                               _TRISC 000F94  
                             _TRISD 000F95                               _TRISE 000F96  
                             _TXSTA 000FAC                       ___ftpack@sign 0005  
                        Set_LED@red 000B                       buzz_seconds@i 000C  
                             tablat 000FF5                               utoa@c 0010  
                             utoa@v 000E                               status 000FD8  
                  __end_of_Lcd_Init 7314                    __end_of_Lcd_Port 70B2  
                   __initialization 6FEA                        __end_of_main 7EE4  
                      __end_of_itoa 719C                        __end_of_utoa 75B6  
      read_and_print_distance@count 0022                              ??_main 003C  
                     ___fttol@sign1 000A                              ??_itoa 0017  
          read_and_print_distance@i 0037                              ??_utoa 000E  
                __size_of_Lcd_Clear 000E                       __activetblptr 000002  
                  __end_of___altoft 73FE                    ___awdiv@dividend 0001  
                  __end_of___ftpack 7664                           ??_Lcd_Cmd 0002  
                            _TMR1ON 007E68             __size_of_Lcd_Write_Char 0038  
           __end_of_standby_message 70E0                 buzz_seconds@seconds 0007  
                         ??_Set_LED 0015                              ___wmul 7036  
                         ??___awdiv 0005                           ??___ftdiv 0019  
                         ??___ftmul 000F                           ??___fttol 0005  
                         ??___lwdiv 0005                           ??___lwmod 0005  
                  ___awdiv@quotient 0007                         Set_LED@blue 000F  
             ___ftmul@f3_as_product 0013                              itoa@cp 0017  
                      __mediumconst 7EE4                              tblptrh 000FF7  
                            tblptrl 000FF6                              tblptru 000FF8  
                     ?_buzz_seconds 0007                     Lcd_Set_Cursor@a 0005  
                   Lcd_Set_Cursor@b 0004                     Lcd_Set_Cursor@y 0007  
                   Lcd_Set_Cursor@z 0006  read_and_print_distance@centimeters 0039  
                        __accesstop 0060             __end_of__initialization 6FEA  
                        ___altoft@c 0009                   __end_of_Lcd_Clear 7002  
                     ___rparam_used 000001                          ___ftdiv@f1 0013  
                        ___ftdiv@f2 0016                          ___ftdiv@f3 001D  
                        ___ftmul@f1 0009                          ___ftmul@f2 000C  
                        ___fttol@f1 0001                      __pcstackCOMRAM 0001  
                    _Lcd_Set_Cursor 719C       read_and_print_distance@inches 0034  
                         ?_Lcd_Init 0001                           ?_Lcd_Port 0001  
             __end_of_motion_sensor 7512                      ??_buzz_seconds 0009  
  __size_of_read_and_print_distance 0190            __size_of_countdown_timer 00DE  
                  ?_standby_message 0001                  __size_of_read_char 0014  
   read_and_print_distance@cent_str 0028                             ?___wmul 0001  
   read_and_print_distance@distance 0030                           ?___altoft 0009  
         __size_of_Lcd_Write_String 0072                           ?___ftpack 0001  
            __end_of_Lcd_Set_Cursor 71EC     read_and_print_distance@inch_str 002C  
                        ??_Lcd_Init 0004                          ??_Lcd_Port 0001  
                    _Lcd_Write_Char 70E0                             _Lcd_Cmd 7016  
                           _Set_LED 7742                             __Hparam 0000  
                           __Lparam 0000                       ?_var_delay_us 0001  
                           ___awdiv 73FE                             ___ftdiv 7828  
                   __size_of___wmul 0026                             ___ftmul 790E  
                           ___fttol 7A02                             ___lwdiv 71EC  
                           ___lwmod 7118                          ??___altoft 000D  
                           __pcinit 6FEA              countdown_timer@sec_str 001D  
                        ??___ftpack 0006              countdown_timer@seconds 0019  
                           __ramtop 0800                     ?_Lcd_Set_Cursor 0004  
                           __ptext0 7C86                             __ptext1 70B2  
                           __ptext2 7002                             __ptext3 7AF6  
                           __ptext4 7A02                             __ptext5 790E  
                           __ptext6 7828                             __ptext7 7386  
                           __ptext8 75B6                             __ptext9 7482  
                 __end_of_read_char 7016                        Set_LED@count 0011  
                      Set_LED@green 000D              __end_of_Lcd_Write_Char 7118  
              end_of_initialization 6FEA                             itoa@buf 0011  
                           itoa@val 0013                       __Lmediumconst 7EE4  
                    ??_var_delay_us 0003                   ??_countdown_timer 001B  
                         _RCSTAbits 000FAB                           Lcd_Port@a 0001  
              __end_of_buzz_seconds 72A2                      var_delay_us@us 0001  
                           utoa@buf 0008                             utoa@val 000A  
                         _PORTAbits 000F80                           _PORTCbits 000F82  
                         _PORTDbits 000F83                           _PORTEbits 000F84  
                         _TRISCbits 000F94             _read_and_print_distance 7AF6  
                   ?_Lcd_Write_Char 0001                   Lcd_Write_String@a 0005  
                 Lcd_Write_String@i 0009                         ___ftdiv@exp 0020  
                         _TXSTAbits 000FAC                         ___ftmul@exp 0012  
                         _Lcd_Clear 6FF4                      __end_of___wmul 705C  
                       _BAUDCONbits 000FB8                    _Lcd_Write_String 7314  
               start_initialization 6FEA                   __size_of_Lcd_Init 0072  
                 __size_of_Lcd_Port 002C                          ?_Lcd_Clear 0001  
                          ??___wmul 0005                     Lcd_Write_Char@a 0004  
                   Lcd_Write_Char@y 0003                   __size_of___altoft 0078  
                 __size_of___ftpack 00AE           ??_read_and_print_distance 0024  
              __end_of_var_delay_us 7086                            ?_Lcd_Cmd 0001  
             __size_of_buzz_seconds 0064                            ?_Set_LED 000B  
                  ___lwdiv@dividend 0001                    ??_Lcd_Set_Cursor 0005  
                     __pmediumconst 7EE4                            ?___awdiv 0001  
                          ?___ftdiv 0013                            ?___ftmul 0009  
          __size_of_standby_message 002E                            ?___fttol 0001  
                          ?___lwdiv 0001              __size_of_motion_sensor 0090  
                          ?___lwmod 0001                    ___lwdiv@quotient 0005  
                         _read_char 7002                     _countdown_timer 7664  
                      _buzz_seconds 723E                      ___wmul@product 0005  
                          _PIE1bits 000F9D     __end_of_read_and_print_distance 7C86  
                          Lcd_Cmd@a 0003                            _PIR1bits 000F9E  
                       ??_Lcd_Clear 0004                       var_delay_us@i 0004  
                 ___wmul@multiplier 0001                    ??_Lcd_Write_Char 0002  
                          _Lcd_Init 72A2                            _Lcd_Port 7086  
                        ?_read_char 0001                       _motion_sensor 7482  
                          Set_LED@i 0016            __end_of_Lcd_Write_String 7386  
                  __size_of_Lcd_Cmd 0020                            __Hrparam 0000  
                  __size_of_Set_LED 00E6                            __Lrparam 0000  
                  __size_of___awdiv 0084                    __size_of___ftdiv 00E6  
                          ___altoft 7386                    __size_of___ftmul 00F4  
                  __size_of___fttol 00F4                    __size_of___lwdiv 0052  
                  __size_of___lwmod 0042                            ___ftpack 75B6  
             __size_of_var_delay_us 002A             __end_of_countdown_timer 7742  
                 ??_standby_message 000B                     ___lwdiv@divisor 0003  
                   ___lwdiv@counter 0007                            __ptext10 7664  
                          __ptext11 715A                            __ptext20 7314  
                          __ptext12 7512                            __ptext21 70E0  
                          __ptext13 7118                            __ptext22 719C  
                          __ptext14 71EC                            __ptext23 6FF4  
                          __ptext15 723E                            __ptext24 72A2  
                          __ptext16 7036                            __ptext25 7016  
                          __ptext17 7742                            __ptext26 7086  
                          __ptext18 705C                            __ptext19 73FE  
                    ?_motion_sensor 0001                       __size_of_main 025E  
                     __size_of_itoa 0042                       __size_of_utoa 00A4  
                      _var_delay_us 705C                            main@ours 003E  
                  buzz_seconds@time 000A                            itoa@base 0015  
                       ??_read_char 0001                  Lcd_Write_Char@temp 0002  
                  ___lwmod@dividend 0001                   Set_LED@color_name 0013  
                Lcd_Set_Cursor@temp 0008                            utoa@base 000C  
                  ?_countdown_timer 0019                     ___lwmod@divisor 0003  
                   ___lwmod@counter 0005                     ??_motion_sensor 000E  
                  countdown_timer@i 0021  
