

Microchip Technology PIC18 LITE Macro Assembler V1.42 build -159332390 
                                                                                               Mon Jul 10 23:09:39 2017

Microchip Technology Omniscient Code Generator v1.42 (Free mode) build 201704130522
     1                           	processor	18F4550
     2                           	fnconf	rparam,??,?,0
     3                           	opt	pw 120
     4                           	opt	lm
     5                           	psect	smallconst,global,reloc=2,class=SMALLCONST,delta=1,noexec
     6                           	psect	cinit,global,reloc=2,class=CODE,delta=1
     7                           	psect	cstackCOMRAM,global,class=COMRAM,space=1,delta=1,noexec
     8                           	psect	text0,global,reloc=2,class=CODE,delta=1
     9                           	psect	text1,global,reloc=2,class=CODE,delta=1,group=1
    10                           	psect	text2,global,reloc=2,class=CODE,delta=1
    11                           	psect	text3,global,reloc=2,class=CODE,delta=1,group=1
    12                           	psect	text4,global,reloc=2,class=CODE,delta=1,group=1
    13                           	psect	text5,global,reloc=2,class=CODE,delta=1,group=1
    14                           	psect	text6,global,reloc=2,class=CODE,delta=1,group=1
    15                           	psect	text7,global,reloc=2,class=CODE,delta=1
    16                           	psect	text8,global,reloc=2,class=CODE,delta=1
    17                           	psect	text9,global,reloc=2,class=CODE,delta=1
    18                           	psect	text10,global,reloc=2,class=CODE,delta=1
    19                           	psect	text11,global,reloc=2,class=CODE,delta=1
    20                           	psect	text12,global,reloc=2,class=CODE,delta=1
    21                           	psect	text13,global,reloc=2,class=CODE,delta=1
    22                           	psect	text14,global,reloc=2,class=CODE,delta=1
    23                           	psect	text15,global,reloc=2,class=CODE,delta=1
    24                           	psect	intsave_regs,global,class=BIGRAM,space=1,delta=1,noexec
    25                           	psect	rparam,global,class=COMRAM,space=1,delta=1,noexec
    26  0000                     
    27                           ; Version 1.42
    28                           ; Generated 13/04/2017 GMT
    29                           ; 
    30                           ; Copyright Â© 2017, Microchip Technology Inc. and its subsidiaries ("Microchip")
    31                           ; All rights reserved.
    32                           ; 
    33                           ; This software is developed by Microchip Technology Inc. and its subsidiaries ("Microch
      +                          ip").
    34                           ; 
    35                           ; Redistribution and use in source and binary forms, with or without modification, are
    36                           ; permitted provided that the following conditions are met:
    37                           ; 
    38                           ;     1. Redistributions of source code must retain the above copyright notice, this lis
      +                          t of
    39                           ;        conditions and the following disclaimer.
    40                           ; 
    41                           ;     2. Redistributions in binary form must reproduce the above copyright notice, this 
      +                          list
    42                           ;        of conditions and the following disclaimer in the documentation and/or other
    43                           ;        materials provided with the distribution.
    44                           ; 
    45                           ;     3. Microchip's name may not be used to endorse or promote products derived from th
      +                          is
    46                           ;        software without specific prior written permission.
    47                           ; 
    48                           ; THIS SOFTWARE IS PROVIDED BY MICROCHIP "AS IS" AND ANY EXPRESS OR IMPLIED WARRANTIES,
    49                           ; INCLUDING, BUT NOT LIMITED TO, THE IMPLIED WARRANTIES OF MERCHANTABILITY AND FITNESS F
      +                          OR
    50                           ; PURPOSE ARE DISCLAIMED.  IN NO EVENT SHALL MICROCHIP BE LIABLE FOR ANY DIRECT, INDIREC
      +                          T,
    51                           ; INCIDENTAL, SPECIAL, EXEMPLARY, OR CONSEQUENTIAL DAMAGES (INCLUDING BUT NOT LIMITED TO
    52                           ; PROCUREMENT OF SUBSTITUTE GOODS OR SERVICES; LOSS OF USE, DATA OR PROFITS; OR BUSINESS
    53                           ; INTERRUPTION) HOWSOEVER CAUSED AND ON ANY THEORY OF LIABILITY, WHETHER IN CONTRACT, ST
      +                          RICT
    54                           ; LIABILITY, OR TORT (INCLUDING NEGLIGENCE OR OTHERWISE) ARISING IN ANY WAY OUT OF THE U
      +                          SE OF
    55                           ; THIS SOFTWARE, EVEN IF ADVISED OF THE POSSIBILITY OF SUCH DAMAGE.
    56                           ; 
    57                           ; 
    58                           ; Code-generator required, PIC18F4550 Definitions
    59                           ; 
    60                           ; SFR Addresses
    61  0000                     _TRISCbits	set	3988
    62  0000                     _TRISE	set	3990
    63  0000                     _TRISB	set	3987
    64  0000                     _TRISD	set	3989
    65  0000                     _PORTEbits	set	3972
    66  0000                     _PORTDbits	set	3971
    67  0000                     _SPBRG	set	4015
    68  0000                     _BAUDCONbits	set	4024
    69  0000                     _RCSTA	set	4011
    70  0000                     _TXSTA	set	4012
    71  0000                     _PIE1bits	set	3997
    72  0000                     _TXSTAbits	set	4012
    73  0000                     _TXREG	set	4013
    74  0000                     _RCREG	set	4014
    75  0000                     _PIR1bits	set	3998
    76  0000                     _RCSTAbits	set	4011
    77                           
    78                           	psect	smallconst
    79  000800                     __psmallconst:
    80                           	opt stack 0
    81  000800  00                 	db	0
    82  000801                     STR_1:
    83  000801  54                 	db	84	;'T'
    84  000802  68                 	db	104	;'h'
    85  000803  65                 	db	101	;'e'
    86  000804  20                 	db	32
    87  000805  42                 	db	66	;'B'
    88  000806  69                 	db	105	;'i'
    89  000807  72                 	db	114	;'r'
    90  000808  64                 	db	100	;'d'
    91  000809  73                 	db	115	;'s'
    92  00080A  21                 	db	33
    93  00080B  20                 	db	32
    94  00080C  32                 	db	50	;'2'
    95  00080D  30                 	db	48	;'0'
    96  00080E  31                 	db	49	;'1'
    97  00080F  37                 	db	55	;'7'
    98  000810  20                 	db	32
    99  000811  00                 	db	0
   100  000812                     STR_2:
   101  000812  57                 	db	87	;'W'
   102  000813  65                 	db	101	;'e'
   103  000814  20                 	db	32
   104  000815  68                 	db	104	;'h'
   105  000816  69                 	db	105	;'i'
   106  000817  74                 	db	116	;'t'
   107  000818  20                 	db	32
   108  000819  42                 	db	66	;'B'
   109  00081A  75                 	db	117	;'u'
   110  00081B  74                 	db	116	;'t'
   111  00081C  74                 	db	116	;'t'
   112  00081D  6F                 	db	111	;'o'
   113  00081E  6E                 	db	110	;'n'
   114  00081F  20                 	db	32
   115  000820  31                 	db	49	;'1'
   116  000821  21                 	db	33
   117  000822  00                 	db	0
   118  000823                     STR_3:
   119  000823  57                 	db	87	;'W'
   120  000824  65                 	db	101	;'e'
   121  000825  20                 	db	32
   122  000826  68                 	db	104	;'h'
   123  000827  69                 	db	105	;'i'
   124  000828  74                 	db	116	;'t'
   125  000829  20                 	db	32
   126  00082A  42                 	db	66	;'B'
   127  00082B  75                 	db	117	;'u'
   128  00082C  74                 	db	116	;'t'
   129  00082D  74                 	db	116	;'t'
   130  00082E  6F                 	db	111	;'o'
   131  00082F  6E                 	db	110	;'n'
   132  000830  20                 	db	32
   133  000831  32                 	db	50	;'2'
   134  000832  21                 	db	33
   135  000833  00                 	db	0
   136  0000                     
   137                           ; #config settings
   138  000834  00                 	db	0	; dummy byte at the end
   139  0000                     
   140                           	psect	cinit
   141  000FAE                     __pcinit:
   142                           	opt stack 0
   143  000FAE                     start_initialization:
   144                           	opt stack 0
   145  000FAE                     __initialization:
   146                           	opt stack 0
   147  000FAE                     end_of_initialization:
   148                           	opt stack 0
   149  000FAE                     __end_of__initialization:
   150                           	opt stack 0
   151  000FAE  0E00               	movlw	low (__Lmediumconst shr (0+16))
   152  000FB0  6EF8               	movwf	tblptru,c
   153  000FB2  0100               	movlb	0
   154  000FB4  EF1B  F004         	goto	_main	;jump to C main() function
   155                           tblptru	equ	0xFF8
   156                           
   157                           	psect	cstackCOMRAM
   158  000001                     __pcstackCOMRAM:
   159                           	opt stack 0
   160  000001                     ?_strncmp:
   161                           	opt stack 0
   162  000001                     ?___lwdiv:
   163                           	opt stack 0
   164  000001                     ?___lwmod:
   165                           	opt stack 0
   166  000001                     Lcd_Port@a:
   167                           	opt stack 0
   168  000001                     var_delay_us@us:
   169                           	opt stack 0
   170  000001                     ___lwdiv@dividend:
   171                           	opt stack 0
   172  000001                     ___lwmod@dividend:
   173                           	opt stack 0
   174  000001                     strncmp@s1:
   175                           	opt stack 0
   176                           
   177                           ; 2 bytes @ 0x0
   178  000001                     	ds	1
   179  000002                     ??_Lcd_Cmd:
   180  000002                     Lcd_Write_Char@temp:
   181                           	opt stack 0
   182                           
   183                           ; 1 bytes @ 0x1
   184  000002                     	ds	1
   185  000003                     ??_var_delay_us:
   186  000003                     Lcd_Cmd@a:
   187                           	opt stack 0
   188  000003                     Lcd_Write_Char@y:
   189                           	opt stack 0
   190  000003                     ___lwdiv@divisor:
   191                           	opt stack 0
   192  000003                     ___lwmod@divisor:
   193                           	opt stack 0
   194  000003                     strncmp@s2:
   195                           	opt stack 0
   196                           
   197                           ; 2 bytes @ 0x2
   198  000003                     	ds	1
   199  000004                     ??_Lcd_Init:
   200  000004                     Lcd_Set_Cursor@b:
   201                           	opt stack 0
   202  000004                     Lcd_Write_Char@a:
   203                           	opt stack 0
   204  000004                     var_delay_us@i:
   205                           	opt stack 0
   206                           
   207                           ; 2 bytes @ 0x3
   208  000004                     	ds	1
   209  000005                     Lcd_Set_Cursor@a:
   210                           	opt stack 0
   211  000005                     ___lwmod@counter:
   212                           	opt stack 0
   213  000005                     Lcd_Write_String@a:
   214                           	opt stack 0
   215  000005                     ___lwdiv@quotient:
   216                           	opt stack 0
   217  000005                     strncmp@len:
   218                           	opt stack 0
   219                           
   220                           ; 2 bytes @ 0x4
   221  000005                     	ds	1
   222  000006                     Lcd_Set_Cursor@z:
   223                           	opt stack 0
   224  000006                     Set_LED@red_value:
   225                           	opt stack 0
   226                           
   227                           ; 2 bytes @ 0x5
   228  000006                     	ds	1
   229  000007                     ??_strncmp:
   230  000007                     ??_Lcd_Write_String:
   231  000007                     Lcd_Set_Cursor@y:
   232                           	opt stack 0
   233  000007                     ___lwdiv@counter:
   234                           	opt stack 0
   235                           
   236                           ; 1 bytes @ 0x6
   237  000007                     	ds	1
   238  000008                     Lcd_Set_Cursor@temp:
   239                           	opt stack 0
   240  000008                     Set_LED@blue_value:
   241                           	opt stack 0
   242  000008                     utoa@buf:
   243                           	opt stack 0
   244                           
   245                           ; 2 bytes @ 0x7
   246  000008                     	ds	1
   247  000009                     Lcd_Write_String@i:
   248                           	opt stack 0
   249                           
   250                           ; 2 bytes @ 0x8
   251  000009                     	ds	1
   252  00000A                     Set_LED@green_value:
   253                           	opt stack 0
   254  00000A                     utoa@val:
   255                           	opt stack 0
   256                           
   257                           ; 2 bytes @ 0x9
   258  00000A                     	ds	2
   259  00000C                     ??_Set_LED:
   260  00000C                     utoa@base:
   261                           	opt stack 0
   262                           
   263                           ; 2 bytes @ 0xB
   264  00000C                     	ds	2
   265  00000E                     utoa@v:
   266                           	opt stack 0
   267                           
   268                           ; 2 bytes @ 0xD
   269  00000E                     	ds	2
   270  000010                     utoa@c:
   271                           	opt stack 0
   272                           
   273                           ; 1 bytes @ 0xF
   274  000010                     	ds	1
   275  000011                     itoa@buf:
   276                           	opt stack 0
   277                           
   278                           ; 2 bytes @ 0x10
   279  000011                     	ds	2
   280  000013                     itoa@val:
   281                           	opt stack 0
   282                           
   283                           ; 2 bytes @ 0x12
   284  000013                     	ds	2
   285  000015                     itoa@base:
   286                           	opt stack 0
   287                           
   288                           ; 2 bytes @ 0x14
   289  000015                     	ds	2
   290  000017                     itoa@cp:
   291                           	opt stack 0
   292                           
   293                           ; 2 bytes @ 0x16
   294  000017                     	ds	2
   295  000019                     ??_main:
   296                           
   297                           ; 1 bytes @ 0x18
   298  000019                     	ds	2
   299  00001B                     main@distance_str:
   300                           	opt stack 0
   301                           
   302                           ; 16 bytes @ 0x1A
   303  00001B                     	ds	16
   304  00002B                     main@part1:
   305                           	opt stack 0
   306                           
   307                           ; 17 bytes @ 0x2A
   308  00002B                     	ds	17
   309  00003C                     main@part2:
   310                           	opt stack 0
   311                           
   312                           ; 17 bytes @ 0x3B
   313  00003C                     	ds	17
   314  00004D                     main@time:
   315                           	opt stack 0
   316                           
   317                           ; 2 bytes @ 0x4C
   318  00004D                     	ds	2
   319  00004F                     main@distance:
   320                           	opt stack 0
   321                           
   322                           ; 4 bytes @ 0x4E
   323  00004F                     	ds	4
   324  000053                     main@red_value:
   325                           	opt stack 0
   326                           
   327                           ; 2 bytes @ 0x52
   328  000053                     	ds	2
   329  000055                     main@blue_value:
   330                           	opt stack 0
   331                           
   332                           ; 2 bytes @ 0x54
   333  000055                     	ds	2
   334  000057                     main@green_value:
   335                           	opt stack 0
   336                           
   337                           ; 2 bytes @ 0x56
   338  000057                     	ds	2
   339  000059                     main@i:
   340                           	opt stack 0
   341                           
   342                           ; 2 bytes @ 0x58
   343  000059                     	ds	2
   344  00005B                     main@i_546:
   345                           	opt stack 0
   346                           
   347                           ; 2 bytes @ 0x5A
   348  00005B                     	ds	2
   349  00005D                     main@i_549:
   350                           	opt stack 0
   351                           
   352                           ; 2 bytes @ 0x5C
   353  00005D                     	ds	2
   354  00005F                     main@temp_char:
   355                           	opt stack 0
   356                           
   357                           ; 1 bytes @ 0x5E
   358  00005F                     	ds	1
   359                           tblptru	equ	0xFF8
   360                           
   361 ;;
   362 ;;Main: autosize = 0, tempsize = 2, incstack = 0, save=0
   363 ;;
   364 ;; *************** function _main *****************
   365 ;; Defined at:
   366 ;;		line 168 in file "newmain.c"
   367 ;; Parameters:    Size  Location     Type
   368 ;;		None
   369 ;; Auto vars:     Size  Location     Type
   370 ;;  i               2   92[COMRAM] int 
   371 ;;  i               2   90[COMRAM] int 
   372 ;;  part2          17   59[COMRAM] unsigned char [17]
   373 ;;  part1          17   42[COMRAM] unsigned char [17]
   374 ;;  distance_str   16   26[COMRAM] unsigned char [16]
   375 ;;  distance        4   78[COMRAM] long 
   376 ;;  i               2   88[COMRAM] int 
   377 ;;  green_value     2   86[COMRAM] int 
   378 ;;  blue_value      2   84[COMRAM] int 
   379 ;;  red_value       2   82[COMRAM] int 
   380 ;;  time            2   76[COMRAM] int 
   381 ;;  temp_char       1   94[COMRAM] unsigned char 
   382 ;; Return value:  Size  Location     Type
   383 ;;                  1    wreg      void 
   384 ;; Registers used:
   385 ;;		wreg, fsr0l, fsr0h, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
   386 ;; Tracked objects:
   387 ;;		On entry : 0/0
   388 ;;		On exit  : 0/0
   389 ;;		Unchanged: 0/0
   390 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   391 ;;      Params:         0       0       0       0       0       0       0       0       0
   392 ;;      Locals:        69       0       0       0       0       0       0       0       0
   393 ;;      Temps:          2       0       0       0       0       0       0       0       0
   394 ;;      Totals:        71       0       0       0       0       0       0       0       0
   395 ;;Total ram usage:       71 bytes
   396 ;; Hardware stack levels required when called:    3
   397 ;; This function calls:
   398 ;;		_Lcd_Clear
   399 ;;		_Lcd_Init
   400 ;;		_Lcd_Set_Cursor
   401 ;;		_Lcd_Write_String
   402 ;;		_Set_LED
   403 ;;		_itoa
   404 ;;		_read_char
   405 ;;		_strncmp
   406 ;; This function is called by:
   407 ;;		Startup code after reset
   408 ;; This function uses a non-reentrant model
   409 ;;
   410                           
   411                           	psect	text0
   412  000836                     __ptext0:
   413                           	opt stack 0
   414  000836                     _main:
   415                           	opt stack 28
   416                           
   417                           ;newmain.c: 173: TRISD = 0b00000010;
   418                           
   419                           ;incstack = 0
   420  000836  0E02               	movlw	2
   421  000838  6E95               	movwf	3989,c	;volatile
   422                           
   423                           ;newmain.c: 174: TRISB = 0b11111100;
   424  00083A  0EFC               	movlw	252
   425  00083C  6E93               	movwf	3987,c	;volatile
   426                           
   427                           ;newmain.c: 175: TRISE = 0b00000000;
   428  00083E  0E00               	movlw	0
   429  000840  6E96               	movwf	3990,c	;volatile
   430                           
   431                           ;newmain.c: 178: PIE1bits.TXIE = 0;
   432  000842  989D               	bcf	3997,4,c	;volatile
   433                           
   434                           ;newmain.c: 179: PIE1bits.RCIE = 0;
   435  000844  9A9D               	bcf	3997,5,c	;volatile
   436                           
   437                           ;newmain.c: 181: char part1[17];
   438                           ;newmain.c: 182: char part2[17];
   439                           ;newmain.c: 186: char temp_char;
   440                           ;newmain.c: 188: TXSTA = 0;
   441  000846  0E00               	movlw	0
   442  000848  6EAC               	movwf	4012,c	;volatile
   443                           
   444                           ;newmain.c: 191: TRISCbits.TRISC6 = 0;
   445  00084A  9C94               	bcf	3988,6,c	;volatile
   446                           
   447                           ;newmain.c: 192: TRISCbits.TRISC7 = 1;
   448  00084C  8E94               	bsf	3988,7,c	;volatile
   449                           
   450                           ;newmain.c: 193: TXSTAbits.SYNC = 0;
   451  00084E  98AC               	bcf	4012,4,c	;volatile
   452                           
   453                           ;newmain.c: 194: TXSTAbits.TX9 = 0;
   454  000850  9CAC               	bcf	4012,6,c	;volatile
   455                           
   456                           ;newmain.c: 202: RCSTA = 0;
   457  000852  0E00               	movlw	0
   458  000854  6EAB               	movwf	4011,c	;volatile
   459                           
   460                           ;newmain.c: 203: RCSTAbits.CREN = 1;
   461  000856  88AB               	bsf	4011,4,c	;volatile
   462                           
   463                           ;newmain.c: 210: BAUDCONbits.BRG16 = 0;
   464  000858  96B8               	bcf	4024,3,c	;volatile
   465                           
   466                           ;newmain.c: 211: TXSTA = 0;
   467  00085A  0E00               	movlw	0
   468  00085C  6EAC               	movwf	4012,c	;volatile
   469                           
   470                           ;newmain.c: 212: TXSTAbits.BRGH = 0;
   471  00085E  94AC               	bcf	4012,2,c	;volatile
   472                           
   473                           ;newmain.c: 213: SPBRG = 32;
   474  000860  0E20               	movlw	32
   475  000862  6EAF               	movwf	4015,c	;volatile
   476                           
   477                           ;newmain.c: 215: RCSTAbits.RX9 = 0;
   478  000864  9CAB               	bcf	4011,6,c	;volatile
   479                           
   480                           ;newmain.c: 216: RCSTAbits.SPEN = 1;
   481  000866  8EAB               	bsf	4011,7,c	;volatile
   482                           
   483                           ;newmain.c: 220: Lcd_Init();
   484  000868  ECA3  F006         	call	_Lcd_Init	;wreg free
   485                           
   486                           ;newmain.c: 221: Lcd_Clear();
   487  00086C  ECD0  F007         	call	_Lcd_Clear	;wreg free
   488                           
   489                           ;newmain.c: 222: Lcd_Set_Cursor(1,1);
   490  000870  0E01               	movlw	1
   491  000872  6E04               	movwf	Lcd_Set_Cursor@b,c
   492  000874  0E01               	movlw	1
   493  000876  EC05  F007         	call	_Lcd_Set_Cursor
   494                           
   495                           ;newmain.c: 223: Lcd_Write_String("The Birds! 2017 ");
   496  00087A  0E01               	movlw	low STR_1
   497  00087C  6E05               	movwf	Lcd_Write_String@a,c
   498  00087E  0E08               	movlw	high STR_1
   499  000880  6E06               	movwf	Lcd_Write_String@a+1,c
   500  000882  EC6A  F006         	call	_Lcd_Write_String	;wreg free
   501                           
   502                           ;newmain.c: 224: _delay((unsigned long)((1000)*(20000000/4000.0)));
   503  000886  0E1A               	movlw	26
   504  000888  6E1A               	movwf	(??_main+1)& (0+255),c
   505  00088A  0E5E               	movlw	94
   506  00088C  6E19               	movwf	??_main& (0+255),c
   507  00088E  0E6E               	movlw	110
   508  000890                     u807:
   509  000890  2EE8               	decfsz	wreg,f,c
   510  000892  D7FE               	bra	u807
   511  000894  2E19               	decfsz	??_main& (0+255),f,c
   512  000896  D7FC               	bra	u807
   513  000898  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   514  00089A  D7FA               	bra	u807
   515  00089C  D000               	nop2	
   516                           
   517                           ;newmain.c: 225: Lcd_Clear();
   518  00089E  ECD0  F007         	call	_Lcd_Clear	;wreg free
   519                           
   520                           ;newmain.c: 226: Lcd_Set_Cursor(1,1);
   521  0008A2  0E01               	movlw	1
   522  0008A4  6E04               	movwf	Lcd_Set_Cursor@b,c
   523  0008A6  0E01               	movlw	1
   524  0008A8  EC05  F007         	call	_Lcd_Set_Cursor
   525                           
   526                           ;newmain.c: 235: int red_value = 255;
   527  0008AC  0E00               	movlw	0
   528  0008AE  6E54               	movwf	main@red_value+1,c
   529  0008B0  6853               	setf	main@red_value,c
   530                           
   531                           ;newmain.c: 236: int green_value = 255;
   532  0008B2  0E00               	movlw	0
   533  0008B4  6E58               	movwf	main@green_value+1,c
   534  0008B6  6857               	setf	main@green_value,c
   535                           
   536                           ;newmain.c: 237: int blue_value = 255;
   537  0008B8  0E00               	movlw	0
   538  0008BA  6E56               	movwf	main@blue_value+1,c
   539  0008BC  6855               	setf	main@blue_value,c
   540                           
   541                           ;newmain.c: 239: int time = 5;
   542  0008BE  0E00               	movlw	0
   543  0008C0  6E4E               	movwf	main@time+1,c
   544  0008C2  0E05               	movlw	5
   545  0008C4  6E4D               	movwf	main@time,c
   546                           
   547                           ;newmain.c: 241: long distance;
   548                           ;newmain.c: 242: char distance_str[16];
   549                           ;newmain.c: 244: int i = 0;
   550  0008C6  0E00               	movlw	0
   551  0008C8  6E5A               	movwf	main@i+1,c
   552  0008CA  0E00               	movlw	0
   553  0008CC  6E59               	movwf	main@i,c
   554  0008CE                     l1399:
   555                           
   556                           ;newmain.c: 246: PORTDbits.RD0 = 0;
   557  0008CE  9083               	bcf	3971,0,c	;volatile
   558                           
   559                           ;newmain.c: 247: _delay((unsigned long)((5)*(20000000/4000000.0)));
   560  0008D0  0E08               	movlw	8
   561  0008D2                     u817:
   562  0008D2  2EE8               	decfsz	wreg,f,c
   563  0008D4  D7FE               	bra	u817
   564  0008D6  F000               	nop	
   565                           
   566                           ;newmain.c: 248: PORTDbits.RD0 = 1;
   567  0008D8  8083               	bsf	3971,0,c	;volatile
   568                           
   569                           ;newmain.c: 249: _delay((unsigned long)((10)*(20000000/4000000.0)));
   570  0008DA  0E10               	movlw	16
   571  0008DC                     u827:
   572  0008DC  2EE8               	decfsz	wreg,f,c
   573  0008DE  D7FE               	bra	u827
   574  0008E0  D000               	nop2	
   575                           
   576                           ;newmain.c: 250: PORTDbits.RD0 = 0;
   577  0008E2  9083               	bcf	3971,0,c	;volatile
   578  0008E4                     l119:
   579  0008E4  A283               	btfss	3971,1,c	;volatile
   580  0008E6  D7FE               	goto	l119
   581                           
   582                           ;newmain.c: 253: distance = PORTDbits.RD1;
   583  0008E8  A283               	btfss	3971,1,c	;volatile
   584  0008EA  D003               	goto	u660
   585  0008EC  6A19               	clrf	??_main& (0+255),c
   586  0008EE  2A19               	incf	??_main& (0+255),f,c
   587  0008F0  D001               	goto	u668
   588  0008F2                     u660:
   589  0008F2  6A19               	clrf	??_main& (0+255),c
   590  0008F4                     u668:
   591  0008F4  5019               	movf	??_main,w,c
   592  0008F6  6E4F               	movwf	main@distance,c
   593  0008F8  6A50               	clrf	main@distance+1,c
   594  0008FA  6A51               	clrf	main@distance+2,c
   595  0008FC  6A52               	clrf	main@distance+3,c
   596                           
   597                           ;newmain.c: 254: itoa(distance_str,distance,10);
   598  0008FE  0E1B               	movlw	low main@distance_str
   599  000900  6E11               	movwf	itoa@buf,c
   600  000902  0E00               	movlw	high main@distance_str
   601  000904  6E12               	movwf	itoa@buf+1,c
   602  000906  C04F  F013         	movff	main@distance,itoa@val
   603  00090A  C050  F014         	movff	main@distance+1,itoa@val+1
   604  00090E  0E00               	movlw	0
   605  000910  6E16               	movwf	itoa@base+1,c
   606  000912  0E0A               	movlw	10
   607  000914  6E15               	movwf	itoa@base,c
   608  000916  EC2D  F007         	call	_itoa	;wreg free
   609                           
   610                           ;newmain.c: 255: Lcd_Write_String(distance_str);
   611  00091A  0E1B               	movlw	low main@distance_str
   612  00091C  6E05               	movwf	Lcd_Write_String@a,c
   613  00091E  0E00               	movlw	high main@distance_str
   614  000920  6E06               	movwf	Lcd_Write_String@a+1,c
   615  000922  EC6A  F006         	call	_Lcd_Write_String	;wreg free
   616                           
   617                           ;newmain.c: 256: _delay((unsigned long)((1000)*(20000000/4000.0)));
   618  000926  0E1A               	movlw	26
   619  000928  6E1A               	movwf	(??_main+1)& (0+255),c
   620  00092A  0E5E               	movlw	94
   621  00092C  6E19               	movwf	??_main& (0+255),c
   622  00092E  0E6E               	movlw	110
   623  000930                     u837:
   624  000930  2EE8               	decfsz	wreg,f,c
   625  000932  D7FE               	bra	u837
   626  000934  2E19               	decfsz	??_main& (0+255),f,c
   627  000936  D7FC               	bra	u837
   628  000938  2E1A               	decfsz	(??_main+1)& (0+255),f,c
   629  00093A  D7FA               	bra	u837
   630  00093C  D000               	nop2	
   631                           
   632                           ;newmain.c: 259: if(i ==16 ){
   633  00093E  0E10               	movlw	16
   634  000940  1859               	xorwf	main@i,w,c
   635  000942  105A               	iorwf	main@i+1,w,c
   636  000944  A4D8               	btfss	status,2,c
   637  000946  D006               	goto	l1421
   638                           
   639                           ;newmain.c: 260: Lcd_Set_Cursor(2,1);
   640  000948  0E01               	movlw	1
   641  00094A  6E04               	movwf	Lcd_Set_Cursor@b,c
   642  00094C  0E02               	movlw	2
   643  00094E  EC05  F007         	call	_Lcd_Set_Cursor
   644                           
   645                           ;newmain.c: 261: }
   646  000952  D010               	goto	l123
   647  000954                     l1421:
   648                           
   649                           ;newmain.c: 262: else if(i == 32){
   650  000954  0E20               	movlw	32
   651  000956  1859               	xorwf	main@i,w,c
   652  000958  105A               	iorwf	main@i+1,w,c
   653  00095A  A4D8               	btfss	status,2,c
   654  00095C  D00B               	goto	l123
   655                           
   656                           ;newmain.c: 263: Lcd_Set_Cursor(1,1);
   657  00095E  0E01               	movlw	1
   658  000960  6E04               	movwf	Lcd_Set_Cursor@b,c
   659  000962  0E01               	movlw	1
   660  000964  EC05  F007         	call	_Lcd_Set_Cursor
   661                           
   662                           ;newmain.c: 264: Lcd_Clear();
   663  000968  ECD0  F007         	call	_Lcd_Clear	;wreg free
   664                           
   665                           ;newmain.c: 265: i = 0;
   666  00096C  0E00               	movlw	0
   667  00096E  6E5A               	movwf	main@i+1,c
   668  000970  0E00               	movlw	0
   669  000972  6E59               	movwf	main@i,c
   670  000974                     l123:
   671                           
   672                           ;newmain.c: 266: }
   673                           ;newmain.c: 267: i = i + 1;
   674  000974  0E01               	movlw	1
   675  000976  2459               	addwf	main@i,w,c
   676  000978  6E59               	movwf	main@i,c
   677  00097A  0E00               	movlw	0
   678  00097C  205A               	addwfc	main@i+1,w,c
   679  00097E  6E5A               	movwf	main@i+1,c
   680  000980  D7A6               	goto	l1399
   681  000982                     l1429:
   682                           
   683                           ;newmain.c: 273: Set_LED(red_value,green_value,blue_value);
   684  000982  C053  F006         	movff	main@red_value,Set_LED@red_value
   685  000986  C054  F007         	movff	main@red_value+1,Set_LED@red_value+1
   686  00098A  C057  F008         	movff	main@green_value,Set_LED@blue_value
   687  00098E  C058  F009         	movff	main@green_value+1,Set_LED@blue_value+1
   688  000992  C055  F00A         	movff	main@blue_value,Set_LED@green_value
   689  000996  C056  F00B         	movff	main@blue_value+1,Set_LED@green_value+1
   690  00099A  ECE2  F005         	call	_Set_LED	;wreg free
   691                           
   692                           ;newmain.c: 274: green_value = green_value - 1;
   693  00099E  0EFF               	movlw	255
   694  0009A0  2457               	addwf	main@green_value,w,c
   695  0009A2  6E57               	movwf	main@green_value,c
   696  0009A4  0EFF               	movlw	255
   697  0009A6  2058               	addwfc	main@green_value+1,w,c
   698  0009A8  6E58               	movwf	main@green_value+1,c
   699                           
   700                           ;newmain.c: 276: if(green_value == 0 ){
   701  0009AA  5057               	movf	main@green_value,w,c
   702  0009AC  1058               	iorwf	main@green_value+1,w,c
   703  0009AE  A4D8               	btfss	status,2,c
   704  0009B0  D7E8               	goto	l1429
   705                           
   706                           ;newmain.c: 277: green_value = 255;
   707  0009B2  0E00               	movlw	0
   708  0009B4  6E58               	movwf	main@green_value+1,c
   709  0009B6  6857               	setf	main@green_value,c
   710  0009B8  D7E4               	goto	l1429
   711  0009BA                     l1437:
   712                           
   713                           ;newmain.c: 290: for(int i = 0; i < 16; i++){
   714  0009BA  0E00               	movlw	0
   715  0009BC  6E5C               	movwf	main@i_546+1,c
   716  0009BE  0E00               	movlw	0
   717  0009C0  6E5B               	movwf	main@i_546,c
   718  0009C2                     l1439:
   719  0009C2  BE5C               	btfsc	main@i_546+1,7,c
   720  0009C4  D006               	goto	l1443
   721  0009C6  505C               	movf	main@i_546+1,w,c
   722  0009C8  E11C               	bnz	l1457
   723  0009CA  0E10               	movlw	16
   724  0009CC  5C5B               	subwf	main@i_546,w,c
   725  0009CE  B0D8               	btfsc	status,0,c
   726  0009D0  D018               	goto	l1457
   727  0009D2                     l1443:
   728                           
   729                           ;newmain.c: 291: temp_char = read_char();
   730  0009D2  ECC6  F007         	call	_read_char	;wreg free
   731  0009D6  6E5F               	movwf	main@temp_char,c
   732                           
   733                           ;newmain.c: 292: if(temp_char == '\r'){
   734  0009D8  0E0D               	movlw	13
   735  0009DA  185F               	xorwf	main@temp_char,w,c
   736  0009DC  A4D8               	btfss	status,2,c
   737  0009DE  D006               	goto	l1451
   738                           
   739                           ;newmain.c: 293: i--;
   740  0009E0  065B               	decf	main@i_546,f,c
   741  0009E2  A0D8               	btfss	status,0,c
   742  0009E4  065C               	decf	main@i_546+1,f,c
   743                           
   744                           ;newmain.c: 294: read_char();
   745  0009E6  ECC6  F007         	call	_read_char	;wreg free
   746                           
   747                           ;newmain.c: 295: }
   748  0009EA  D008               	goto	l1453
   749  0009EC                     l1451:
   750                           
   751                           ;newmain.c: 296: else{
   752                           ;newmain.c: 297: part1[i] = temp_char;
   753  0009EC  0E2B               	movlw	low main@part1
   754  0009EE  245B               	addwf	main@i_546,w,c
   755  0009F0  6ED9               	movwf	fsr2l,c
   756  0009F2  0E00               	movlw	high main@part1
   757  0009F4  205C               	addwfc	main@i_546+1,w,c
   758  0009F6  6EDA               	movwf	fsr2h,c
   759  0009F8  C05F  FFDF         	movff	main@temp_char,indf2
   760  0009FC                     l1453:
   761  0009FC  4A5B               	infsnz	main@i_546,f,c
   762  0009FE  2A5C               	incf	main@i_546+1,f,c
   763  000A00  D7E0               	goto	l1439
   764  000A02                     l1457:
   765                           
   766                           ;newmain.c: 298: }
   767                           ;newmain.c: 299: }
   768                           ;newmain.c: 300: Lcd_Clear();
   769  000A02  ECD0  F007         	call	_Lcd_Clear	;wreg free
   770                           
   771                           ;newmain.c: 301: Lcd_Set_Cursor(1,1);
   772  000A06  0E01               	movlw	1
   773  000A08  6E04               	movwf	Lcd_Set_Cursor@b,c
   774  000A0A  0E01               	movlw	1
   775  000A0C  EC05  F007         	call	_Lcd_Set_Cursor
   776                           
   777                           ;newmain.c: 302: Lcd_Write_String(part1);
   778  000A10  0E2B               	movlw	low main@part1
   779  000A12  6E05               	movwf	Lcd_Write_String@a,c
   780  000A14  0E00               	movlw	high main@part1
   781  000A16  6E06               	movwf	Lcd_Write_String@a+1,c
   782  000A18  EC6A  F006         	call	_Lcd_Write_String	;wreg free
   783                           
   784                           ;newmain.c: 303: if(strncmp("We hit Button 1!",part1,16) == 0){
   785  000A1C  0E12               	movlw	low STR_2
   786  000A1E  6E01               	movwf	strncmp@s1,c
   787  000A20  0E08               	movlw	high STR_2
   788  000A22  6E02               	movwf	strncmp@s1+1,c
   789  000A24  0E2B               	movlw	low main@part1
   790  000A26  6E03               	movwf	strncmp@s2,c
   791  000A28  0E00               	movlw	high main@part1
   792  000A2A  6E04               	movwf	strncmp@s2+1,c
   793  000A2C  0E00               	movlw	0
   794  000A2E  6E06               	movwf	strncmp@len+1,c
   795  000A30  0E10               	movlw	16
   796  000A32  6E05               	movwf	strncmp@len,c
   797  000A34  EC2B  F006         	call	_strncmp	;wreg free
   798  000A38  5001               	movf	?_strncmp,w,c
   799  000A3A  1002               	iorwf	?_strncmp+1,w,c
   800  000A3C  A4D8               	btfss	status,2,c
   801  000A3E  D003               	goto	l1467
   802                           
   803                           ;newmain.c: 304: PORTEbits.RE0 = 1;
   804  000A40  8084               	bsf	3972,0,c	;volatile
   805                           
   806                           ;newmain.c: 305: PORTEbits.RE2 = 0;
   807  000A42  9484               	bcf	3972,2,c	;volatile
   808                           
   809                           ;newmain.c: 306: }
   810  000A44  D014               	goto	l1471
   811  000A46                     l1467:
   812                           
   813                           ;newmain.c: 307: else if(strncmp("We hit Button 2!",part1,16) == 0){
   814  000A46  0E23               	movlw	low STR_3
   815  000A48  6E01               	movwf	strncmp@s1,c
   816  000A4A  0E08               	movlw	high STR_3
   817  000A4C  6E02               	movwf	strncmp@s1+1,c
   818  000A4E  0E2B               	movlw	low main@part1
   819  000A50  6E03               	movwf	strncmp@s2,c
   820  000A52  0E00               	movlw	high main@part1
   821  000A54  6E04               	movwf	strncmp@s2+1,c
   822  000A56  0E00               	movlw	0
   823  000A58  6E06               	movwf	strncmp@len+1,c
   824  000A5A  0E10               	movlw	16
   825  000A5C  6E05               	movwf	strncmp@len,c
   826  000A5E  EC2B  F006         	call	_strncmp	;wreg free
   827  000A62  5001               	movf	?_strncmp,w,c
   828  000A64  1002               	iorwf	?_strncmp+1,w,c
   829  000A66  A4D8               	btfss	status,2,c
   830  000A68  D002               	goto	l1471
   831                           
   832                           ;newmain.c: 308: PORTEbits.RE0 = 0;
   833  000A6A  9084               	bcf	3972,0,c	;volatile
   834                           
   835                           ;newmain.c: 309: PORTEbits.RE2 = 1;
   836  000A6C  8484               	bsf	3972,2,c	;volatile
   837  000A6E                     l1471:
   838                           
   839                           ;newmain.c: 310: }
   840                           ;newmain.c: 314: for(int i = 0; i < 16; i++){
   841  000A6E  0E00               	movlw	0
   842  000A70  6E5E               	movwf	main@i_549+1,c
   843  000A72  0E00               	movlw	0
   844  000A74  6E5D               	movwf	main@i_549,c
   845  000A76                     l1473:
   846  000A76  BE5E               	btfsc	main@i_549+1,7,c
   847  000A78  D006               	goto	l1477
   848  000A7A  505E               	movf	main@i_549+1,w,c
   849  000A7C  E11C               	bnz	l1491
   850  000A7E  0E10               	movlw	16
   851  000A80  5C5D               	subwf	main@i_549,w,c
   852  000A82  B0D8               	btfsc	status,0,c
   853  000A84  D018               	goto	l1491
   854  000A86                     l1477:
   855                           
   856                           ;newmain.c: 315: temp_char = read_char();
   857  000A86  ECC6  F007         	call	_read_char	;wreg free
   858  000A8A  6E5F               	movwf	main@temp_char,c
   859                           
   860                           ;newmain.c: 316: if(temp_char == '\r'){
   861  000A8C  0E0D               	movlw	13
   862  000A8E  185F               	xorwf	main@temp_char,w,c
   863  000A90  A4D8               	btfss	status,2,c
   864  000A92  D006               	goto	l1485
   865                           
   866                           ;newmain.c: 317: i--;
   867  000A94  065D               	decf	main@i_549,f,c
   868  000A96  A0D8               	btfss	status,0,c
   869  000A98  065E               	decf	main@i_549+1,f,c
   870                           
   871                           ;newmain.c: 318: read_char();
   872  000A9A  ECC6  F007         	call	_read_char	;wreg free
   873                           
   874                           ;newmain.c: 319: }
   875  000A9E  D008               	goto	l1487
   876  000AA0                     l1485:
   877                           
   878                           ;newmain.c: 320: else{
   879                           ;newmain.c: 321: part2[i] = temp_char;
   880  000AA0  0E3C               	movlw	low main@part2
   881  000AA2  245D               	addwf	main@i_549,w,c
   882  000AA4  6ED9               	movwf	fsr2l,c
   883  000AA6  0E00               	movlw	high main@part2
   884  000AA8  205E               	addwfc	main@i_549+1,w,c
   885  000AAA  6EDA               	movwf	fsr2h,c
   886  000AAC  C05F  FFDF         	movff	main@temp_char,indf2
   887  000AB0                     l1487:
   888  000AB0  4A5D               	infsnz	main@i_549,f,c
   889  000AB2  2A5E               	incf	main@i_549+1,f,c
   890  000AB4  D7E0               	goto	l1473
   891  000AB6                     l1491:
   892                           
   893                           ;newmain.c: 322: }
   894                           ;newmain.c: 323: }
   895                           ;newmain.c: 325: Lcd_Set_Cursor(2,1);
   896  000AB6  0E01               	movlw	1
   897  000AB8  6E04               	movwf	Lcd_Set_Cursor@b,c
   898  000ABA  0E02               	movlw	2
   899  000ABC  EC05  F007         	call	_Lcd_Set_Cursor
   900                           
   901                           ;newmain.c: 326: Lcd_Write_String(part2);
   902  000AC0  0E3C               	movlw	low main@part2
   903  000AC2  6E05               	movwf	Lcd_Write_String@a,c
   904  000AC4  0E00               	movlw	high main@part2
   905  000AC6  6E06               	movwf	Lcd_Write_String@a+1,c
   906  000AC8  EC6A  F006         	call	_Lcd_Write_String	;wreg free
   907                           
   908                           ;newmain.c: 328: if(strncmp("We hit Button 1!",part2,16) == 0){
   909  000ACC  0E12               	movlw	low STR_2
   910  000ACE  6E01               	movwf	strncmp@s1,c
   911  000AD0  0E08               	movlw	high STR_2
   912  000AD2  6E02               	movwf	strncmp@s1+1,c
   913  000AD4  0E3C               	movlw	low main@part2
   914  000AD6  6E03               	movwf	strncmp@s2,c
   915  000AD8  0E00               	movlw	high main@part2
   916  000ADA  6E04               	movwf	strncmp@s2+1,c
   917  000ADC  0E00               	movlw	0
   918  000ADE  6E06               	movwf	strncmp@len+1,c
   919  000AE0  0E10               	movlw	16
   920  000AE2  6E05               	movwf	strncmp@len,c
   921  000AE4  EC2B  F006         	call	_strncmp	;wreg free
   922  000AE8  5001               	movf	?_strncmp,w,c
   923  000AEA  1002               	iorwf	?_strncmp+1,w,c
   924  000AEC  A4D8               	btfss	status,2,c
   925  000AEE  D003               	goto	l1499
   926                           
   927                           ;newmain.c: 329: PORTEbits.RE0 = 0;
   928  000AF0  9084               	bcf	3972,0,c	;volatile
   929                           
   930                           ;newmain.c: 330: PORTEbits.RE2 = 1;
   931  000AF2  8484               	bsf	3972,2,c	;volatile
   932                           
   933                           ;newmain.c: 331: }
   934  000AF4  D762               	goto	l1437
   935  000AF6                     l1499:
   936                           
   937                           ;newmain.c: 332: else if(strncmp("We hit Button 2!",part2,16) == 0){
   938  000AF6  0E23               	movlw	low STR_3
   939  000AF8  6E01               	movwf	strncmp@s1,c
   940  000AFA  0E08               	movlw	high STR_3
   941  000AFC  6E02               	movwf	strncmp@s1+1,c
   942  000AFE  0E3C               	movlw	low main@part2
   943  000B00  6E03               	movwf	strncmp@s2,c
   944  000B02  0E00               	movlw	high main@part2
   945  000B04  6E04               	movwf	strncmp@s2+1,c
   946  000B06  0E00               	movlw	0
   947  000B08  6E06               	movwf	strncmp@len+1,c
   948  000B0A  0E10               	movlw	16
   949  000B0C  6E05               	movwf	strncmp@len,c
   950  000B0E  EC2B  F006         	call	_strncmp	;wreg free
   951  000B12  5001               	movf	?_strncmp,w,c
   952  000B14  1002               	iorwf	?_strncmp+1,w,c
   953  000B16  A4D8               	btfss	status,2,c
   954  000B18  D750               	goto	l1437
   955                           
   956                           ;newmain.c: 333: PORTEbits.RE0 = 1;
   957  000B1A  8084               	bsf	3972,0,c	;volatile
   958                           
   959                           ;newmain.c: 334: PORTEbits.RE2 = 0;
   960  000B1C  9484               	bcf	3972,2,c	;volatile
   961  000B1E  D74D               	goto	l1437
   962  000B20                     __end_of_main:
   963                           	opt stack 0
   964                           tblptru	equ	0xFF8
   965                           wreg	equ	0xFE8
   966                           indf2	equ	0xFDF
   967                           fsr2h	equ	0xFDA
   968                           fsr2l	equ	0xFD9
   969                           status	equ	0xFD8
   970                           
   971 ;; *************** function _strncmp *****************
   972 ;; Defined at:
   973 ;;		line 4 in file "/opt/microchip/xc8/v1.42/sources/common/strncmp.c"
   974 ;; Parameters:    Size  Location     Type
   975 ;;  s1              2    0[COMRAM] PTR const unsigned char 
   976 ;;		 -> STR_5(17), STR_4(17), STR_3(17), STR_2(17), 
   977 ;;  s2              2    2[COMRAM] PTR const unsigned char 
   978 ;;		 -> main@part2(17), main@part1(17), 
   979 ;;  len             2    4[COMRAM] unsigned int 
   980 ;; Auto vars:     Size  Location     Type
   981 ;;		None
   982 ;; Return value:  Size  Location     Type
   983 ;;                  2    0[COMRAM] int 
   984 ;; Registers used:
   985 ;;		wreg, fsr2l, fsr2h, status,2, status,0, tblptrl, tblptrh, tblptru
   986 ;; Tracked objects:
   987 ;;		On entry : 0/0
   988 ;;		On exit  : 0/0
   989 ;;		Unchanged: 0/0
   990 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
   991 ;;      Params:         6       0       0       0       0       0       0       0       0
   992 ;;      Locals:         0       0       0       0       0       0       0       0       0
   993 ;;      Temps:          2       0       0       0       0       0       0       0       0
   994 ;;      Totals:         8       0       0       0       0       0       0       0       0
   995 ;;Total ram usage:        8 bytes
   996 ;; Hardware stack levels used:    1
   997 ;; This function calls:
   998 ;;		Nothing
   999 ;; This function is called by:
  1000 ;;		_main
  1001 ;; This function uses a non-reentrant model
  1002 ;;
  1003                           
  1004                           	psect	text1
  1005  000C56                     __ptext1:
  1006                           	opt stack 0
  1007  000C56                     _strncmp:
  1008                           	opt stack 30
  1009                           
  1010                           ;incstack = 0
  1011  000C56  D031               	goto	l1345
  1012  000C58                     l1335:
  1013  000C58  C001  FFF6         	movff	strncmp@s1,tblptrl
  1014  000C5C  C002  FFF7         	movff	strncmp@s1+1,tblptrh
  1015  000C60                     	if	0	;tblptru may be non-zero
  1016  000C60                     	endif
  1017  000C60                     	if	0	;tblptru may be non-zero
  1018  000C60                     	endif
  1019  000C60  0008               	tblrd		*
  1020  000C62  50F5               	movf	tablat,w,c
  1021  000C64  0900               	iorlw	0
  1022  000C66  B4D8               	btfsc	status,2,c
  1023  000C68  D00D               	goto	l1339
  1024  000C6A  C003  FFD9         	movff	strncmp@s2,fsr2l
  1025  000C6E  C004  FFDA         	movff	strncmp@s2+1,fsr2h
  1026  000C72  C001  FFF6         	movff	strncmp@s1,tblptrl
  1027  000C76  C002  FFF7         	movff	strncmp@s1+1,tblptrh
  1028  000C7A                     	if	0	;tblptru may be non-zero
  1029  000C7A                     	endif
  1030  000C7A                     	if	0	;tblptru may be non-zero
  1031  000C7A                     	endif
  1032  000C7A  50DE               	movf	postinc2,w,c
  1033  000C7C  0009               	tblrd		*+
  1034  000C7E  18F5               	xorwf	tablat,w,c
  1035  000C80  B4D8               	btfsc	status,2,c
  1036  000C82  D017               	goto	l1343
  1037  000C84                     l1339:
  1038  000C84  C003  FFD9         	movff	strncmp@s2,fsr2l
  1039  000C88  C004  FFDA         	movff	strncmp@s2+1,fsr2h
  1040  000C8C  50DF               	movf	indf2,w,c
  1041  000C8E  6E07               	movwf	??_strncmp& (0+255),c
  1042  000C90  6A08               	clrf	(??_strncmp+1)& (0+255),c
  1043  000C92  1E07               	comf	??_strncmp,f,c
  1044  000C94  1E08               	comf	??_strncmp+1,f,c
  1045  000C96  4A07               	infsnz	??_strncmp,f,c
  1046  000C98  2A08               	incf	??_strncmp+1,f,c
  1047  000C9A  C001  FFF6         	movff	strncmp@s1,tblptrl
  1048  000C9E  C002  FFF7         	movff	strncmp@s1+1,tblptrh
  1049  000CA2                     	if	0	;tblptru may be non-zero
  1050  000CA2                     	endif
  1051  000CA2                     	if	0	;tblptru may be non-zero
  1052  000CA2                     	endif
  1053  000CA2  0008               	tblrd		*
  1054  000CA4  50F5               	movf	tablat,w,c
  1055  000CA6  2407               	addwf	??_strncmp,w,c
  1056  000CA8  6E01               	movwf	?_strncmp,c
  1057  000CAA  0E00               	movlw	0
  1058  000CAC  2008               	addwfc	??_strncmp+1,w,c
  1059  000CAE  6E02               	movwf	?_strncmp+1,c
  1060  000CB0  0012               	return	
  1061  000CB2                     l1343:
  1062  000CB2  4A01               	infsnz	strncmp@s1,f,c
  1063  000CB4  2A02               	incf	strncmp@s1+1,f,c
  1064  000CB6  4A03               	infsnz	strncmp@s2,f,c
  1065  000CB8  2A04               	incf	strncmp@s2+1,f,c
  1066  000CBA                     l1345:
  1067  000CBA  0605               	decf	strncmp@len,f,c
  1068  000CBC  A0D8               	btfss	status,0,c
  1069  000CBE  0606               	decf	strncmp@len+1,f,c
  1070  000CC0  2805               	incf	strncmp@len,w,c
  1071  000CC2  E1CA               	bnz	l1335
  1072  000CC4  2806               	incf	strncmp@len+1,w,c
  1073  000CC6  A4D8               	btfss	status,2,c
  1074  000CC8  D7C7               	goto	l1335
  1075  000CCA  0E00               	movlw	0
  1076  000CCC  6E02               	movwf	?_strncmp+1,c
  1077  000CCE  0E00               	movlw	0
  1078  000CD0  6E01               	movwf	?_strncmp,c
  1079  000CD2  0012               	return	
  1080  000CD4                     __end_of_strncmp:
  1081                           	opt stack 0
  1082                           tblptru	equ	0xFF8
  1083                           tblptrh	equ	0xFF7
  1084                           tblptrl	equ	0xFF6
  1085                           tablat	equ	0xFF5
  1086                           wreg	equ	0xFE8
  1087                           indf2	equ	0xFDF
  1088                           postinc2	equ	0xFDE
  1089                           fsr2h	equ	0xFDA
  1090                           fsr2l	equ	0xFD9
  1091                           status	equ	0xFD8
  1092                           
  1093 ;; *************** function _read_char *****************
  1094 ;; Defined at:
  1095 ;;		line 73 in file "newmain.c"
  1096 ;; Parameters:    Size  Location     Type
  1097 ;;		None
  1098 ;; Auto vars:     Size  Location     Type
  1099 ;;		None
  1100 ;; Return value:  Size  Location     Type
  1101 ;;                  1    wreg      unsigned char 
  1102 ;; Registers used:
  1103 ;;		wreg, status,2
  1104 ;; Tracked objects:
  1105 ;;		On entry : 0/0
  1106 ;;		On exit  : 0/0
  1107 ;;		Unchanged: 0/0
  1108 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1109 ;;      Params:         0       0       0       0       0       0       0       0       0
  1110 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1111 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1112 ;;      Totals:         0       0       0       0       0       0       0       0       0
  1113 ;;Total ram usage:        0 bytes
  1114 ;; Hardware stack levels used:    1
  1115 ;; This function calls:
  1116 ;;		Nothing
  1117 ;; This function is called by:
  1118 ;;		_main
  1119 ;;		_Transmit_String
  1120 ;;		_grab_16_from_serial
  1121 ;; This function uses a non-reentrant model
  1122 ;;
  1123                           
  1124                           	psect	text2
  1125  000F8C                     __ptext2:
  1126                           	opt stack 0
  1127  000F8C                     _read_char:
  1128                           	opt stack 30
  1129                           
  1130                           ;newmain.c: 75: while (PIR1bits.RCIF == 0){
  1131                           
  1132                           ;incstack = 0
  1133  000F8C  D005               	goto	l84
  1134  000F8E                     l85:
  1135                           
  1136                           ;newmain.c: 77: if (RCSTAbits.OERR == 1) {
  1137  000F8E  A2AB               	btfss	4011,1,c	;volatile
  1138  000F90  D003               	goto	l84
  1139                           
  1140                           ;newmain.c: 78: RCSTAbits.OERR = 0;
  1141  000F92  92AB               	bcf	4011,1,c	;volatile
  1142                           
  1143                           ;newmain.c: 79: RCSTAbits.CREN = 0;
  1144  000F94  98AB               	bcf	4011,4,c	;volatile
  1145                           
  1146                           ;newmain.c: 80: RCSTAbits.CREN = 1;
  1147  000F96  88AB               	bsf	4011,4,c	;volatile
  1148  000F98                     l84:
  1149  000F98  AA9E               	btfss	3998,5,c	;volatile
  1150  000F9A  D7F9               	goto	l85
  1151                           
  1152                           ;newmain.c: 81: }
  1153                           ;newmain.c: 82: }
  1154                           ;newmain.c: 83: return RCREG;
  1155  000F9C  50AE               	movf	4014,w,c	;volatile
  1156  000F9E  0012               	return	
  1157  000FA0                     __end_of_read_char:
  1158                           	opt stack 0
  1159                           tblptru	equ	0xFF8
  1160                           tblptrh	equ	0xFF7
  1161                           tblptrl	equ	0xFF6
  1162                           tablat	equ	0xFF5
  1163                           wreg	equ	0xFE8
  1164                           indf2	equ	0xFDF
  1165                           postinc2	equ	0xFDE
  1166                           fsr2h	equ	0xFDA
  1167                           fsr2l	equ	0xFD9
  1168                           status	equ	0xFD8
  1169                           
  1170 ;; *************** function _itoa *****************
  1171 ;; Defined at:
  1172 ;;		line 4 in file "/opt/microchip/xc8/v1.42/sources/common/itoa.c"
  1173 ;; Parameters:    Size  Location     Type
  1174 ;;  buf             2   16[COMRAM] PTR unsigned char 
  1175 ;;		 -> main@distance_str(16), 
  1176 ;;  val             2   18[COMRAM] int 
  1177 ;;  base            2   20[COMRAM] int 
  1178 ;; Auto vars:     Size  Location     Type
  1179 ;;  cp              2   22[COMRAM] PTR unsigned char 
  1180 ;;		 -> main@distance_str(16), 
  1181 ;; Return value:  Size  Location     Type
  1182 ;;                  2   16[COMRAM] PTR unsigned char 
  1183 ;; Registers used:
  1184 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1185 ;; Tracked objects:
  1186 ;;		On entry : 0/0
  1187 ;;		On exit  : 0/0
  1188 ;;		Unchanged: 0/0
  1189 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1190 ;;      Params:         6       0       0       0       0       0       0       0       0
  1191 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1192 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1193 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1194 ;;Total ram usage:        8 bytes
  1195 ;; Hardware stack levels used:    1
  1196 ;; Hardware stack levels required when called:    2
  1197 ;; This function calls:
  1198 ;;		_utoa
  1199 ;; This function is called by:
  1200 ;;		_main
  1201 ;; This function uses a non-reentrant model
  1202 ;;
  1203                           
  1204                           	psect	text3
  1205  000E5A                     __ptext3:
  1206                           	opt stack 0
  1207  000E5A                     _itoa:
  1208                           	opt stack 28
  1209                           
  1210                           ;incstack = 0
  1211  000E5A  C011  F017         	movff	itoa@buf,itoa@cp
  1212  000E5E  C012  F018         	movff	itoa@buf+1,itoa@cp+1
  1213  000E62  AE14               	btfss	itoa@val+1,7,c
  1214  000E64  D00C               	goto	l1329
  1215  000E66  C011  FFD9         	movff	itoa@buf,fsr2l
  1216  000E6A  C012  FFDA         	movff	itoa@buf+1,fsr2h
  1217  000E6E  0E2D               	movlw	45
  1218  000E70  6EDF               	movwf	indf2,c
  1219  000E72  4A11               	infsnz	itoa@buf,f,c
  1220  000E74  2A12               	incf	itoa@buf+1,f,c
  1221  000E76  6C13               	negf	itoa@val,c
  1222  000E78  1E14               	comf	itoa@val+1,f,c
  1223  000E7A  B0D8               	btfsc	status,0,c
  1224  000E7C  2A14               	incf	itoa@val+1,f,c
  1225  000E7E                     l1329:
  1226  000E7E  C011  F008         	movff	itoa@buf,utoa@buf
  1227  000E82  C012  F009         	movff	itoa@buf+1,utoa@buf+1
  1228  000E86  C013  F00A         	movff	itoa@val,utoa@val
  1229  000E8A  C014  F00B         	movff	itoa@val+1,utoa@val+1
  1230  000E8E  C015  F00C         	movff	itoa@base,utoa@base
  1231  000E92  C016  F00D         	movff	itoa@base+1,utoa@base+1
  1232  000E96  EC90  F005         	call	_utoa	;wreg free
  1233  000E9A  0012               	return	
  1234  000E9C                     __end_of_itoa:
  1235                           	opt stack 0
  1236                           tblptru	equ	0xFF8
  1237                           tblptrh	equ	0xFF7
  1238                           tblptrl	equ	0xFF6
  1239                           tablat	equ	0xFF5
  1240                           wreg	equ	0xFE8
  1241                           indf2	equ	0xFDF
  1242                           postinc2	equ	0xFDE
  1243                           fsr2h	equ	0xFDA
  1244                           fsr2l	equ	0xFD9
  1245                           status	equ	0xFD8
  1246                           
  1247 ;; *************** function _utoa *****************
  1248 ;; Defined at:
  1249 ;;		line 17 in file "/opt/microchip/xc8/v1.42/sources/common/itoa.c"
  1250 ;; Parameters:    Size  Location     Type
  1251 ;;  buf             2    7[COMRAM] PTR unsigned char 
  1252 ;;		 -> main@distance_str(16), 
  1253 ;;  val             2    9[COMRAM] unsigned int 
  1254 ;;  base            2   11[COMRAM] int 
  1255 ;; Auto vars:     Size  Location     Type
  1256 ;;  v               2   13[COMRAM] unsigned int 
  1257 ;;  c               1   15[COMRAM] unsigned char 
  1258 ;; Return value:  Size  Location     Type
  1259 ;;                  2    7[COMRAM] PTR unsigned char 
  1260 ;; Registers used:
  1261 ;;		wreg, fsr2l, fsr2h, status,2, status,0, cstack
  1262 ;; Tracked objects:
  1263 ;;		On entry : 0/0
  1264 ;;		On exit  : 0/0
  1265 ;;		Unchanged: 0/0
  1266 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1267 ;;      Params:         6       0       0       0       0       0       0       0       0
  1268 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1269 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1270 ;;      Totals:         9       0       0       0       0       0       0       0       0
  1271 ;;Total ram usage:        9 bytes
  1272 ;; Hardware stack levels used:    1
  1273 ;; Hardware stack levels required when called:    1
  1274 ;; This function calls:
  1275 ;;		___lwdiv
  1276 ;;		___lwmod
  1277 ;; This function is called by:
  1278 ;;		_itoa
  1279 ;; This function uses a non-reentrant model
  1280 ;;
  1281                           
  1282                           	psect	text4
  1283  000B20                     __ptext4:
  1284                           	opt stack 0
  1285  000B20                     _utoa:
  1286                           	opt stack 28
  1287                           
  1288                           ;incstack = 0
  1289  000B20  C00A  F00E         	movff	utoa@val,utoa@v
  1290  000B24  C00B  F00F         	movff	utoa@val+1,utoa@v+1
  1291  000B28                     l1255:
  1292  000B28  C00E  F001         	movff	utoa@v,___lwdiv@dividend
  1293  000B2C  C00F  F002         	movff	utoa@v+1,___lwdiv@dividend+1
  1294  000B30  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1295  000B34  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1296  000B38  ECDC  F006         	call	___lwdiv	;wreg free
  1297  000B3C  C001  F00E         	movff	?___lwdiv,utoa@v
  1298  000B40  C002  F00F         	movff	?___lwdiv+1,utoa@v+1
  1299  000B44  4A08               	infsnz	utoa@buf,f,c
  1300  000B46  2A09               	incf	utoa@buf+1,f,c
  1301  000B48  500E               	movf	utoa@v,w,c
  1302  000B4A  100F               	iorwf	utoa@v+1,w,c
  1303  000B4C  A4D8               	btfss	status,2,c
  1304  000B4E  D7EC               	goto	l1255
  1305  000B50  C008  FFD9         	movff	utoa@buf,fsr2l
  1306  000B54  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1307  000B58  0E00               	movlw	0
  1308  000B5A  6EDF               	movwf	indf2,c
  1309  000B5C  0608               	decf	utoa@buf,f,c
  1310  000B5E  A0D8               	btfss	status,0,c
  1311  000B60  0609               	decf	utoa@buf+1,f,c
  1312  000B62                     l1265:
  1313  000B62  C00A  F001         	movff	utoa@val,___lwmod@dividend
  1314  000B66  C00B  F002         	movff	utoa@val+1,___lwmod@dividend+1
  1315  000B6A  C00C  F003         	movff	utoa@base,___lwmod@divisor
  1316  000B6E  C00D  F004         	movff	utoa@base+1,___lwmod@divisor+1
  1317  000B72  EC4E  F007         	call	___lwmod	;wreg free
  1318  000B76  5001               	movf	?___lwmod,w,c
  1319  000B78  6E10               	movwf	utoa@c,c
  1320  000B7A  C00A  F001         	movff	utoa@val,___lwdiv@dividend
  1321  000B7E  C00B  F002         	movff	utoa@val+1,___lwdiv@dividend+1
  1322  000B82  C00C  F003         	movff	utoa@base,___lwdiv@divisor
  1323  000B86  C00D  F004         	movff	utoa@base+1,___lwdiv@divisor+1
  1324  000B8A  ECDC  F006         	call	___lwdiv	;wreg free
  1325  000B8E  C001  F00A         	movff	?___lwdiv,utoa@val
  1326  000B92  C002  F00B         	movff	?___lwdiv+1,utoa@val+1
  1327  000B96  0E09               	movlw	9
  1328  000B98  6410               	cpfsgt	utoa@c,c
  1329  000B9A  D002               	goto	l486
  1330  000B9C  0E07               	movlw	7
  1331  000B9E  2610               	addwf	utoa@c,f,c
  1332  000BA0                     l486:
  1333  000BA0  0E30               	movlw	48
  1334  000BA2  2610               	addwf	utoa@c,f,c
  1335  000BA4  C008  FFD9         	movff	utoa@buf,fsr2l
  1336  000BA8  C009  FFDA         	movff	utoa@buf+1,fsr2h
  1337  000BAC  C010  FFDF         	movff	utoa@c,indf2
  1338  000BB0  0608               	decf	utoa@buf,f,c
  1339  000BB2  A0D8               	btfss	status,0,c
  1340  000BB4  0609               	decf	utoa@buf+1,f,c
  1341  000BB6  500A               	movf	utoa@val,w,c
  1342  000BB8  100B               	iorwf	utoa@val+1,w,c
  1343  000BBA  A4D8               	btfss	status,2,c
  1344  000BBC  D7D2               	goto	l1265
  1345                           
  1346                           ;	Return value of _utoa is never used
  1347  000BBE  4A08               	infsnz	utoa@buf,f,c
  1348  000BC0  2A09               	incf	utoa@buf+1,f,c
  1349  000BC2  0012               	return	
  1350  000BC4                     __end_of_utoa:
  1351                           	opt stack 0
  1352                           tblptru	equ	0xFF8
  1353                           tblptrh	equ	0xFF7
  1354                           tblptrl	equ	0xFF6
  1355                           tablat	equ	0xFF5
  1356                           wreg	equ	0xFE8
  1357                           indf2	equ	0xFDF
  1358                           postinc2	equ	0xFDE
  1359                           fsr2h	equ	0xFDA
  1360                           fsr2l	equ	0xFD9
  1361                           status	equ	0xFD8
  1362                           
  1363 ;; *************** function ___lwmod *****************
  1364 ;; Defined at:
  1365 ;;		line 8 in file "/opt/microchip/xc8/v1.42/sources/common/lwmod.c"
  1366 ;; Parameters:    Size  Location     Type
  1367 ;;  dividend        2    0[COMRAM] unsigned int 
  1368 ;;  divisor         2    2[COMRAM] unsigned int 
  1369 ;; Auto vars:     Size  Location     Type
  1370 ;;  counter         1    4[COMRAM] unsigned char 
  1371 ;; Return value:  Size  Location     Type
  1372 ;;                  2    0[COMRAM] unsigned int 
  1373 ;; Registers used:
  1374 ;;		wreg, status,2, status,0
  1375 ;; Tracked objects:
  1376 ;;		On entry : 0/0
  1377 ;;		On exit  : 0/0
  1378 ;;		Unchanged: 0/0
  1379 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1380 ;;      Params:         4       0       0       0       0       0       0       0       0
  1381 ;;      Locals:         1       0       0       0       0       0       0       0       0
  1382 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1383 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1384 ;;Total ram usage:        5 bytes
  1385 ;; Hardware stack levels used:    1
  1386 ;; This function calls:
  1387 ;;		Nothing
  1388 ;; This function is called by:
  1389 ;;		_utoa
  1390 ;; This function uses a non-reentrant model
  1391 ;;
  1392                           
  1393                           	psect	text5
  1394  000E9C                     __ptext5:
  1395                           	opt stack 0
  1396  000E9C                     ___lwmod:
  1397                           	opt stack 28
  1398                           
  1399                           ;incstack = 0
  1400  000E9C  5003               	movf	___lwmod@divisor,w,c
  1401  000E9E  1004               	iorwf	___lwmod@divisor+1,w,c
  1402  000EA0  B4D8               	btfsc	status,2,c
  1403  000EA2  D018               	goto	l575
  1404  000EA4  0E01               	movlw	1
  1405  000EA6  6E05               	movwf	___lwmod@counter,c
  1406  000EA8  D004               	goto	l1237
  1407  000EAA                     l1235:
  1408  000EAA  90D8               	bcf	status,0,c
  1409  000EAC  3603               	rlcf	___lwmod@divisor,f,c
  1410  000EAE  3604               	rlcf	___lwmod@divisor+1,f,c
  1411  000EB0  2A05               	incf	___lwmod@counter,f,c
  1412  000EB2                     l1237:
  1413  000EB2  AE04               	btfss	___lwmod@divisor+1,7,c
  1414  000EB4  D7FA               	goto	l1235
  1415  000EB6                     l1239:
  1416  000EB6  5003               	movf	___lwmod@divisor,w,c
  1417  000EB8  5C01               	subwf	___lwmod@dividend,w,c
  1418  000EBA  5004               	movf	___lwmod@divisor+1,w,c
  1419  000EBC  5802               	subwfb	___lwmod@dividend+1,w,c
  1420  000EBE  A0D8               	btfss	status,0,c
  1421  000EC0  D004               	goto	l1243
  1422  000EC2  5003               	movf	___lwmod@divisor,w,c
  1423  000EC4  5E01               	subwf	___lwmod@dividend,f,c
  1424  000EC6  5004               	movf	___lwmod@divisor+1,w,c
  1425  000EC8  5A02               	subwfb	___lwmod@dividend+1,f,c
  1426  000ECA                     l1243:
  1427  000ECA  90D8               	bcf	status,0,c
  1428  000ECC  3204               	rrcf	___lwmod@divisor+1,f,c
  1429  000ECE  3203               	rrcf	___lwmod@divisor,f,c
  1430  000ED0  2E05               	decfsz	___lwmod@counter,f,c
  1431  000ED2  D7F1               	goto	l1239
  1432  000ED4                     l575:
  1433  000ED4  C001  F001         	movff	___lwmod@dividend,?___lwmod
  1434  000ED8  C002  F002         	movff	___lwmod@dividend+1,?___lwmod+1
  1435  000EDC  0012               	return		;funcret
  1436  000EDE                     __end_of___lwmod:
  1437                           	opt stack 0
  1438                           tblptru	equ	0xFF8
  1439                           tblptrh	equ	0xFF7
  1440                           tblptrl	equ	0xFF6
  1441                           tablat	equ	0xFF5
  1442                           wreg	equ	0xFE8
  1443                           indf2	equ	0xFDF
  1444                           postinc2	equ	0xFDE
  1445                           fsr2h	equ	0xFDA
  1446                           fsr2l	equ	0xFD9
  1447                           status	equ	0xFD8
  1448                           
  1449 ;; *************** function ___lwdiv *****************
  1450 ;; Defined at:
  1451 ;;		line 8 in file "/opt/microchip/xc8/v1.42/sources/common/lwdiv.c"
  1452 ;; Parameters:    Size  Location     Type
  1453 ;;  dividend        2    0[COMRAM] unsigned int 
  1454 ;;  divisor         2    2[COMRAM] unsigned int 
  1455 ;; Auto vars:     Size  Location     Type
  1456 ;;  quotient        2    4[COMRAM] unsigned int 
  1457 ;;  counter         1    6[COMRAM] unsigned char 
  1458 ;; Return value:  Size  Location     Type
  1459 ;;                  2    0[COMRAM] unsigned int 
  1460 ;; Registers used:
  1461 ;;		wreg, status,2, status,0
  1462 ;; Tracked objects:
  1463 ;;		On entry : 0/0
  1464 ;;		On exit  : 0/0
  1465 ;;		Unchanged: 0/0
  1466 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1467 ;;      Params:         4       0       0       0       0       0       0       0       0
  1468 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1469 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1470 ;;      Totals:         7       0       0       0       0       0       0       0       0
  1471 ;;Total ram usage:        7 bytes
  1472 ;; Hardware stack levels used:    1
  1473 ;; This function calls:
  1474 ;;		Nothing
  1475 ;; This function is called by:
  1476 ;;		_utoa
  1477 ;; This function uses a non-reentrant model
  1478 ;;
  1479                           
  1480                           	psect	text6
  1481  000DB8                     __ptext6:
  1482                           	opt stack 0
  1483  000DB8                     ___lwdiv:
  1484                           	opt stack 28
  1485                           
  1486                           ;incstack = 0
  1487  000DB8  0E00               	movlw	0
  1488  000DBA  6E06               	movwf	___lwdiv@quotient+1,c
  1489  000DBC  0E00               	movlw	0
  1490  000DBE  6E05               	movwf	___lwdiv@quotient,c
  1491  000DC0  5003               	movf	___lwdiv@divisor,w,c
  1492  000DC2  1004               	iorwf	___lwdiv@divisor+1,w,c
  1493  000DC4  B4D8               	btfsc	status,2,c
  1494  000DC6  D01C               	goto	l565
  1495  000DC8  0E01               	movlw	1
  1496  000DCA  6E07               	movwf	___lwdiv@counter,c
  1497  000DCC  D004               	goto	l1217
  1498  000DCE                     l1215:
  1499  000DCE  90D8               	bcf	status,0,c
  1500  000DD0  3603               	rlcf	___lwdiv@divisor,f,c
  1501  000DD2  3604               	rlcf	___lwdiv@divisor+1,f,c
  1502  000DD4  2A07               	incf	___lwdiv@counter,f,c
  1503  000DD6                     l1217:
  1504  000DD6  AE04               	btfss	___lwdiv@divisor+1,7,c
  1505  000DD8  D7FA               	goto	l1215
  1506  000DDA                     l1219:
  1507  000DDA  90D8               	bcf	status,0,c
  1508  000DDC  3605               	rlcf	___lwdiv@quotient,f,c
  1509  000DDE  3606               	rlcf	___lwdiv@quotient+1,f,c
  1510  000DE0  5003               	movf	___lwdiv@divisor,w,c
  1511  000DE2  5C01               	subwf	___lwdiv@dividend,w,c
  1512  000DE4  5004               	movf	___lwdiv@divisor+1,w,c
  1513  000DE6  5802               	subwfb	___lwdiv@dividend+1,w,c
  1514  000DE8  A0D8               	btfss	status,0,c
  1515  000DEA  D005               	goto	l1227
  1516  000DEC  5003               	movf	___lwdiv@divisor,w,c
  1517  000DEE  5E01               	subwf	___lwdiv@dividend,f,c
  1518  000DF0  5004               	movf	___lwdiv@divisor+1,w,c
  1519  000DF2  5A02               	subwfb	___lwdiv@dividend+1,f,c
  1520  000DF4  8005               	bsf	___lwdiv@quotient,0,c
  1521  000DF6                     l1227:
  1522  000DF6  90D8               	bcf	status,0,c
  1523  000DF8  3204               	rrcf	___lwdiv@divisor+1,f,c
  1524  000DFA  3203               	rrcf	___lwdiv@divisor,f,c
  1525  000DFC  2E07               	decfsz	___lwdiv@counter,f,c
  1526  000DFE  D7ED               	goto	l1219
  1527  000E00                     l565:
  1528  000E00  C005  F001         	movff	___lwdiv@quotient,?___lwdiv
  1529  000E04  C006  F002         	movff	___lwdiv@quotient+1,?___lwdiv+1
  1530  000E08  0012               	return		;funcret
  1531  000E0A                     __end_of___lwdiv:
  1532                           	opt stack 0
  1533                           tblptru	equ	0xFF8
  1534                           tblptrh	equ	0xFF7
  1535                           tblptrl	equ	0xFF6
  1536                           tablat	equ	0xFF5
  1537                           wreg	equ	0xFE8
  1538                           indf2	equ	0xFDF
  1539                           postinc2	equ	0xFDE
  1540                           fsr2h	equ	0xFDA
  1541                           fsr2l	equ	0xFD9
  1542                           status	equ	0xFD8
  1543                           
  1544 ;; *************** function _Set_LED *****************
  1545 ;; Defined at:
  1546 ;;		line 124 in file "newmain.c"
  1547 ;; Parameters:    Size  Location     Type
  1548 ;;  red_value       2    5[COMRAM] int 
  1549 ;;  blue_value      2    7[COMRAM] int 
  1550 ;;  green_value     2    9[COMRAM] int 
  1551 ;; Auto vars:     Size  Location     Type
  1552 ;;		None
  1553 ;; Return value:  Size  Location     Type
  1554 ;;                  1    wreg      void 
  1555 ;; Registers used:
  1556 ;;		wreg, status,2, status,0, cstack
  1557 ;; Tracked objects:
  1558 ;;		On entry : 0/0
  1559 ;;		On exit  : 0/0
  1560 ;;		Unchanged: 0/0
  1561 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1562 ;;      Params:         6       0       0       0       0       0       0       0       0
  1563 ;;      Locals:         0       0       0       0       0       0       0       0       0
  1564 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1565 ;;      Totals:         8       0       0       0       0       0       0       0       0
  1566 ;;Total ram usage:        8 bytes
  1567 ;; Hardware stack levels used:    1
  1568 ;; Hardware stack levels required when called:    1
  1569 ;; This function calls:
  1570 ;;		_var_delay_us
  1571 ;; This function is called by:
  1572 ;;		_main
  1573 ;; This function uses a non-reentrant model
  1574 ;;
  1575                           
  1576                           	psect	text7
  1577  000BC4                     __ptext7:
  1578                           	opt stack 0
  1579  000BC4                     _Set_LED:
  1580                           	opt stack 29
  1581                           
  1582                           ;newmain.c: 127: PORTEbits.RE0 = 1;
  1583                           
  1584                           ;incstack = 0
  1585  000BC4  8084               	bsf	3972,0,c	;volatile
  1586                           
  1587                           ;newmain.c: 128: var_delay_us(red_value);
  1588  000BC6  C006  F001         	movff	Set_LED@red_value,var_delay_us@us
  1589  000BCA  C007  F002         	movff	Set_LED@red_value+1,var_delay_us@us+1
  1590  000BCE  ECA1  F007         	call	_var_delay_us	;wreg free
  1591                           
  1592                           ;newmain.c: 129: PORTEbits.RE0 = 0;
  1593  000BD2  9084               	bcf	3972,0,c	;volatile
  1594                           
  1595                           ;newmain.c: 130: var_delay_us(256-red_value);
  1596  000BD4  C006  F00C         	movff	Set_LED@red_value,??_Set_LED
  1597  000BD8  C007  F00D         	movff	Set_LED@red_value+1,??_Set_LED+1
  1598  000BDC  1E0C               	comf	??_Set_LED,f,c
  1599  000BDE  1E0D               	comf	??_Set_LED+1,f,c
  1600  000BE0  4A0C               	infsnz	??_Set_LED,f,c
  1601  000BE2  2A0D               	incf	??_Set_LED+1,f,c
  1602  000BE4  0E00               	movlw	0
  1603  000BE6  240C               	addwf	??_Set_LED,w,c
  1604  000BE8  6E01               	movwf	var_delay_us@us,c
  1605  000BEA  0E01               	movlw	1
  1606  000BEC  200D               	addwfc	??_Set_LED+1,w,c
  1607  000BEE  6E02               	movwf	var_delay_us@us+1,c
  1608  000BF0  ECA1  F007         	call	_var_delay_us	;wreg free
  1609                           
  1610                           ;newmain.c: 133: PORTEbits.RE1 = 1;
  1611  000BF4  8284               	bsf	3972,1,c	;volatile
  1612                           
  1613                           ;newmain.c: 134: var_delay_us(green_value);
  1614  000BF6  C00A  F001         	movff	Set_LED@green_value,var_delay_us@us
  1615  000BFA  C00B  F002         	movff	Set_LED@green_value+1,var_delay_us@us+1
  1616  000BFE  ECA1  F007         	call	_var_delay_us	;wreg free
  1617                           
  1618                           ;newmain.c: 135: PORTEbits.RE1 = 0;
  1619  000C02  9284               	bcf	3972,1,c	;volatile
  1620                           
  1621                           ;newmain.c: 136: var_delay_us(256-green_value);
  1622  000C04  C00A  F00C         	movff	Set_LED@green_value,??_Set_LED
  1623  000C08  C00B  F00D         	movff	Set_LED@green_value+1,??_Set_LED+1
  1624  000C0C  1E0C               	comf	??_Set_LED,f,c
  1625  000C0E  1E0D               	comf	??_Set_LED+1,f,c
  1626  000C10  4A0C               	infsnz	??_Set_LED,f,c
  1627  000C12  2A0D               	incf	??_Set_LED+1,f,c
  1628  000C14  0E00               	movlw	0
  1629  000C16  240C               	addwf	??_Set_LED,w,c
  1630  000C18  6E01               	movwf	var_delay_us@us,c
  1631  000C1A  0E01               	movlw	1
  1632  000C1C  200D               	addwfc	??_Set_LED+1,w,c
  1633  000C1E  6E02               	movwf	var_delay_us@us+1,c
  1634  000C20  ECA1  F007         	call	_var_delay_us	;wreg free
  1635                           
  1636                           ;newmain.c: 139: PORTEbits.RE2 = 1;
  1637  000C24  8484               	bsf	3972,2,c	;volatile
  1638                           
  1639                           ;newmain.c: 140: var_delay_us(blue_value);
  1640  000C26  C008  F001         	movff	Set_LED@blue_value,var_delay_us@us
  1641  000C2A  C009  F002         	movff	Set_LED@blue_value+1,var_delay_us@us+1
  1642  000C2E  ECA1  F007         	call	_var_delay_us	;wreg free
  1643                           
  1644                           ;newmain.c: 141: PORTEbits.RE2 = 0;
  1645  000C32  9484               	bcf	3972,2,c	;volatile
  1646                           
  1647                           ;newmain.c: 142: var_delay_us(256 - blue_value);
  1648  000C34  C008  F00C         	movff	Set_LED@blue_value,??_Set_LED
  1649  000C38  C009  F00D         	movff	Set_LED@blue_value+1,??_Set_LED+1
  1650  000C3C  1E0C               	comf	??_Set_LED,f,c
  1651  000C3E  1E0D               	comf	??_Set_LED+1,f,c
  1652  000C40  4A0C               	infsnz	??_Set_LED,f,c
  1653  000C42  2A0D               	incf	??_Set_LED+1,f,c
  1654  000C44  0E00               	movlw	0
  1655  000C46  240C               	addwf	??_Set_LED,w,c
  1656  000C48  6E01               	movwf	var_delay_us@us,c
  1657  000C4A  0E01               	movlw	1
  1658  000C4C  200D               	addwfc	??_Set_LED+1,w,c
  1659  000C4E  6E02               	movwf	var_delay_us@us+1,c
  1660  000C50  ECA1  F007         	call	_var_delay_us	;wreg free
  1661  000C54  0012               	return		;funcret
  1662  000C56                     __end_of_Set_LED:
  1663                           	opt stack 0
  1664                           tblptru	equ	0xFF8
  1665                           tblptrh	equ	0xFF7
  1666                           tblptrl	equ	0xFF6
  1667                           tablat	equ	0xFF5
  1668                           wreg	equ	0xFE8
  1669                           indf2	equ	0xFDF
  1670                           postinc2	equ	0xFDE
  1671                           fsr2h	equ	0xFDA
  1672                           fsr2l	equ	0xFD9
  1673                           status	equ	0xFD8
  1674                           
  1675 ;; *************** function _var_delay_us *****************
  1676 ;; Defined at:
  1677 ;;		line 117 in file "newmain.c"
  1678 ;; Parameters:    Size  Location     Type
  1679 ;;  us              2    0[COMRAM] int 
  1680 ;; Auto vars:     Size  Location     Type
  1681 ;;  i               2    3[COMRAM] int 
  1682 ;; Return value:  Size  Location     Type
  1683 ;;                  1    wreg      void 
  1684 ;; Registers used:
  1685 ;;		wreg, status,2, status,0
  1686 ;; Tracked objects:
  1687 ;;		On entry : 0/0
  1688 ;;		On exit  : 0/0
  1689 ;;		Unchanged: 0/0
  1690 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1691 ;;      Params:         2       0       0       0       0       0       0       0       0
  1692 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1693 ;;      Temps:          1       0       0       0       0       0       0       0       0
  1694 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1695 ;;Total ram usage:        5 bytes
  1696 ;; Hardware stack levels used:    1
  1697 ;; This function calls:
  1698 ;;		Nothing
  1699 ;; This function is called by:
  1700 ;;		_Set_LED
  1701 ;; This function uses a non-reentrant model
  1702 ;;
  1703                           
  1704                           	psect	text8
  1705  000F42                     __ptext8:
  1706                           	opt stack 0
  1707  000F42                     _var_delay_us:
  1708                           	opt stack 29
  1709                           
  1710                           ;newmain.c: 118: for(int i=0; i<us;i++){
  1711                           
  1712                           ;incstack = 0
  1713  000F42  0E00               	movlw	0
  1714  000F44  6E05               	movwf	var_delay_us@i+1,c
  1715  000F46  0E00               	movlw	0
  1716  000F48  6E04               	movwf	var_delay_us@i,c
  1717  000F4A  D005               	goto	l1251
  1718  000F4C                     l101:
  1719                           
  1720                           ;newmain.c: 119: _delay((unsigned long)((1)*(20000000/4000000.0)));
  1721  000F4C  D000               	nop2		;2 cycle nop
  1722  000F4E  D000               	nop2		;2 cycle nop
  1723  000F50  F000               	nop	
  1724  000F52  4A04               	infsnz	var_delay_us@i,f,c
  1725  000F54  2A05               	incf	var_delay_us@i+1,f,c
  1726  000F56                     l1251:
  1727  000F56  5001               	movf	var_delay_us@us,w,c
  1728  000F58  5C04               	subwf	var_delay_us@i,w,c
  1729  000F5A  5005               	movf	var_delay_us@i+1,w,c
  1730  000F5C  0A80               	xorlw	128
  1731  000F5E  6E03               	movwf	??_var_delay_us& (0+255),c
  1732  000F60  5002               	movf	var_delay_us@us+1,w,c
  1733  000F62  0A80               	xorlw	128
  1734  000F64  5803               	subwfb	??_var_delay_us& (0+255),w,c
  1735  000F66  B0D8               	btfsc	status,0,c
  1736  000F68  0012               	return	
  1737  000F6A  D7F0               	goto	l101
  1738  000F6C                     __end_of_var_delay_us:
  1739                           	opt stack 0
  1740                           tblptru	equ	0xFF8
  1741                           tblptrh	equ	0xFF7
  1742                           tblptrl	equ	0xFF6
  1743                           tablat	equ	0xFF5
  1744                           wreg	equ	0xFE8
  1745                           indf2	equ	0xFDF
  1746                           postinc2	equ	0xFDE
  1747                           fsr2h	equ	0xFDA
  1748                           fsr2l	equ	0xFD9
  1749                           status	equ	0xFD8
  1750                           
  1751 ;; *************** function _Lcd_Write_String *****************
  1752 ;; Defined at:
  1753 ;;		line 96 in file "lcd.h"
  1754 ;; Parameters:    Size  Location     Type
  1755 ;;  a               2    4[COMRAM] PTR unsigned char 
  1756 ;;		 -> main@part2(17), main@part1(17), main@distance_str(16), STR_1(17), 
  1757 ;; Auto vars:     Size  Location     Type
  1758 ;;  i               2    8[COMRAM] int 
  1759 ;; Return value:  Size  Location     Type
  1760 ;;                  1    wreg      void 
  1761 ;; Registers used:
  1762 ;;		wreg, fsr0l, fsr0h, status,2, status,0, tblptrl, tblptrh, tblptru, cstack
  1763 ;; Tracked objects:
  1764 ;;		On entry : 0/0
  1765 ;;		On exit  : 0/0
  1766 ;;		Unchanged: 0/0
  1767 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1768 ;;      Params:         2       0       0       0       0       0       0       0       0
  1769 ;;      Locals:         2       0       0       0       0       0       0       0       0
  1770 ;;      Temps:          2       0       0       0       0       0       0       0       0
  1771 ;;      Totals:         6       0       0       0       0       0       0       0       0
  1772 ;;Total ram usage:        6 bytes
  1773 ;; Hardware stack levels used:    1
  1774 ;; Hardware stack levels required when called:    2
  1775 ;; This function calls:
  1776 ;;		_Lcd_Write_Char
  1777 ;; This function is called by:
  1778 ;;		_main
  1779 ;; This function uses a non-reentrant model
  1780 ;;
  1781                           
  1782                           	psect	text9
  1783  000CD4                     __ptext9:
  1784                           	opt stack 0
  1785  000CD4                     _Lcd_Write_String:
  1786                           	opt stack 28
  1787                           
  1788                           ;lcd.h: 98: int i;
  1789                           ;lcd.h: 99: for(i=0;a[i]!='\0';i++)
  1790                           
  1791                           ;incstack = 0
  1792  000CD4  0E00               	movlw	0
  1793  000CD6  6E0A               	movwf	Lcd_Write_String@i+1,c
  1794  000CD8  0E00               	movlw	0
  1795  000CDA  6E09               	movwf	Lcd_Write_String@i,c
  1796  000CDC  D01A               	goto	l1305
  1797  000CDE                     l1301:
  1798                           
  1799                           ;lcd.h: 100: Lcd_Write_Char(a[i]);
  1800  000CDE  5009               	movf	Lcd_Write_String@i,w,c
  1801  000CE0  2405               	addwf	Lcd_Write_String@a,w,c
  1802  000CE2  6E07               	movwf	??_Lcd_Write_String& (0+255),c
  1803  000CE4  500A               	movf	Lcd_Write_String@i+1,w,c
  1804  000CE6  2006               	addwfc	Lcd_Write_String@a+1,w,c
  1805  000CE8  6E08               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  1806  000CEA  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1807  000CEE  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1808  000CF2  6AF8               	clrf	tblptru,c
  1809  000CF4  0E07               	movlw	(high __ramtop+-1)
  1810  000CF6  64F7               	cpfsgt	tblptrh,c
  1811  000CF8  D003               	bra	u587
  1812  000CFA  0008               	tblrd		*
  1813  000CFC  50F5               	movf	tablat,w,c
  1814  000CFE  D005               	bra	u580
  1815  000D00                     u587:
  1816  000D00  CFF6 FFE9          	movff	tblptrl,fsr0l
  1817  000D04  CFF7 FFEA          	movff	tblptrh,fsr0h
  1818  000D08  50EF               	movf	indf0,w,c
  1819  000D0A                     u580:
  1820  000D0A  EC6F  F007         	call	_Lcd_Write_Char
  1821  000D0E  4A09               	infsnz	Lcd_Write_String@i,f,c
  1822  000D10  2A0A               	incf	Lcd_Write_String@i+1,f,c
  1823  000D12                     l1305:
  1824  000D12  5009               	movf	Lcd_Write_String@i,w,c
  1825  000D14  2405               	addwf	Lcd_Write_String@a,w,c
  1826  000D16  6E07               	movwf	??_Lcd_Write_String& (0+255),c
  1827  000D18  500A               	movf	Lcd_Write_String@i+1,w,c
  1828  000D1A  2006               	addwfc	Lcd_Write_String@a+1,w,c
  1829  000D1C  6E08               	movwf	(??_Lcd_Write_String+1)& (0+255),c
  1830  000D1E  C007  FFF6         	movff	??_Lcd_Write_String,tblptrl
  1831  000D22  C008  FFF7         	movff	??_Lcd_Write_String+1,tblptrh
  1832  000D26  6AF8               	clrf	tblptru,c
  1833  000D28  0E07               	movlw	(high __ramtop+-1)
  1834  000D2A  64F7               	cpfsgt	tblptrh,c
  1835  000D2C  D003               	bra	u597
  1836  000D2E  0008               	tblrd		*
  1837  000D30  50F5               	movf	tablat,w,c
  1838  000D32  D005               	bra	u590
  1839  000D34                     u597:
  1840  000D34  CFF6 FFE9          	movff	tblptrl,fsr0l
  1841  000D38  CFF7 FFEA          	movff	tblptrh,fsr0h
  1842  000D3C  50EF               	movf	indf0,w,c
  1843  000D3E                     u590:
  1844  000D3E  0900               	iorlw	0
  1845  000D40  B4D8               	btfsc	status,2,c
  1846  000D42  0012               	return	
  1847  000D44  D7CC               	goto	l1301
  1848  000D46                     __end_of_Lcd_Write_String:
  1849                           	opt stack 0
  1850                           tblptru	equ	0xFF8
  1851                           tblptrh	equ	0xFF7
  1852                           tblptrl	equ	0xFF6
  1853                           tablat	equ	0xFF5
  1854                           indf0	equ	0xFEF
  1855                           fsr0h	equ	0xFEA
  1856                           fsr0l	equ	0xFE9
  1857                           wreg	equ	0xFE8
  1858                           indf2	equ	0xFDF
  1859                           postinc2	equ	0xFDE
  1860                           fsr2h	equ	0xFDA
  1861                           fsr2l	equ	0xFD9
  1862                           status	equ	0xFD8
  1863                           
  1864 ;; *************** function _Lcd_Write_Char *****************
  1865 ;; Defined at:
  1866 ;;		line 80 in file "lcd.h"
  1867 ;; Parameters:    Size  Location     Type
  1868 ;;  a               1    wreg     unsigned char 
  1869 ;; Auto vars:     Size  Location     Type
  1870 ;;  a               1    3[COMRAM] unsigned char 
  1871 ;;  y               1    2[COMRAM] unsigned char 
  1872 ;;  temp            1    1[COMRAM] unsigned char 
  1873 ;; Return value:  Size  Location     Type
  1874 ;;                  2   68[None  ] int 
  1875 ;; Registers used:
  1876 ;;		wreg, status,2, status,0, cstack
  1877 ;; Tracked objects:
  1878 ;;		On entry : 0/0
  1879 ;;		On exit  : 0/0
  1880 ;;		Unchanged: 0/0
  1881 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1882 ;;      Params:         0       0       0       0       0       0       0       0       0
  1883 ;;      Locals:         3       0       0       0       0       0       0       0       0
  1884 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1885 ;;      Totals:         3       0       0       0       0       0       0       0       0
  1886 ;;Total ram usage:        3 bytes
  1887 ;; Hardware stack levels used:    1
  1888 ;; Hardware stack levels required when called:    1
  1889 ;; This function calls:
  1890 ;;		_Lcd_Port
  1891 ;; This function is called by:
  1892 ;;		_Lcd_Write_String
  1893 ;;		_Transmit_String
  1894 ;; This function uses a non-reentrant model
  1895 ;;
  1896                           
  1897                           	psect	text10
  1898  000EDE                     __ptext10:
  1899                           	opt stack 0
  1900  000EDE                     _Lcd_Write_Char:
  1901                           	opt stack 28
  1902                           
  1903                           ;incstack = 0
  1904                           ;Lcd_Write_Char@a stored from wreg
  1905  000EDE  6E04               	movwf	Lcd_Write_Char@a,c
  1906                           
  1907                           ;lcd.h: 82: char temp,y;
  1908                           ;lcd.h: 83: temp = a&0x0F;
  1909  000EE0  5004               	movf	Lcd_Write_Char@a,w,c
  1910  000EE2  0B0F               	andlw	15
  1911  000EE4  6E02               	movwf	Lcd_Write_Char@temp,c
  1912                           
  1913                           ;lcd.h: 84: y = a&0xF0;
  1914  000EE6  5004               	movf	Lcd_Write_Char@a,w,c
  1915  000EE8  0BF0               	andlw	240
  1916  000EEA  6E03               	movwf	Lcd_Write_Char@y,c
  1917                           
  1918                           ;lcd.h: 85: PORTDbits.RD2 = 1;
  1919  000EEC  8483               	bsf	3971,2,c	;volatile
  1920                           
  1921                           ;lcd.h: 86: Lcd_Port(y>>4);
  1922  000EEE  3803               	swapf	Lcd_Write_Char@y,w,c
  1923  000EF0  0B0F               	andlw	15
  1924  000EF2  EC8B  F007         	call	_Lcd_Port
  1925                           
  1926                           ;lcd.h: 87: PORTDbits.RD3 = 1;
  1927  000EF6  8683               	bsf	3971,3,c	;volatile
  1928                           
  1929                           ;lcd.h: 88: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1930  000EF8  0E42               	movlw	66
  1931  000EFA                     u847:
  1932  000EFA  2EE8               	decfsz	wreg,f,c
  1933  000EFC  D7FE               	bra	u847
  1934  000EFE  D000               	nop2	
  1935                           
  1936                           ;lcd.h: 89: PORTDbits.RD3 = 0;
  1937  000F00  9683               	bcf	3971,3,c	;volatile
  1938                           
  1939                           ;lcd.h: 90: Lcd_Port(temp);
  1940  000F02  5002               	movf	Lcd_Write_Char@temp,w,c
  1941  000F04  EC8B  F007         	call	_Lcd_Port
  1942                           
  1943                           ;lcd.h: 91: PORTDbits.RD3 = 1;
  1944  000F08  8683               	bsf	3971,3,c	;volatile
  1945                           
  1946                           ;lcd.h: 92: _delay((unsigned long)((40)*(20000000/4000000.0)));
  1947  000F0A  0E42               	movlw	66
  1948  000F0C                     u857:
  1949  000F0C  2EE8               	decfsz	wreg,f,c
  1950  000F0E  D7FE               	bra	u857
  1951  000F10  D000               	nop2	
  1952                           
  1953                           ;lcd.h: 93: PORTDbits.RD3 = 0;
  1954  000F12  9683               	bcf	3971,3,c	;volatile
  1955  000F14  0012               	return		;funcret
  1956  000F16                     __end_of_Lcd_Write_Char:
  1957                           	opt stack 0
  1958                           tblptru	equ	0xFF8
  1959                           tblptrh	equ	0xFF7
  1960                           tblptrl	equ	0xFF6
  1961                           tablat	equ	0xFF5
  1962                           indf0	equ	0xFEF
  1963                           fsr0h	equ	0xFEA
  1964                           fsr0l	equ	0xFE9
  1965                           wreg	equ	0xFE8
  1966                           indf2	equ	0xFDF
  1967                           postinc2	equ	0xFDE
  1968                           fsr2h	equ	0xFDA
  1969                           fsr2l	equ	0xFD9
  1970                           status	equ	0xFD8
  1971                           
  1972 ;; *************** function _Lcd_Set_Cursor *****************
  1973 ;; Defined at:
  1974 ;;		line 40 in file "lcd.h"
  1975 ;; Parameters:    Size  Location     Type
  1976 ;;  a               1    wreg     unsigned char 
  1977 ;;  b               1    3[COMRAM] unsigned char 
  1978 ;; Auto vars:     Size  Location     Type
  1979 ;;  a               1    4[COMRAM] unsigned char 
  1980 ;;  temp            1    7[COMRAM] unsigned char 
  1981 ;;  y               1    6[COMRAM] unsigned char 
  1982 ;;  z               1    5[COMRAM] unsigned char 
  1983 ;; Return value:  Size  Location     Type
  1984 ;;                  1    wreg      void 
  1985 ;; Registers used:
  1986 ;;		wreg, status,2, status,0, cstack
  1987 ;; Tracked objects:
  1988 ;;		On entry : 0/0
  1989 ;;		On exit  : 0/0
  1990 ;;		Unchanged: 0/0
  1991 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  1992 ;;      Params:         1       0       0       0       0       0       0       0       0
  1993 ;;      Locals:         4       0       0       0       0       0       0       0       0
  1994 ;;      Temps:          0       0       0       0       0       0       0       0       0
  1995 ;;      Totals:         5       0       0       0       0       0       0       0       0
  1996 ;;Total ram usage:        5 bytes
  1997 ;; Hardware stack levels used:    1
  1998 ;; Hardware stack levels required when called:    2
  1999 ;; This function calls:
  2000 ;;		_Lcd_Cmd
  2001 ;; This function is called by:
  2002 ;;		_main
  2003 ;; This function uses a non-reentrant model
  2004 ;;
  2005                           
  2006                           	psect	text11
  2007  000E0A                     __ptext11:
  2008                           	opt stack 0
  2009  000E0A                     _Lcd_Set_Cursor:
  2010                           	opt stack 28
  2011                           
  2012                           ;incstack = 0
  2013                           ;Lcd_Set_Cursor@a stored from wreg
  2014  000E0A  6E05               	movwf	Lcd_Set_Cursor@a,c
  2015                           
  2016                           ;lcd.h: 42: char temp,z,y;
  2017                           ;lcd.h: 43: if(a == 1)
  2018  000E0C  0405               	decf	Lcd_Set_Cursor@a,w,c
  2019  000E0E  A4D8               	btfss	status,2,c
  2020  000E10  D010               	goto	l1291
  2021                           
  2022                           ;lcd.h: 44: {
  2023                           ;lcd.h: 45: temp = 0x80 + b - 1;
  2024  000E12  5004               	movf	Lcd_Set_Cursor@b,w,c
  2025  000E14  0F7F               	addlw	127
  2026  000E16  6E08               	movwf	Lcd_Set_Cursor@temp,c
  2027                           
  2028                           ;lcd.h: 46: z = temp>>4;
  2029  000E18  3808               	swapf	Lcd_Set_Cursor@temp,w,c
  2030  000E1A  0B0F               	andlw	15
  2031  000E1C  6E06               	movwf	Lcd_Set_Cursor@z,c
  2032                           
  2033                           ;lcd.h: 47: y = temp & 0x0F;
  2034  000E1E  5008               	movf	Lcd_Set_Cursor@temp,w,c
  2035  000E20  0B0F               	andlw	15
  2036  000E22  6E07               	movwf	Lcd_Set_Cursor@y,c
  2037                           
  2038                           ;lcd.h: 48: Lcd_Cmd(z);
  2039  000E24  5006               	movf	Lcd_Set_Cursor@z,w,c
  2040  000E26  ECB6  F007         	call	_Lcd_Cmd
  2041                           
  2042                           ;lcd.h: 49: Lcd_Cmd(y);
  2043  000E2A  5007               	movf	Lcd_Set_Cursor@y,w,c
  2044  000E2C  ECB6  F007         	call	_Lcd_Cmd
  2045                           
  2046                           ;lcd.h: 50: }
  2047  000E30  0012               	return	
  2048  000E32                     l1291:
  2049                           
  2050                           ;lcd.h: 51: else if(a == 2)
  2051  000E32  0E02               	movlw	2
  2052  000E34  1805               	xorwf	Lcd_Set_Cursor@a,w,c
  2053  000E36  A4D8               	btfss	status,2,c
  2054  000E38  0012               	return	
  2055                           
  2056                           ;lcd.h: 52: {
  2057                           ;lcd.h: 53: temp = 0xC0 + b - 1;
  2058  000E3A  5004               	movf	Lcd_Set_Cursor@b,w,c
  2059  000E3C  0FBF               	addlw	191
  2060  000E3E  6E08               	movwf	Lcd_Set_Cursor@temp,c
  2061                           
  2062                           ;lcd.h: 54: z = temp>>4;
  2063  000E40  3808               	swapf	Lcd_Set_Cursor@temp,w,c
  2064  000E42  0B0F               	andlw	15
  2065  000E44  6E06               	movwf	Lcd_Set_Cursor@z,c
  2066                           
  2067                           ;lcd.h: 55: y = temp & 0x0F;
  2068  000E46  5008               	movf	Lcd_Set_Cursor@temp,w,c
  2069  000E48  0B0F               	andlw	15
  2070  000E4A  6E07               	movwf	Lcd_Set_Cursor@y,c
  2071                           
  2072                           ;lcd.h: 56: Lcd_Cmd(z);
  2073  000E4C  5006               	movf	Lcd_Set_Cursor@z,w,c
  2074  000E4E  ECB6  F007         	call	_Lcd_Cmd
  2075                           
  2076                           ;lcd.h: 57: Lcd_Cmd(y);
  2077  000E52  5007               	movf	Lcd_Set_Cursor@y,w,c
  2078  000E54  ECB6  F007         	call	_Lcd_Cmd
  2079  000E58  0012               	return	
  2080  000E5A                     __end_of_Lcd_Set_Cursor:
  2081                           	opt stack 0
  2082                           tblptru	equ	0xFF8
  2083                           tblptrh	equ	0xFF7
  2084                           tblptrl	equ	0xFF6
  2085                           tablat	equ	0xFF5
  2086                           indf0	equ	0xFEF
  2087                           fsr0h	equ	0xFEA
  2088                           fsr0l	equ	0xFE9
  2089                           wreg	equ	0xFE8
  2090                           indf2	equ	0xFDF
  2091                           postinc2	equ	0xFDE
  2092                           fsr2h	equ	0xFDA
  2093                           fsr2l	equ	0xFD9
  2094                           status	equ	0xFD8
  2095                           
  2096 ;; *************** function _Lcd_Init *****************
  2097 ;; Defined at:
  2098 ;;		line 61 in file "lcd.h"
  2099 ;; Parameters:    Size  Location     Type
  2100 ;;		None
  2101 ;; Auto vars:     Size  Location     Type
  2102 ;;		None
  2103 ;; Return value:  Size  Location     Type
  2104 ;;                  1    wreg      void 
  2105 ;; Registers used:
  2106 ;;		wreg, status,2, cstack
  2107 ;; Tracked objects:
  2108 ;;		On entry : 0/0
  2109 ;;		On exit  : 0/0
  2110 ;;		Unchanged: 0/0
  2111 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2112 ;;      Params:         0       0       0       0       0       0       0       0       0
  2113 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2114 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2115 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2116 ;;Total ram usage:        1 bytes
  2117 ;; Hardware stack levels used:    1
  2118 ;; Hardware stack levels required when called:    2
  2119 ;; This function calls:
  2120 ;;		_Lcd_Cmd
  2121 ;;		_Lcd_Port
  2122 ;; This function is called by:
  2123 ;;		_main
  2124 ;; This function uses a non-reentrant model
  2125 ;;
  2126                           
  2127                           	psect	text12
  2128  000D46                     __ptext12:
  2129                           	opt stack 0
  2130  000D46                     _Lcd_Init:
  2131                           	opt stack 28
  2132                           
  2133                           ;lcd.h: 63: Lcd_Port(0x00);
  2134                           
  2135                           ;incstack = 0
  2136  000D46  0E00               	movlw	0
  2137  000D48  EC8B  F007         	call	_Lcd_Port
  2138                           
  2139                           ;lcd.h: 64: _delay((unsigned long)((20)*(20000000/4000.0)));
  2140  000D4C  0E82               	movlw	130
  2141  000D4E  6E04               	movwf	??_Lcd_Init& (0+255),c
  2142  000D50  0EDE               	movlw	222
  2143  000D52                     u867:
  2144  000D52  2EE8               	decfsz	wreg,f,c
  2145  000D54  D7FE               	bra	u867
  2146  000D56  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  2147  000D58  D7FC               	bra	u867
  2148                           
  2149                           ;lcd.h: 65: Lcd_Cmd(0x03);
  2150  000D5A  0E03               	movlw	3
  2151  000D5C  ECB6  F007         	call	_Lcd_Cmd
  2152                           
  2153                           ;lcd.h: 66: _delay((unsigned long)((5)*(20000000/4000.0)));
  2154  000D60  0E21               	movlw	33
  2155  000D62  6E04               	movwf	??_Lcd_Init& (0+255),c
  2156  000D64  0E76               	movlw	118
  2157  000D66                     u877:
  2158  000D66  2EE8               	decfsz	wreg,f,c
  2159  000D68  D7FE               	bra	u877
  2160  000D6A  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  2161  000D6C  D7FC               	bra	u877
  2162  000D6E  D000               	nop2	
  2163                           
  2164                           ;lcd.h: 67: Lcd_Cmd(0x03);
  2165  000D70  0E03               	movlw	3
  2166  000D72  ECB6  F007         	call	_Lcd_Cmd
  2167                           
  2168                           ;lcd.h: 68: _delay((unsigned long)((11)*(20000000/4000.0)));
  2169  000D76  0E48               	movlw	72
  2170  000D78  6E04               	movwf	??_Lcd_Init& (0+255),c
  2171  000D7A  0E6C               	movlw	108
  2172  000D7C                     u887:
  2173  000D7C  2EE8               	decfsz	wreg,f,c
  2174  000D7E  D7FE               	bra	u887
  2175  000D80  2E04               	decfsz	??_Lcd_Init& (0+255),f,c
  2176  000D82  D7FC               	bra	u887
  2177  000D84  D000               	nop2	
  2178                           
  2179                           ;lcd.h: 69: Lcd_Cmd(0x03);
  2180  000D86  0E03               	movlw	3
  2181  000D88  ECB6  F007         	call	_Lcd_Cmd
  2182                           
  2183                           ;lcd.h: 71: Lcd_Cmd(0x02);
  2184  000D8C  0E02               	movlw	2
  2185  000D8E  ECB6  F007         	call	_Lcd_Cmd
  2186                           
  2187                           ;lcd.h: 72: Lcd_Cmd(0x02);
  2188  000D92  0E02               	movlw	2
  2189  000D94  ECB6  F007         	call	_Lcd_Cmd
  2190                           
  2191                           ;lcd.h: 73: Lcd_Cmd(0x08);
  2192  000D98  0E08               	movlw	8
  2193  000D9A  ECB6  F007         	call	_Lcd_Cmd
  2194                           
  2195                           ;lcd.h: 74: Lcd_Cmd(0x00);
  2196  000D9E  0E00               	movlw	0
  2197  000DA0  ECB6  F007         	call	_Lcd_Cmd
  2198                           
  2199                           ;lcd.h: 75: Lcd_Cmd(0x0C);
  2200  000DA4  0E0C               	movlw	12
  2201  000DA6  ECB6  F007         	call	_Lcd_Cmd
  2202                           
  2203                           ;lcd.h: 76: Lcd_Cmd(0x00);
  2204  000DAA  0E00               	movlw	0
  2205  000DAC  ECB6  F007         	call	_Lcd_Cmd
  2206                           
  2207                           ;lcd.h: 77: Lcd_Cmd(0x06);
  2208  000DB0  0E06               	movlw	6
  2209  000DB2  ECB6  F007         	call	_Lcd_Cmd
  2210  000DB6  0012               	return		;funcret
  2211  000DB8                     __end_of_Lcd_Init:
  2212                           	opt stack 0
  2213                           tblptru	equ	0xFF8
  2214                           tblptrh	equ	0xFF7
  2215                           tblptrl	equ	0xFF6
  2216                           tablat	equ	0xFF5
  2217                           indf0	equ	0xFEF
  2218                           fsr0h	equ	0xFEA
  2219                           fsr0l	equ	0xFE9
  2220                           wreg	equ	0xFE8
  2221                           indf2	equ	0xFDF
  2222                           postinc2	equ	0xFDE
  2223                           fsr2h	equ	0xFDA
  2224                           fsr2l	equ	0xFD9
  2225                           status	equ	0xFD8
  2226                           
  2227 ;; *************** function _Lcd_Clear *****************
  2228 ;; Defined at:
  2229 ;;		line 34 in file "lcd.h"
  2230 ;; Parameters:    Size  Location     Type
  2231 ;;		None
  2232 ;; Auto vars:     Size  Location     Type
  2233 ;;		None
  2234 ;; Return value:  Size  Location     Type
  2235 ;;                  1    wreg      void 
  2236 ;; Registers used:
  2237 ;;		wreg, status,2, cstack
  2238 ;; Tracked objects:
  2239 ;;		On entry : 0/0
  2240 ;;		On exit  : 0/0
  2241 ;;		Unchanged: 0/0
  2242 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2243 ;;      Params:         0       0       0       0       0       0       0       0       0
  2244 ;;      Locals:         0       0       0       0       0       0       0       0       0
  2245 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2246 ;;      Totals:         0       0       0       0       0       0       0       0       0
  2247 ;;Total ram usage:        0 bytes
  2248 ;; Hardware stack levels used:    1
  2249 ;; Hardware stack levels required when called:    2
  2250 ;; This function calls:
  2251 ;;		_Lcd_Cmd
  2252 ;; This function is called by:
  2253 ;;		_main
  2254 ;; This function uses a non-reentrant model
  2255 ;;
  2256                           
  2257                           	psect	text13
  2258  000FA0                     __ptext13:
  2259                           	opt stack 0
  2260  000FA0                     _Lcd_Clear:
  2261                           	opt stack 28
  2262                           
  2263                           ;lcd.h: 36: Lcd_Cmd(0);
  2264                           
  2265                           ;incstack = 0
  2266  000FA0  0E00               	movlw	0
  2267  000FA2  ECB6  F007         	call	_Lcd_Cmd
  2268                           
  2269                           ;lcd.h: 37: Lcd_Cmd(1);
  2270  000FA6  0E01               	movlw	1
  2271  000FA8  ECB6  F007         	call	_Lcd_Cmd
  2272  000FAC  0012               	return		;funcret
  2273  000FAE                     __end_of_Lcd_Clear:
  2274                           	opt stack 0
  2275                           tblptru	equ	0xFF8
  2276                           tblptrh	equ	0xFF7
  2277                           tblptrl	equ	0xFF6
  2278                           tablat	equ	0xFF5
  2279                           indf0	equ	0xFEF
  2280                           fsr0h	equ	0xFEA
  2281                           fsr0l	equ	0xFE9
  2282                           wreg	equ	0xFE8
  2283                           indf2	equ	0xFDF
  2284                           postinc2	equ	0xFDE
  2285                           fsr2h	equ	0xFDA
  2286                           fsr2l	equ	0xFD9
  2287                           status	equ	0xFD8
  2288                           
  2289 ;; *************** function _Lcd_Cmd *****************
  2290 ;; Defined at:
  2291 ;;		line 25 in file "lcd.h"
  2292 ;; Parameters:    Size  Location     Type
  2293 ;;  a               1    wreg     unsigned char 
  2294 ;; Auto vars:     Size  Location     Type
  2295 ;;  a               1    2[COMRAM] unsigned char 
  2296 ;; Return value:  Size  Location     Type
  2297 ;;                  1    wreg      void 
  2298 ;; Registers used:
  2299 ;;		wreg, status,2, cstack
  2300 ;; Tracked objects:
  2301 ;;		On entry : 0/0
  2302 ;;		On exit  : 0/0
  2303 ;;		Unchanged: 0/0
  2304 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2305 ;;      Params:         0       0       0       0       0       0       0       0       0
  2306 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2307 ;;      Temps:          1       0       0       0       0       0       0       0       0
  2308 ;;      Totals:         2       0       0       0       0       0       0       0       0
  2309 ;;Total ram usage:        2 bytes
  2310 ;; Hardware stack levels used:    1
  2311 ;; Hardware stack levels required when called:    1
  2312 ;; This function calls:
  2313 ;;		_Lcd_Port
  2314 ;; This function is called by:
  2315 ;;		_Lcd_Clear
  2316 ;;		_Lcd_Set_Cursor
  2317 ;;		_Lcd_Init
  2318 ;;		_Lcd_Shift_Right
  2319 ;;		_Lcd_Shift_Left
  2320 ;; This function uses a non-reentrant model
  2321 ;;
  2322                           
  2323                           	psect	text14
  2324  000F6C                     __ptext14:
  2325                           	opt stack 0
  2326  000F6C                     _Lcd_Cmd:
  2327                           	opt stack 28
  2328                           
  2329                           ;incstack = 0
  2330                           ;Lcd_Cmd@a stored from wreg
  2331  000F6C  6E03               	movwf	Lcd_Cmd@a,c
  2332                           
  2333                           ;lcd.h: 27: PORTDbits.RD2 = 0;
  2334  000F6E  9483               	bcf	3971,2,c	;volatile
  2335                           
  2336                           ;lcd.h: 28: Lcd_Port(a);
  2337  000F70  5003               	movf	Lcd_Cmd@a,w,c
  2338  000F72  EC8B  F007         	call	_Lcd_Port
  2339                           
  2340                           ;lcd.h: 29: PORTDbits.RD3 = 1;
  2341  000F76  8683               	bsf	3971,3,c	;volatile
  2342                           
  2343                           ;lcd.h: 30: _delay((unsigned long)((4)*(20000000/4000.0)));
  2344  000F78  0E1A               	movlw	26
  2345  000F7A  6E02               	movwf	??_Lcd_Cmd& (0+255),c
  2346  000F7C  0EF8               	movlw	248
  2347  000F7E                     u897:
  2348  000F7E  2EE8               	decfsz	wreg,f,c
  2349  000F80  D7FE               	bra	u897
  2350  000F82  2E02               	decfsz	??_Lcd_Cmd& (0+255),f,c
  2351  000F84  D7FC               	bra	u897
  2352  000F86  D000               	nop2	
  2353                           
  2354                           ;lcd.h: 31: PORTDbits.RD3 = 0;
  2355  000F88  9683               	bcf	3971,3,c	;volatile
  2356  000F8A  0012               	return		;funcret
  2357  000F8C                     __end_of_Lcd_Cmd:
  2358                           	opt stack 0
  2359                           tblptru	equ	0xFF8
  2360                           tblptrh	equ	0xFF7
  2361                           tblptrl	equ	0xFF6
  2362                           tablat	equ	0xFF5
  2363                           indf0	equ	0xFEF
  2364                           fsr0h	equ	0xFEA
  2365                           fsr0l	equ	0xFE9
  2366                           wreg	equ	0xFE8
  2367                           indf2	equ	0xFDF
  2368                           postinc2	equ	0xFDE
  2369                           fsr2h	equ	0xFDA
  2370                           fsr2l	equ	0xFD9
  2371                           status	equ	0xFD8
  2372                           
  2373 ;; *************** function _Lcd_Port *****************
  2374 ;; Defined at:
  2375 ;;		line 3 in file "lcd.h"
  2376 ;; Parameters:    Size  Location     Type
  2377 ;;  a               1    wreg     unsigned char 
  2378 ;; Auto vars:     Size  Location     Type
  2379 ;;  a               1    0[COMRAM] unsigned char 
  2380 ;; Return value:  Size  Location     Type
  2381 ;;                  1    wreg      void 
  2382 ;; Registers used:
  2383 ;;		wreg
  2384 ;; Tracked objects:
  2385 ;;		On entry : 0/0
  2386 ;;		On exit  : 0/0
  2387 ;;		Unchanged: 0/0
  2388 ;; Data sizes:     COMRAM   BANK0   BANK1   BANK2   BANK3   BANK4   BANK5   BANK6   BANK7
  2389 ;;      Params:         0       0       0       0       0       0       0       0       0
  2390 ;;      Locals:         1       0       0       0       0       0       0       0       0
  2391 ;;      Temps:          0       0       0       0       0       0       0       0       0
  2392 ;;      Totals:         1       0       0       0       0       0       0       0       0
  2393 ;;Total ram usage:        1 bytes
  2394 ;; Hardware stack levels used:    1
  2395 ;; This function calls:
  2396 ;;		Nothing
  2397 ;; This function is called by:
  2398 ;;		_Lcd_Cmd
  2399 ;;		_Lcd_Init
  2400 ;;		_Lcd_Write_Char
  2401 ;; This function uses a non-reentrant model
  2402 ;;
  2403                           
  2404                           	psect	text15
  2405  000F16                     __ptext15:
  2406                           	opt stack 0
  2407  000F16                     _Lcd_Port:
  2408                           	opt stack 28
  2409                           
  2410                           ;incstack = 0
  2411                           ;Lcd_Port@a stored from wreg
  2412  000F16  6E01               	movwf	Lcd_Port@a,c
  2413                           
  2414                           ;lcd.h: 5: if(a & 1)
  2415  000F18  A001               	btfss	Lcd_Port@a,0,c
  2416  000F1A  D002               	goto	l43
  2417                           
  2418                           ;lcd.h: 6: PORTDbits.RD4 = 1;
  2419  000F1C  8883               	bsf	3971,4,c	;volatile
  2420  000F1E  D001               	goto	l797
  2421  000F20                     l43:
  2422                           
  2423                           ;lcd.h: 7: else
  2424                           ;lcd.h: 8: PORTDbits.RD4 = 0;
  2425  000F20  9883               	bcf	3971,4,c	;volatile
  2426  000F22                     l797:
  2427                           
  2428                           ;lcd.h: 10: if(a & 2)
  2429  000F22  A201               	btfss	Lcd_Port@a,1,c
  2430  000F24  D002               	goto	l45
  2431                           
  2432                           ;lcd.h: 11: PORTDbits.RD5 = 1;
  2433  000F26  8A83               	bsf	3971,5,c	;volatile
  2434  000F28  D001               	goto	l801
  2435  000F2A                     l45:
  2436                           
  2437                           ;lcd.h: 12: else
  2438                           ;lcd.h: 13: PORTDbits.RD5 = 0;
  2439  000F2A  9A83               	bcf	3971,5,c	;volatile
  2440  000F2C                     l801:
  2441                           
  2442                           ;lcd.h: 15: if(a & 4)
  2443  000F2C  A401               	btfss	Lcd_Port@a,2,c
  2444  000F2E  D002               	goto	l47
  2445                           
  2446                           ;lcd.h: 16: PORTDbits.RD6 = 1;
  2447  000F30  8C83               	bsf	3971,6,c	;volatile
  2448  000F32  D001               	goto	l805
  2449  000F34                     l47:
  2450                           
  2451                           ;lcd.h: 17: else
  2452                           ;lcd.h: 18: PORTDbits.RD6 = 0;
  2453  000F34  9C83               	bcf	3971,6,c	;volatile
  2454  000F36                     l805:
  2455                           
  2456                           ;lcd.h: 20: if(a & 8)
  2457  000F36  A601               	btfss	Lcd_Port@a,3,c
  2458  000F38  D002               	goto	l49
  2459                           
  2460                           ;lcd.h: 21: PORTDbits.RD7 = 1;
  2461  000F3A  8E83               	bsf	3971,7,c	;volatile
  2462  000F3C  0012               	return	
  2463  000F3E                     l49:
  2464                           
  2465                           ;lcd.h: 22: else
  2466                           ;lcd.h: 23: PORTDbits.RD7 = 0;
  2467  000F3E  9E83               	bcf	3971,7,c	;volatile
  2468  000F40  0012               	return	
  2469  000F42                     __end_of_Lcd_Port:
  2470                           	opt stack 0
  2471                           tblptru	equ	0xFF8
  2472                           tblptrh	equ	0xFF7
  2473                           tblptrl	equ	0xFF6
  2474                           tablat	equ	0xFF5
  2475                           indf0	equ	0xFEF
  2476                           fsr0h	equ	0xFEA
  2477                           fsr0l	equ	0xFE9
  2478                           wreg	equ	0xFE8
  2479                           indf2	equ	0xFDF
  2480                           postinc2	equ	0xFDE
  2481                           fsr2h	equ	0xFDA
  2482                           fsr2l	equ	0xFD9
  2483                           status	equ	0xFD8
  2484                           tblptru	equ	0xFF8
  2485                           tblptrh	equ	0xFF7
  2486                           tblptrl	equ	0xFF6
  2487                           tablat	equ	0xFF5
  2488                           indf0	equ	0xFEF
  2489                           fsr0h	equ	0xFEA
  2490                           fsr0l	equ	0xFE9
  2491                           wreg	equ	0xFE8
  2492                           indf2	equ	0xFDF
  2493                           postinc2	equ	0xFDE
  2494                           fsr2h	equ	0xFDA
  2495                           fsr2l	equ	0xFD9
  2496                           status	equ	0xFD8
  2497                           
  2498                           	psect	rparam
  2499  0000                     tblptru	equ	0xFF8
  2500                           tblptrh	equ	0xFF7
  2501                           tblptrl	equ	0xFF6
  2502                           tablat	equ	0xFF5
  2503                           indf0	equ	0xFEF
  2504                           fsr0h	equ	0xFEA
  2505                           fsr0l	equ	0xFE9
  2506                           wreg	equ	0xFE8
  2507                           indf2	equ	0xFDF
  2508                           postinc2	equ	0xFDE
  2509                           fsr2h	equ	0xFDA
  2510                           fsr2l	equ	0xFD9
  2511                           status	equ	0xFD8


Data Sizes:
    Strings     51
    Constant    0
    Data        0
    BSS         0
    Persistent  0
    Stack       0

Auto Spaces:
    Space          Size  Autos    Used
    COMRAM           95     95      95
    BANK0           160      0       0
    BANK1           256      0       0
    BANK2           256      0       0
    BANK3           239      0       0
    BANK4           256      0       0
    BANK5           256      0       0
    BANK6           256      0       0
    BANK7           256      0       0

Pointer List with Targets:

    strncmp@s2	PTR const unsigned char  size(2) Largest target is 17
		 -> main@part2(COMRAM[17]), main@part1(COMRAM[17]), 

    strncmp@s1	PTR const unsigned char  size(2) Largest target is 17
		 -> STR_5(CODE[17]), STR_4(CODE[17]), STR_3(CODE[17]), STR_2(CODE[17]), 

    utoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> main@distance_str(COMRAM[16]), 

    sp__utoa	PTR unsigned char  size(2) Largest target is 16
		 -> main@distance_str(COMRAM[16]), 

    itoa@buf	PTR unsigned char  size(2) Largest target is 16
		 -> main@distance_str(COMRAM[16]), 

    itoa@cp	PTR unsigned char  size(2) Largest target is 16
		 -> main@distance_str(COMRAM[16]), 

    sp__itoa	PTR unsigned char  size(2) Largest target is 16
		 -> main@distance_str(COMRAM[16]), 

    sp__grab_16_from_serial	PTR unsigned char  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    sp__malloc	PTR void  size(2) Largest target is 2047
		 -> RAM(DATA[2047]), 

    Lcd_Write_String@a	PTR unsigned char  size(2) Largest target is 17
		 -> main@part2(COMRAM[17]), main@part1(COMRAM[17]), main@distance_str(COMRAM[16]), STR_1(CODE[17]), 


Critical Paths under _main in COMRAM

    _main->_itoa
    _itoa->_utoa
    _utoa->___lwdiv
    _Set_LED->_var_delay_us
    _Lcd_Write_String->_Lcd_Write_Char
    _Lcd_Write_Char->_Lcd_Port
    _Lcd_Set_Cursor->_Lcd_Cmd
    _Lcd_Init->_Lcd_Cmd
    _Lcd_Clear->_Lcd_Cmd
    _Lcd_Cmd->_Lcd_Port

Critical Paths under _main in BANK0

    None.

Critical Paths under _main in BANK1

    None.

Critical Paths under _main in BANK2

    None.

Critical Paths under _main in BANK3

    None.

Critical Paths under _main in BANK4

    None.

Critical Paths under _main in BANK5

    None.

Critical Paths under _main in BANK6

    None.

Critical Paths under _main in BANK7

    None.

Call Graph Tables:

 ---------------------------------------------------------------------------------
 (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
 ---------------------------------------------------------------------------------
 (0) _main                                                71    71      0    5807
                                             24 COMRAM    71    71      0
                          _Lcd_Clear
                           _Lcd_Init
                     _Lcd_Set_Cursor
                   _Lcd_Write_String
                            _Set_LED
                               _itoa
                          _read_char
                            _strncmp
 ---------------------------------------------------------------------------------
 (1) _strncmp                                              8     2      6    1046
                                              0 COMRAM     8     2      6
 ---------------------------------------------------------------------------------
 (1) _read_char                                            0     0      0       0
 ---------------------------------------------------------------------------------
 (1) _itoa                                                 8     2      6    1698
                                             16 COMRAM     8     2      6
                               _utoa
 ---------------------------------------------------------------------------------
 (2) _utoa                                                 9     3      6    1307
                                              7 COMRAM     9     3      6
                            ___lwdiv
                            ___lwmod
 ---------------------------------------------------------------------------------
 (3) ___lwmod                                              5     1      4     311
                                              0 COMRAM     5     1      4
 ---------------------------------------------------------------------------------
 (3) ___lwdiv                                              7     3      4     466
                                              0 COMRAM     7     3      4
 ---------------------------------------------------------------------------------
 (1) _Set_LED                                              8     2      6     862
                                              5 COMRAM     8     2      6
                       _var_delay_us
 ---------------------------------------------------------------------------------
 (2) _var_delay_us                                         5     3      2     502
                                              0 COMRAM     5     3      2
 ---------------------------------------------------------------------------------
 (1) _Lcd_Write_String                                     6     4      2     514
                                              4 COMRAM     6     4      2
                     _Lcd_Write_Char
 ---------------------------------------------------------------------------------
 (2) _Lcd_Write_Char                                       3     3      0     120
                                              1 COMRAM     3     3      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Set_Cursor                                       5     4      1     801
                                              3 COMRAM     5     4      1
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (1) _Lcd_Init                                             1     1      0     135
                                              3 COMRAM     1     1      0
                            _Lcd_Cmd
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (1) _Lcd_Clear                                            0     0      0      75
                            _Lcd_Cmd
 ---------------------------------------------------------------------------------
 (2) _Lcd_Cmd                                              2     2      0      75
                                              1 COMRAM     2     2      0
                           _Lcd_Port
 ---------------------------------------------------------------------------------
 (3) _Lcd_Port                                             1     1      0      60
                                              0 COMRAM     1     1      0
 ---------------------------------------------------------------------------------
 Estimated maximum stack depth 3
 ---------------------------------------------------------------------------------

 Call Graph Graphs:

 _main (ROOT)
   _Lcd_Clear
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Init
     _Lcd_Cmd
       _Lcd_Port
     _Lcd_Port
   _Lcd_Set_Cursor
     _Lcd_Cmd
       _Lcd_Port
   _Lcd_Write_String
     _Lcd_Write_Char
       _Lcd_Port
   _Set_LED
     _var_delay_us
   _itoa
     _utoa
       ___lwdiv
       ___lwmod
   _read_char
   _strncmp

 Address spaces:
Name               Size   Autos  Total    Cost      Usage
BITCOMRAM           5F      0       0       0        0.0%
EEDATA             100      0       0       0        0.0%
NULL                 0      0       0       0        0.0%
CODE                 0      0       0       0        0.0%
COMRAM              5F     5F      5F       1      100.0%
STACK                0      0       0       2        0.0%
DATA                 0      0       0       3        0.0%
BITBANK0            A0      0       0       4        0.0%
BANK0               A0      0       0       5        0.0%
BITBANK1           100      0       0       6        0.0%
BANK1              100      0       0       7        0.0%
BITBANK2           100      0       0       8        0.0%
BANK2              100      0       0       9        0.0%
BANK3               EF      0       0      10        0.0%
ABS                  0      0       0      11        0.0%
BITBANK3            EF      0       0      12        0.0%
BITBANK4           100      0       0      13        0.0%
BANK4              100      0       0      14        0.0%
BITBANK5           100      0       0      15        0.0%
BANK5              100      0       0      16        0.0%
BITBANK6           100      0       0      17        0.0%
BANK6              100      0       0      18        0.0%
BITBANK7           100      0       0      19        0.0%
BANK7              100      0       0      20        0.0%
BIGRAM_1           400      0       0      21        0.0%
BIGRAM             3EE      0       0      22        0.0%
BITSFR_5             0      0       0     200        0.0%
SFR_5                0      0       0     200        0.0%
BITSFR_4             0      0       0     200        0.0%
SFR_4                0      0       0     200        0.0%
BITSFR_3             0      0       0     200        0.0%
SFR_3                0      0       0     200        0.0%
BITSFR_2             0      0       0     200        0.0%
SFR_2                0      0       0     200        0.0%
BITSFR_1             0      0       0     200        0.0%
SFR_1                0      0       0     200        0.0%
BITSFR               0      0       0     200        0.0%
SFR                  0      0       0     200        0.0%


Microchip Technology PIC18 Macro Assembler V1.42 build -159332390 
Symbol Table                                                                                   Mon Jul 10 23:09:39 2017

                       l43 0F20                         l45 0F2A                         l47 0F34  
                       l49 0F3E                         l84 0F98                         l85 0F8E  
                      l101 0F4C                        l123 0974                        l119 08E4  
                      l801 0F2C                        l805 0F36                        l565 0E00  
                      l486 0BA0                        l575 0ED4                        l797 0F22  
                      u580 0D0A                        u660 08F2                        u590 0D3E  
                      u807 0890                        u817 08D2                        u587 0D00  
                      u827 08DC                        u668 08F4                        u597 0D34  
                      u837 0930                        u847 0EFA                        u857 0F0C  
                      u867 0D52                        u877 0D66                        u887 0D7C  
                      u897 0F7E                        wreg 000FE8               __CFG_FOSC$HS 000000  
             __CFG_LVP$OFF 000000               __CFG_WDT$OFF 000000                       l1301 0CDE  
                     l1215 0DCE                       l1305 0D12                       l1217 0DD6  
                     l1251 0F56                       l1227 0DF6                       l1219 0DDA  
                     l1243 0ECA                       l1235 0EAA                       l1237 0EB2  
                     l1421 0954                       l1239 0EB6                       l1255 0B28  
                     l1343 0CB2                       l1335 0C58                       l1265 0B62  
                     l1329 0E7E                       l1345 0CBA                       l1291 0E32  
                     l1339 0C84                       l1451 09EC                       l1443 09D2  
                     l1453 09FC                       l1437 09BA                       l1429 0982  
                     l1471 0A6E                       l1439 09C2                       l1473 0A76  
                     l1457 0A02                       l1491 0AB6                       l1467 0A46  
                     l1485 0AA0                       l1477 0A86                       l1487 0AB0  
                     l1399 08CE                       l1499 0AF6                       STR_1 0801  
                     STR_2 0812                       STR_3 0823                       STR_4 0812  
                     STR_5 0823              __CFG_DEBUG$ON 000000          ?_Lcd_Write_String 0005  
                     _main 0836                       _itoa 0E5A                       fsr0h 000FEA  
                     indf0 000FEF                       fsr2h 000FDA                       fsr0l 000FE9  
                     indf2 000FDF                       fsr2l 000FD9                       _utoa 0B20  
                     start 0002         ??_Lcd_Write_String 0007            __end_of_Lcd_Cmd 0F8C  
            __CFG_MCLRE$ON 000000               ___param_bank 000000            __end_of_Set_LED 0C56  
             main@distance 004F                      ?_main 0001                      ?_itoa 0011  
                    ?_utoa 0008            __end_of___lwdiv 0E0A            __end_of___lwmod 0EDE  
                    _RCREG 000FAE                      _RCSTA 000FAB                      _SPBRG 000FAF  
  __size_of_Lcd_Set_Cursor 0050                      _TRISB 000F93                      _TRISD 000F95  
                    _TRISE 000F96                      _TXREG 000FAD                      _TXSTA 000FAC  
                    main@i 0059                      tablat 000FF5                      utoa@c 0010  
                    utoa@v 000E                      status 000FD8            __end_of_strncmp 0CD4  
         __end_of_Lcd_Init 0DB8           __end_of_Lcd_Port 0F42            __initialization 0FAE  
             __end_of_main 0B20               __end_of_itoa 0E9C               __end_of_utoa 0BC4  
                   ??_main 0019                     ??_itoa 0017                     ??_utoa 000E  
       __size_of_Lcd_Clear 000E              __activetblptr 000002                  ??_Lcd_Cmd 0002  
  __size_of_Lcd_Write_Char 0038                  ??_Set_LED 000C              main@red_value 0053  
                ??___lwdiv 0005                  ??___lwmod 0005              main@temp_char 005F  
                   itoa@cp 0017               __mediumconst 0000                     tblptrh 000FF7  
                   tblptrl 000FF6                     tblptru 000FF8                  ??_strncmp 0007  
          Lcd_Set_Cursor@a 0005            Lcd_Set_Cursor@b 0004            Lcd_Set_Cursor@y 0007  
          Lcd_Set_Cursor@z 0006                 __accesstop 0060    __end_of__initialization 0FAE  
        __end_of_Lcd_Clear 0FAE              ___rparam_used 000001             __pcstackCOMRAM 0001  
           _Lcd_Set_Cursor 0E0A                  ?_Lcd_Init 0001                  ?_Lcd_Port 0001  
           main@blue_value 0055         __size_of_read_char 0014  __size_of_Lcd_Write_String 0072  
   __end_of_Lcd_Set_Cursor 0E5A           main@distance_str 001B                 ??_Lcd_Init 0004  
               ??_Lcd_Port 0001             _Lcd_Write_Char 0EDE                    _Lcd_Cmd 0F6C  
                  _Set_LED 0BC4                    __Hparam 0000                    __Lparam 0000  
            ?_var_delay_us 0001                    ___lwdiv 0DB8                    ___lwmod 0E9C  
             __psmallconst 0800                    __pcinit 0FAE                    __ramtop 0800  
          ?_Lcd_Set_Cursor 0004                    __ptext0 0836                    __ptext1 0C56  
                  __ptext2 0F8C                    __ptext3 0E5A                    __ptext4 0B20  
                  __ptext5 0E9C                    __ptext6 0DB8                    __ptext7 0BC4  
                  __ptext8 0F42                    __ptext9 0CD4          __end_of_read_char 0FA0  
   __end_of_Lcd_Write_Char 0F16                    _strncmp 0C56       end_of_initialization 0FAE  
                  itoa@buf 0011                    itoa@val 0013              __Lmediumconst 0000  
           ??_var_delay_us 0003                  _RCSTAbits 000FAB                    postinc2 000FDE  
                Lcd_Port@a 0001             var_delay_us@us 0001                    utoa@buf 0008  
                  utoa@val 000A                  _PORTDbits 000F83                  _PORTEbits 000F84  
                _TRISCbits 000F94            ?_Lcd_Write_Char 0001          Lcd_Write_String@a 0005  
        Lcd_Write_String@i 0009                  _TXSTAbits 000FAC                  _Lcd_Clear 0FA0  
              _BAUDCONbits 000FB8           _Lcd_Write_String 0CD4        start_initialization 0FAE  
        __size_of_Lcd_Init 0072          __size_of_Lcd_Port 002C                 ?_Lcd_Clear 0001  
          Lcd_Write_Char@a 0004            Lcd_Write_Char@y 0003       __end_of_var_delay_us 0F6C  
                 ?_Lcd_Cmd 0001                   ?_Set_LED 0006           ___lwdiv@dividend 0001  
         ??_Lcd_Set_Cursor 0005                   ?___lwdiv 0001                   ?___lwmod 0001  
              __smallconst 0800           ___lwdiv@quotient 0005                  _read_char 0F8C  
                 ?_strncmp 0001            main@green_value 0057                   _PIE1bits 000F9D  
                 Lcd_Cmd@a 0003                   _PIR1bits 000F9E                ??_Lcd_Clear 0004  
            var_delay_us@i 0004                  main@i_546 005B                  main@i_549 005D  
         ??_Lcd_Write_Char 0002                  main@part1 002B                  main@part2 003C  
                 _Lcd_Init 0D46                   _Lcd_Port 0F16                 ?_read_char 0001  
 __end_of_Lcd_Write_String 0D46           __size_of_Lcd_Cmd 0020                   __Hrparam 0000  
         __size_of_Set_LED 0092                   __Lrparam 0000           __size_of___lwdiv 0052  
         __size_of___lwmod 0042      __size_of_var_delay_us 002A            ___lwdiv@divisor 0003  
          ___lwdiv@counter 0007                   __ptext10 0EDE                   __ptext11 0E0A  
                 __ptext12 0D46                   __ptext13 0FA0                   __ptext14 0F6C  
                 __ptext15 0F16           __size_of_strncmp 007E              __size_of_main 02EA  
            __size_of_itoa 0042              __size_of_utoa 00A4                 strncmp@len 0005  
             _var_delay_us 0F42                   main@time 004D                   itoa@base 0015  
              ??_read_char 0001         Lcd_Write_Char@temp 0002           ___lwmod@dividend 0001  
       Set_LED@green_value 000A          Set_LED@blue_value 0008                  strncmp@s1 0001  
                strncmp@s2 0003         Lcd_Set_Cursor@temp 0008                   utoa@base 000C  
          ___lwmod@divisor 0003            ___lwmod@counter 0005           Set_LED@red_value 0006  
